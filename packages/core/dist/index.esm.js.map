{"version":3,"file":"index.esm.js","sources":["../src/debug.ts","../src/numeric.ts","../src/index.ts"],"sourcesContent":["/**\n * core/debug - debugging helpers\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nconst DEBUG_MODE = true;\n\n/**\n * asserts a condition to be true or throw an error otherwise\n * @param cond A condition that can be evaluated to true or false\n * @param msg Error message that will be thrown if cond is false\n */\nexport function assert(cond: any, msg?: string) {\n\tif (DEBUG_MODE && !cond) {\n\t\tconsole.error(msg || \"assertion failed\");\n\t\tthrow new Error(msg || \"assertion failed\");\n\t}\n}\n","/**\n * core/numeric - numeric types, traits and array helpers\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { TypedArrayConstructor } from \"./array\";\n\n/**\n * Interface describing a binary representation of a number including its\n * limits, storage requirements and associated TypedArray constructor.\n */\nexport interface NumericType {\n\treadonly min: number;\n\treadonly max: number;\n\treadonly signed: boolean;\n\n\treadonly byteSize: number;\n\treadonly arrayType: TypedArrayConstructor;\n}\n\n/**\n * Traits of unsigned 8-bit integer numbers.\n */\nexport const UInt8: NumericType = {\n\tmin: 0,\n\tmax: 255,\n\tsigned: false,\n\tbyteSize: 1,\n\tarrayType: Uint8Array\n};\n\n/**\n * Traits of unsigned 8-bit clamped integer numbers.\n */\nexport const UInt8Clamped: NumericType = {\n\tmin: 0,\n\tmax: 255,\n\tsigned: false,\n\tbyteSize: 1,\n\tarrayType: Uint8ClampedArray\n};\n\n/**\n * Traits of signed 8-bit integer numbers.\n */\nexport const SInt8: NumericType = {\n\tmin: -128,\n\tmax: 127,\n\tsigned: true,\n\tbyteSize: 1,\n\tarrayType: Int8Array\n};\n\n/**\n * Traits of unsigned 16-bit integer numbers.\n */\nexport const UInt16: NumericType = {\n\tmin: 0,\n\tmax: 65535,\n\tsigned: false,\n\tbyteSize: 2,\n\tarrayType: Uint16Array\n};\n\n/**\n * Traits of signed 16-bit integer numbers.\n */\nexport const SInt16: NumericType = {\n\tmin: -32768,\n\tmax: 32767,\n\tsigned: true,\n\tbyteSize: 2,\n\tarrayType: Int16Array\n};\n\n/**\n * Traits of unsigned 32-bit integer numbers.\n */\nexport const UInt32: NumericType = {\n\tmin: 0,\n\tmax: 4294967295,\n\tsigned: false,\n\tbyteSize: 4,\n\tarrayType: Uint32Array\n};\n\n/**\n * Traits of signed 32-bit integer numbers.\n */\nexport const SInt32: NumericType = {\n\tmin: -2147483648,\n\tmax: 2147483647,\n\tsigned: true,\n\tbyteSize: 4,\n\tarrayType: Int32Array\n};\n\n/**\n * Traits of 32-bit floating point numbers.\n */\nexport const Float: NumericType = {\n\tmin: -340282346638528859811704183484516925440.0,\n\tmax: 340282346638528859811704183484516925440.0,\n\tsigned: true,\n\tbyteSize: 4,\n\tarrayType: Float32Array\n};\n\n/**\n * Traits of 64-bit floating point numbers.\n */\nexport const Double: NumericType = {\n\tmin: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0,\n\tmax: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0,\n\tsigned: true,\n\tbyteSize: 8,\n\tarrayType: Float64Array\n};\n","/**\n * @stardazed/core - common types and helpers\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nexport * from \"./debug\";\nexport * from \"./array\";\nexport * from \"./numeric\";\n"],"names":[],"mappings":"AAAA;;;;;;AAOA,AAEA;;;;;AAKA,gBAAuB,IAAS,EAAE,GAAY;IAC7C,IAAI,AAAc,CAAC,IAAI,EAAE;QACxB,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,kBAAkB,CAAC,CAAC;QACzC,MAAM,IAAI,KAAK,CAAC,GAAG,IAAI,kBAAkB,CAAC,CAAC;KAC3C;CACD;;ACnBD;;;;;;;;;AAyBA,MAAa,KAAK,GAAgB;IACjC,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,GAAG;IACR,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,UAAU;CACrB,CAAC;;;;AAKF,MAAa,YAAY,GAAgB;IACxC,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,GAAG;IACR,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,iBAAiB;CAC5B,CAAC;;;;AAKF,MAAa,KAAK,GAAgB;IACjC,GAAG,EAAE,CAAC,GAAG;IACT,GAAG,EAAE,GAAG;IACR,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,SAAS;CACpB,CAAC;;;;AAKF,MAAa,MAAM,GAAgB;IAClC,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,KAAK;IACV,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,WAAW;CACtB,CAAC;;;;AAKF,MAAa,MAAM,GAAgB;IAClC,GAAG,EAAE,CAAC,KAAK;IACX,GAAG,EAAE,KAAK;IACV,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,UAAU;CACrB,CAAC;;;;AAKF,MAAa,MAAM,GAAgB;IAClC,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,UAAU;IACf,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,WAAW;CACtB,CAAC;;;;AAKF,MAAa,MAAM,GAAgB;IAClC,GAAG,EAAE,CAAC,UAAU;IAChB,GAAG,EAAE,UAAU;IACf,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,UAAU;CACrB,CAAC;;;;AAKF,MAAa,KAAK,GAAgB;IACjC,GAAG,EAAE,CAAC,yCAAyC;IAC/C,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,YAAY;CACvB,CAAC;;;;AAKF,MAAa,MAAM,GAAgB;IAClC,GAAG,EAAE,CAAC,uTAAuT;IAC7T,GAAG,EAAE,uTAAuT;IAC5T,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,CAAC;IACX,SAAS,EAAE,YAAY;CACvB;;ACvHD;;;;;GAKG;;;;"}