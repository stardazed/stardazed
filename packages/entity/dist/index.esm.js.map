{"version":3,"file":"index.esm.js","sources":["../src/linear-range.ts","../../container/src/algorithm.ts","../../container/src/array.ts","../../core/src/debug.ts","../../math/src/common.ts","../../math/src/vec2.ts","../../math/src/vec3.ts","../../math/src/vec4.ts","../../math/src/mat3.ts","../../math/src/quat.ts","../../math/src/mat2.ts","../../math/src/mat2d.ts","../../math/src/mat4.ts","../../core/src/numeric.ts","../../math/src/aabb.ts","../../container/src/deque.ts","../../container/src/sortedarray.ts","../src/array-range.ts","../src/set-range.ts","../../core/src/array.ts","../src/entity.ts","../src/index.ts"],"sourcesContent":["/**\n * entity/linear-range - simplest instance range\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { Instance, InstanceIterator, InstanceRange } from \"./instance\";\n\nclass InstanceLinearIterator<C> implements InstanceIterator<C> {\n\tcurrent: Instance<C>;\n\n\tconstructor(first: Instance<C>, private last_: Instance<C>) {\n\t\tthis.current = first as number - 1;\n\t}\n\n\tnext() {\n\t\tthis.current = (this.current as number + 1) as Instance<C>;\n\t\treturn this.current > 0 && this.current <= this.last_;\n\t}\n}\n\nexport class InstanceLinearRange<C> implements InstanceRange<C> {\n\tconstructor(private first_: Instance<C>, private last_: Instance<C>) {\n\t\t// valid ranges require first >= 1 and last >= first\n\t\t// invalid ranges are just treated as empty\n\t}\n\n\tget empty() {\n\t\treturn this.first_ < 1 || this.last_ < this.first_;\n\t}\n\n\tget front() { return this.first_; }\n\tget back() { return this.last_; }\n\n\thas(inst: Instance<C>): boolean {\n\t\treturn inst >= this.first_ && inst <= this.last_;\n\t}\n\n\tmakeIterator(): InstanceIterator<C> {\n\t\treturn new InstanceLinearIterator(this.first_, this.last_);\n\t}\n\n\tforEach(fn: (inst: Instance<C>) => void, thisObj?: any): void {\n\t\tlet index = this.first_ as number;\n\t\tconst end = this.last_ as number;\n\n\t\tif (index > 0) {\n\t\t\twhile (index <= end) {\n\t\t\t\tfn.call(thisObj, index as Instance<C>);\n\t\t\t\t++index;\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * container/algorithm - some container-oriented algorithms\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\n/**\n * Generate a hash value (a number containing a 32-bit signed int) for a string.\n * Based on Java's string hashing algorithm adapted for how JS stores strings.\n * @param s The string to hash\n */\nexport function hashString(s: string) {\n\tif (s.length === 0) {\n\t\treturn 0;\n\t}\n\tlet hash = 0;\n\tfor (let i = 0; i < s.length; ++i) {\n\t\tconst chr = s.charCodeAt(i);\n\t\t// JS charcodes are 16-bit, hash higher-order byte first (often 0)\n\t\thash = (((hash << 5) - hash) + ((chr >> 8) & 0xFF)) | 0;\n\t\t// hash lower-order byte\n\t\thash = (((hash << 5) - hash) + (chr & 0xFF)) | 0;\n\t}\n\treturn hash;\n}\n\n/**\n * Copy all or a specified set of values from source to dest, including undefined values.\n * Thus, this may unset values in the destination object as well as set or change them.\n * @param dest The object to overwrite values in\n * @param source The source object to read values from\n * @param keys Optional explicit set of keys to copy, defaults to all values in source\n */\nexport function override<T extends object, K extends keyof T>(dest: T, source: Partial<T>, keys?: K[]) {\n\tif (keys === undefined) {\n\t\tkeys = Object.keys(source) as K[];\n\t}\n\tfor (const k of keys) {\n\t\tdest[k] = source[k] as T[K];\n\t}\n\treturn dest;\n}\n\nexport type MappingFunc<T, U> = (t: T, k: string) => U;\n\n/**\n * Map each keyed propertiy of obj using the provided function returning a new object.\n * @param obj The source object to convert\n * @param mapper A conversion function that takes each keyed prop of obj and returns a converted value\n */\nexport function mapObject<T, K extends keyof T, U>(obj: T, mapper: MappingFunc<T[K], U>) {\n\tconst result = {} as Record<keyof T, U>;\n\tfor (const key in obj) {\n\t\tif (obj.hasOwnProperty(key)) {\n\t\t\tresult[key] = mapper(obj[key] as T[K], key);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport type ArrayFields<T> = { [P in keyof T]: T[P][]; };\n\nexport interface GroupedItems<T extends object> {\n\t[name: string]: ArrayFields<T>;\n}\n\n/**\n * Takes an array of isomorphic objects and groups the values of the fields together keyed\n * by a field name provided as group. The grouped values are deduplicated as well.\n * @example Given ts = [{n:\"a\", v:1}, {n:\"a\", v:2}, {n:\"b\", v:50}] and group = \"n\"\n * the output will be: { a:{v:[1,2]}, b:{v:[50]} }\n * @param group Name of the field in the items that will be used to group the other fields by\n * @param ts List of objects that have will be grouped by {{group}}\n */\nexport function groupFieldsBy<T extends object, K extends keyof T>(group: K, ts: T[]) {\n\treturn ts.reduce((res, val) => {\n\t\tconst key = val[group] as any as string; // FIXME: check with TS group why K is not essentially a string\n\t\tlet coll: ArrayFields<T>;\n\t\tif (!(key in res)) {\n\t\t\tcoll = {} as ArrayFields<T>;\n\t\t\tres[key] = coll;\n\t\t}\n\t\telse {\n\t\t\tcoll = res[key];\n\t\t}\n\t\tfor (const k in val) {\n\t\t\tif (k !== group && val.hasOwnProperty(k)) {\n\t\t\t\tif (!(k in coll)) {\n\t\t\t\t\tcoll[k] = [];\n\t\t\t\t}\n\t\t\t\tif (coll[k]!.indexOf(val[k]) === -1) {\n\t\t\t\t\tcoll[k]!.push(val[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}, {} as GroupedItems<T>);\n}\n\n/**\n * Standard string sort comparison function, used when comparing\n * multiple string fields together or when using non-standars sort.\n * @param a left string to compare\n * @param b right string to compare\n */\nexport function stringOrder(a: string, b: string) {\n\treturn a < b ? -1 : ((a === b) ? 0 : 1);\n}\n\n/**\n * A function that returns the relative order of 2 items.\n * If a < b, it returns a number < 0\n * If a = b, it returns 0\n * If a > b, it returns a number > 0\n */\nexport type CompareFn<T> = (a: Readonly<T>, b: Readonly<T>) => number;\n\n/**\n * In-place stable insertion sort a range of elements inside an array\n * @internal\n * @param a The array to sort\n * @param l Left index (inclusive) inside {a} of the range to operate on\n * @param r Right index (exclusive) inside {a} of the range to operate on\n * @param pred Function that returns the relative order of 2 items\n */\nfunction insertionSortInternal<T>(a: T[], l: number, r: number, pred: CompareFn<T>) {\n\tconst len = r - l;\n\tfor (let i = 1; i < len + 1; i++) {\n\t\tconst temp = a[i + l];\n\t\tlet j = i;\n\t\twhile ((j > 0) && (pred(a[j + l - 1], temp) > 0)) {\n\t\t\ta[j + l] = a[j + l - 1];\n\t\t\tj -= 1;\n\t\t}\n\t\ta[j + l] = temp;\n\t}\n}\n\n/**\n * In-place stable insertion sort for homogeneous standard arrays.\n * @param a The array to be sorted (in-place)\n * @param pred Function that returns the relative order of 2 items\n * @returns The sorted array\n */\nexport function insertionSort<T>(a: T[], pred: CompareFn<T>) {\n\tinsertionSortInternal(a, 0, a.length - 1, pred);\n\treturn a;\n}\n\n/**\n * Standard merge of two sorted half arrays into a single sorted array.\n * @internal\n * @param merged Destination array\n * @param start Index into {merged} to start inserting\n * @param left Left range of items\n * @param startLeft Index into {left} to start from\n * @param sizeLeft Count of items in {left} to process\n * @param right Right range of items\n * @param startRight Index into {right} to start from\n * @param sizeRight Count of items in {right} to process\n * @param pred Function that returns the relative order of 2 items\n */\nfunction merge<T>(\n\tmerged: T[], start: number,\n\tleft: T[], startLeft: number, sizeLeft: number, \n\tright: T[], startRight: number, sizeRight: number,\n\tpred: CompareFn<T>\n) {\n\tconst totalSize = sizeLeft + sizeRight;\n\tconst endMerged = start + totalSize;\n\tconst endLeft = startLeft + sizeLeft;\n\tconst endRight = startRight + sizeRight;\n\tfor (let i = startLeft, j = startRight, k = start; k < endMerged; k++) {\n\t\t// if reached end of first half array, run through the loop \n\t\t// filling in only from the second half array\n\t\tif (i === endLeft) {\n\t\t\tmerged[k] = right[j++];\n\t\t\tcontinue;\n\t\t}\n\t\t// if reached end of second half array, run through the loop \n\t\t// filling in only from the first half array\n\t\tif (j === endRight) {\n\t\t\tmerged[k] = left[i++];\n\t\t\tcontinue;\n\t\t}\n\t\t// merged array is filled with the smaller or equal element of the two \n\t\t// arrays, in order, ensuring a stable sort\n\t\tmerged[k] = (pred(left[i], right[j]) <= 0) ?\n\t\t\t\t\tleft[i++] : right[j++];\n\t}\n}\n\n/**\n * Merge sort data during merging without the additional copying back to array.\n * All data movement is done during the course of the merges.\n * @internal\n * @param a Source array\n * @param b Duplicate of source array\n * @param l Left index (inclusive) inside {a} of the range to operate on\n * @param r Right index (exclusive) inside {a} of the range to operate on\n * @param pred Function that returns the relative order of 2 items\n */\nfunction mergeSortInternal<T>(a: T[], b: T[], l: number, r: number, pred: CompareFn<T>) {\n\tif (r <= l) {\n\t\treturn;\n\t}\n\tif (r - l <= 10) {\n\t\tinsertionSortInternal(a, l, r, pred);\n\t\treturn;\n\t}\n\tconst m = ((l + r) / 2) >>> 0;\n\t// switch arrays to msort b thus recursively writing results to b\n\tmergeSortInternal(b, a, l, m, pred); // merge sort left\n\tmergeSortInternal(b, a, m + 1, r, pred); // merge sort right\n\t// merge partitions of b into a\n\tmerge(a, l, b, l, m - l + 1, b, m + 1, r - m, pred); // merge\n}\n\n/**\n * In-place stable merge sort for homogeneous standard arrays.\n * @param a The array to be sorted (in-place)\n * @param pred Function that returns the relative order of 2 items\n * @returns The sorted array\n */\nexport function mergeSort<T>(a: T[], pred: CompareFn<T>) {\n\tconst b = a.slice(0);\n\tmergeSortInternal(a, b, 0, a.length - 1, pred);\n\treturn a;\n}\n\n/**\n * @alias The common stable sort algorithm.\n */\nexport const stableSort = mergeSort;\n\n/**\n * Remove all duplicates found in the source array leaving only the first\n * instance of each individual element, leaving the order of the remaining\n * elements intact. Elements can optionally be given an explicit comparison proxy\n * by means of a provided helper function.\n * @param arr Source array\n * @param idGen Optional function to provide a unique identifier for each item\n */\nexport function stableUnique<T, U>(arr: T[], idGen?: (t: T) => U) {\n\tconst seen = new Set<T | U>();\n\treturn arr.filter(val => {\n\t\tconst key = idGen ? idGen(val) : val;\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n","/**\n * container/array - helpers to manage mostly dynamic typed arrays\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { Float2, Float3, Float3x3, Float4, Float4x4, MutableArrayLike, TypedArray } from \"@stardazed/core\";\n\nexport function copyElementRange<T, A extends MutableArrayLike<T>>(dest: A, destOffset: number, src: ArrayLike<T>, srcOffset: number, srcCount: number) {\n\tfor (let ix = 0; ix < srcCount; ++ix) {\n\t\tdest[destOffset++] = src[srcOffset++];\n\t}\n\treturn dest;\n}\n\n\nexport function fill<T, A extends MutableArrayLike<T>>(dest: A, value: T, count: number, offset = 0) {\n\tfor (let ix = 0; ix < count; ++ix) {\n\t\tdest[ix + offset] = value;\n\t}\n\treturn dest;\n}\n\n\nexport function appendArrayInPlace<T>(dest: T[], source: T[]) {\n\tconst MAX_BLOCK_SIZE = 65535;\n\n\tlet offset = 0;\n\tlet itemsLeft = source.length;\n\n\tif (itemsLeft <= MAX_BLOCK_SIZE) {\n\t\tdest.push.apply(dest, source);\n\t}\n\telse {\n\t\twhile (itemsLeft > 0) {\n\t\t\tconst pushCount = Math.min(MAX_BLOCK_SIZE, itemsLeft);\n\t\t\tconst subSource = source.slice(offset, offset + pushCount);\n\t\t\tdest.push.apply(dest, subSource);\n\t\t\titemsLeft -= pushCount;\n\t\t\toffset += pushCount;\n\t\t}\n\t}\n\treturn dest;\n}\n\n\n// -- single element ref, copy and set methods, mostly meant for accessors of components with MABs\n\nexport function refIndexedVec2(data: TypedArray, index: number): TypedArray {\n\treturn data.subarray(index * 2, (index + 1) * 2);\n}\n\nexport function copyIndexedVec2(data: TypedArray, index: number): number[] {\n\tconst offset = (index * 2) | 0;\n\treturn [data[offset], data[offset + 1]];\n}\n\nexport function setIndexedVec2(data: TypedArray, index: number, v2: Float2) {\n\tconst offset = (index * 2) | 0;\n\tdata[offset]     = v2[0];\n\tdata[offset + 1] = v2[1];\n}\n\nexport function copyVec2FromOffset(data: TypedArray, offset: number): Float2 {\n\treturn [data[offset], data[offset + 1]];\n}\n\nexport function setVec2AtOffset(data: TypedArray, offset: number, v2: Float2) {\n\tdata[offset] = v2[0];\n\tdata[offset + 1] = v2[1];\n}\n\nexport function offsetOfIndexedVec2(index: number) { return (index * 2) | 0; }\n\n\nexport function refIndexedVec3(data: TypedArray, index: number): TypedArray {\n\treturn data.subarray(index * 3, (index + 1) * 3);\n}\n\nexport function copyIndexedVec3(data: TypedArray, index: number): number[] {\n\tconst offset = (index * 3) | 0;\n\treturn [data[offset], data[offset + 1], data[offset + 2]];\n}\n\nexport function setIndexedVec3(data: TypedArray, index: number, v3: Float3) {\n\tconst offset = (index * 3) | 0;\n\tdata[offset]     = v3[0];\n\tdata[offset + 1] = v3[1];\n\tdata[offset + 2] = v3[2];\n}\n\nexport function copyVec3FromOffset(data: TypedArray, offset: number): Float3 {\n\treturn [data[offset], data[offset + 1], data[offset + 2]];\n}\n\nexport function setVec3AtOffset(data: TypedArray, offset: number, v3: Float3) {\n\tdata[offset]     = v3[0];\n\tdata[offset + 1] = v3[1];\n\tdata[offset + 2] = v3[2];\n}\n\nexport function offsetOfIndexedVec3(index: number) { return (index * 3) | 0; }\n\n\nexport function refIndexedVec4(data: TypedArray, index: number): TypedArray {\n\treturn data.subarray(index * 4, (index + 1) * 4);\n}\n\nexport function copyIndexedVec4(data: TypedArray, index: number): number[] {\n\tconst offset = (index * 4) | 0;\n\treturn [data[offset], data[offset + 1], data[offset + 2], data[offset + 3]];\n}\n\nexport function setIndexedVec4(data: TypedArray, index: number, v4: Float4) {\n\tconst offset = (index * 4) | 0;\n\tdata[offset]     = v4[0];\n\tdata[offset + 1] = v4[1];\n\tdata[offset + 2] = v4[2];\n\tdata[offset + 3] = v4[3];\n}\n\nexport function copyVec4FromOffset(data: TypedArray, offset: number): Float4 {\n\treturn [data[offset], data[offset + 1], data[offset + 2], data[offset + 3]];\n}\n\nexport function setVec4AtOffset(data: TypedArray, offset: number, v4: Float4) {\n\tdata[offset]     = v4[0];\n\tdata[offset + 1] = v4[1];\n\tdata[offset + 2] = v4[2];\n\tdata[offset + 3] = v4[3];\n}\n\nexport function offsetOfIndexedVec4(index: number) { return (index * 4) | 0; }\n\n\nexport function refIndexedMat3(data: TypedArray, index: number): TypedArray {\n\treturn data.subarray(index * 9, (index + 1) * 9);\n}\n\nexport function copyIndexedMat3(data: TypedArray, index: number): number[] {\n\tconst offset = (index * 9) | 0;\n\treturn [\n\t\tdata[offset],     data[offset + 1], data[offset + 2],\n\t\tdata[offset + 3], data[offset + 4], data[offset + 5],\n\t\tdata[offset + 6], data[offset + 7], data[offset + 8],\n\t];\n}\n\nexport function setIndexedMat3(data: TypedArray, index: number, m3: Float3x3) {\n\tconst offset = (index * 9) | 0;\n\tdata[offset]     = m3[0]; data[offset + 1] = m3[1]; data[offset + 2] = m3[2];\n\tdata[offset + 3] = m3[3]; data[offset + 4] = m3[4]; data[offset + 5] = m3[5];\n\tdata[offset + 6] = m3[6]; data[offset + 7] = m3[7]; data[offset + 8] = m3[8];\n}\n\nexport function offsetOfIndexedMat3(index: number) { return (index * 9) | 0; }\n\n\nexport function refIndexedMat4(data: TypedArray, index: number): TypedArray {\n\treturn data.subarray(index * 16, (index + 1) * 16);\n}\n\nexport function copyIndexedMat4(data: TypedArray, index: number): number[] {\n\tconst offset = (index * 16) | 0;\n\treturn [\n\t\tdata[offset],      data[offset + 1],  data[offset + 2],  data[offset + 3],\n\t\tdata[offset + 4],  data[offset + 5],  data[offset + 6],  data[offset + 7],\n\t\tdata[offset + 8],  data[offset + 9],  data[offset + 10], data[offset + 11],\n\t\tdata[offset + 12], data[offset + 13], data[offset + 14], data[offset + 15]\n\t];\n}\n\nexport function setIndexedMat4(data: TypedArray, index: number, m4: Float4x4) {\n\tconst offset = (index * 16) | 0;\n\tdata[offset]      = m4[0];  data[offset + 1]  = m4[1];  data[offset + 2]  = m4[2];  data[offset + 3]  = m4[3];\n\tdata[offset + 4]  = m4[4];  data[offset + 5]  = m4[5];  data[offset + 6]  = m4[6];  data[offset + 7]  = m4[7];\n\tdata[offset + 8]  = m4[8];  data[offset + 9]  = m4[9];  data[offset + 10] = m4[10]; data[offset + 11] = m4[11];\n\tdata[offset + 12] = m4[12]; data[offset + 13] = m4[13]; data[offset + 14] = m4[14]; data[offset + 15] = m4[15];\n}\n\nexport function offsetOfIndexedMat4(index: number) { return (index * 16) | 0; }\n","/**\n * core/debug - debugging helpers\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nconst DEBUG_MODE = true;\n\n/**\n * asserts a condition to be true or throw an error otherwise\n * @param cond A condition that can be evaluated to true or false\n * @param msg Error message that will be thrown if cond is false\n */\nexport function assert(cond: any, msg?: string) {\n\tif (DEBUG_MODE && !cond) {\n\t\tconsole.error(msg || \"assertion failed\");\n\t\tthrow new Error(msg || \"assertion failed\");\n\t}\n}\n","/**\n * math/common - shared elements\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { ArrayOfConstNumber, ArrayOfNumber } from \"@stardazed/core\";\n\n// constants\nexport const EPSILON = 0.000001;\n\n// functions\nexport function clamp(n: number, min: number, max: number): number {\n\treturn Math.max(min, Math.min(max, n));\n}\n\nexport function clamp01(n: number): number {\n\treturn Math.max(0.0, Math.min(1.0, n));\n}\n\nexport function mix(a: number, b: number, ratio: number): number {\n\treturn a * (1 - ratio) + b * ratio;\n}\n\nexport function intRandom(maximum: number): number {\n\treturn (Math.random() * (maximum + 1)) | 0;\n}\n\nexport function intRandomRange(minimum: number, maximum: number): number {\n\tconst diff = (maximum - minimum) | 0;\n\treturn minimum + intRandom(diff);\n}\n\nexport function hertz(hz: number) {\n\treturn 1 / hz;\n}\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180.0;\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180.0 / Math.PI;\n}\n\nexport function isPowerOf2(n: number) {\n\treturn (n & (n - 1)) === 0;\n}\n\n// roundUpPowerOf2\n// return closest powerOf2 number that is >= n\n// e.g.: 15 -> 16; 16 -> 16; 17 -> 32\nexport function roundUpPowerOf2(n: number) {\n\tif (n <= 0) { return 1; }\n\tn = (n | 0) - 1;\n\tn |= n >> 1;\n\tn |= n >> 2;\n\tn |= n >> 4;\n\tn |= n >> 8;\n\tn |= n >> 16;\n\treturn n + 1;\n}\n\n// alignUp\n// round val up to closest alignmentPow2\nexport function alignUp(val: number, alignmentPow2: number) {\n\treturn (val + alignmentPow2 - 1) & (~(alignmentPow2 - 1));\n}\n\n// alignDown\n// round val down to closest alignmentPow2\nexport function alignDown(val: number, alignmentPow2: number) {\n\treturn val & (~(alignmentPow2 - 1));\n}\n\n// (strided) iteration of vecN types\nexport interface VecArrayIterationOptions {\n\tstride?: number;\n\toffset?: number;\n\tcount?: number;\n}\n\nexport type VecArrayIterationFunction = (out: ArrayOfNumber, a: ArrayOfConstNumber, ...args: any[]) => void;\n","/**\n * math/vec2 - 2-element vector type\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\n/* Copyright (c) 2015-2017, Brandon Jones, Colin MacKenzie IV, Arthur Langereis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport { ArrayOfConstNumber as ACN, ArrayOfNumber as AN } from \"@stardazed/core\";\nimport { clamp as clampf, clamp01 as clamp01f, EPSILON, mix as mixf, VecArrayIterationFunction, VecArrayIterationOptions } from \"./common\";\n\nexport const ELEMENT_COUNT = 2;\n\nexport function create() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 0;\n\tout[1] = 0;\n\treturn out;\n}\n\nexport const zero = create;\n\nexport function one() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 1;\n\tout[1] = 1;\n\treturn out;\n}\n\nexport function clone(a: ACN) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = a[0];\n\tout[1] = a[1];\n\treturn out;\n}\n\nexport function fromValues(x: number, y: number) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = x;\n\tout[1] = y;\n\treturn out;\n}\n\nexport function copy(out: number[], a: ACN): number[];\nexport function copy<T extends AN>(out: T, a: ACN): T;\nexport function copy(out: AN, a: ACN) {\n\tout[0] = a[0];\n\tout[1] = a[1];\n\treturn out;\n}\n\nexport function set(out: number[], x: number, y: number): number[];\nexport function set<T extends AN>(out: T, x: number, y: number): T;\nexport function set(out: AN, x: number, y: number) {\n\tout[0] = x;\n\tout[1] = y;\n\treturn out;\n}\n\nexport function add(out: number[], a: ACN, b: ACN): number[];\nexport function add<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function add(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] + b[0];\n\tout[1] = a[1] + b[1];\n\treturn out;\n}\n\nexport function subtract(out: number[], a: ACN, b: ACN): number[];\nexport function subtract<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function subtract(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] - b[0];\n\tout[1] = a[1] - b[1];\n\treturn out;\n}\n\nexport const sub = subtract;\n\nexport function multiply(out: number[], a: ACN, b: ACN): number[];\nexport function multiply<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function multiply(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] * b[0];\n\tout[1] = a[1] * b[1];\n\treturn out;\n}\n\nexport const mul = multiply;\n\nexport function divide(out: number[], a: ACN, b: ACN): number[];\nexport function divide<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function divide(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] / b[0];\n\tout[1] = a[1] / b[1];\n\treturn out;\n}\n\nexport const div = divide;\n\nexport function ceil(out: number[], a: ACN): number[];\nexport function ceil<T extends AN>(out: T, a: ACN): T;\nexport function ceil(out: AN, a: ACN) {\n\tout[0] = Math.ceil(a[0]);\n\tout[1] = Math.ceil(a[1]);\n\treturn out;\n}\n\nexport function floor(out: number[], a: ACN): number[];\nexport function floor<T extends AN>(out: T, a: ACN): T;\nexport function floor(out: AN, a: ACN) {\n\tout[0] = Math.floor(a[0]);\n\tout[1] = Math.floor(a[1]);\n\treturn out;\n}\n\nexport function min(out: number[], a: ACN, b: ACN): number[];\nexport function min<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function min(out: AN, a: ACN, b: ACN) {\n\tout[0] = Math.min(a[0], b[0]);\n\tout[1] = Math.min(a[1], b[1]);\n\treturn out;\n}\n\nexport function max(out: number[], a: ACN, b: ACN): number[];\nexport function max<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function max(out: AN, a: ACN, b: ACN) {\n\tout[0] = Math.max(a[0], b[0]);\n\tout[1] = Math.max(a[1], b[1]);\n\treturn out;\n}\n\nexport function round(out: number[], a: ACN): number[];\nexport function round<T extends AN>(out: T, a: ACN): T;\nexport function round(out: AN, a: ACN) {\n\tout[0] = Math.round(a[0]);\n\tout[1] = Math.round(a[1]);\n\treturn out;\n}\n\nexport function scale(out: number[], a: ACN, s: number): number[];\nexport function scale<T extends AN>(out: T, a: ACN, s: number): T;\nexport function scale(out: AN, a: ACN, s: number) {\n\tout[0] = a[0] * s;\n\tout[1] = a[1] * s;\n\treturn out;\n}\n\nexport function scaleAndAdd(out: number[], a: ACN, b: ACN, scale: number): number[];\nexport function scaleAndAdd<T extends AN>(out: T, a: ACN, b: ACN, scale: number): T;\nexport function scaleAndAdd(out: AN, a: ACN, b: ACN, scale: number) {\n\tout[0] = a[0] + (b[0] * scale);\n\tout[1] = a[1] + (b[1] * scale);\n\treturn out;\n}\n\nexport function distance(a: ACN, b: ACN) {\n\tconst x = b[0] - a[0];\n\tconst y = b[1] - a[1];\n\treturn Math.sqrt(x * x + y * y);\n}\n\nexport const dist = distance;\n\nexport function squaredDistance(a: ACN, b: ACN) {\n\tconst x = b[0] - a[0];\n\tconst y = b[1] - a[1];\n\treturn x * x + y * y;\n}\n\nexport const sqrDist = squaredDistance;\n\nexport function length(a: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\treturn Math.sqrt(x * x + y * y);\n}\n\nexport const len = length;\n\nexport function squaredLength(a: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\treturn x * x + y * y;\n}\n\nexport const sqrLen = squaredLength;\n\nexport function negate(out: number[], a: ACN): number[];\nexport function negate<T extends AN>(out: T, a: ACN): T;\nexport function negate(out: AN, a: ACN) {\n\tout[0] = -a[0];\n\tout[1] = -a[1];\n\treturn out;\n}\n\nexport function inverse(out: number[], a: ACN): number[];\nexport function inverse<T extends AN>(out: T, a: ACN): T;\nexport function inverse(out: AN, a: ACN) {\n\tout[0] = 1.0 / a[0];\n\tout[1] = 1.0 / a[1];\n\treturn out;\n}\n\nexport function normalize(out: number[], a: ACN): number[];\nexport function normalize<T extends AN>(out: T, a: ACN): T;\nexport function normalize(out: AN, a: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\tlet len = x * x + y * y; // tslint:disable-line:no-shadowed-variable\n\tif (len > 0) {\n\t\t// TODO: evaluate use of glm_invsqrt here?\n\t\tlen = 1 / Math.sqrt(len);\n\t\tout[0] = a[0] * len;\n\t\tout[1] = a[1] * len;\n\t}\n\treturn out;\n}\n\nexport function dot(a: ACN, b: ACN) {\n\treturn a[0] * b[0] + a[1] * b[1];\n}\n\nexport function cross(out: number[], a: ACN, b: ACN): number[];\nexport function cross<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function cross(out: AN, a: ACN, b: ACN) {\n\tconst z = a[0] * b[1] - a[1] * b[0];\n\tout[0] = out[1] = 0;\n\tout[2] = z;\n\treturn out;\n}\n\nexport function lerp(out: number[], a: ACN, b: ACN, t: number): number[];\nexport function lerp<T extends AN>(out: T, a: ACN, b: ACN, t: number): T;\nexport function lerp(out: AN, a: ACN, b: ACN, t: number) {\n\tconst ax = a[0];\n\tconst ay = a[1];\n\tout[0] = ax + t * (b[0] - ax);\n\tout[1] = ay + t * (b[1] - ay);\n\treturn out;\n}\n\nexport function random(out: number[], scale: number): number[];\nexport function random<T extends AN>(out: T, scale: number): T;\nexport function random(out: AN, scale = 1.0) {\n\tconst r = Math.random() * 2.0 * Math.PI;\n\tout[0] = Math.cos(r) * scale;\n\tout[1] = Math.sin(r) * scale;\n\treturn out;\n}\n\nexport function clamp(out: number[], a: ACN, min: number, max: number): number[];\nexport function clamp<T extends AN>(out: AN, a: ACN, min: number, max: number): T;\nexport function clamp(out: number[], a: ACN, min: ACN, max: ACN): number[];\nexport function clamp<T extends AN>(out: AN, a: ACN, min: ACN, max: ACN): T;\nexport function clamp(out: AN, a: ACN, min: number | ACN, max: number | ACN) {\n\tif (typeof min === \"number\") {\n\t\tout[0] = clampf(a[0], min, max as number);\n\t\tout[1] = clampf(a[1], min, max as number);\n\t}\n\telse {\n\t\tout[0] = clampf(a[0], min[0], (max as ACN)[0]);\n\t\tout[1] = clampf(a[1], min[1], (max as ACN)[1]);\n\t}\n\treturn out;\n}\n\nexport function clamp01(out: number[], a: ACN): number[];\nexport function clamp01<T extends AN>(out: T, a: ACN): T;\nexport function clamp01(out: AN, a: ACN) {\n\tout[0] = clamp01f(a[0]);\n\tout[1] = clamp01f(a[1]);\n\treturn out;\n}\n\nexport function mix(out: number[], a: ACN, b: ACN, ratio: number | ACN): number[];\nexport function mix<T extends AN>(out: T, a: ACN, b: ACN, ratio: number | ACN): T;\nexport function mix(out: AN, a: ACN, b: ACN, ratio: number | ACN) {\n\tif (typeof ratio === \"number\") {\n\t\tout[0] = mixf(a[0], b[0], ratio);\n\t\tout[1] = mixf(a[1], b[1], ratio);\n\t}\n\telse {\n\t\tout[0] = mixf(a[0], b[0], ratio[0]);\n\t\tout[1] = mixf(a[1], b[1], ratio[1]);\n\t}\n\treturn out;\n}\n\nexport function sign(out: number[], a: ACN): number[];\nexport function sign<T extends AN>(out: T, a: ACN): T;\nexport function sign(out: AN, a: ACN) {\n\tout[0] = Math.sign(a[0]);\n\tout[1] = Math.sign(a[1]);\n\treturn out;\n}\n\nexport function transformMat2(out: number[], a: ACN, m: ACN): number[];\nexport function transformMat2<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformMat2(out: AN, a: ACN, m: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\tout[0] = m[0] * x + m[2] * y;\n\tout[1] = m[1] * x + m[3] * y;\n\treturn out;\n}\n\nexport function transformMat2d(out: number[], a: ACN, m: ACN): number[];\nexport function transformMat2d<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformMat2d(out: AN, a: ACN, m: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\tout[0] = m[0] * x + m[2] * y + m[4];\n\tout[1] = m[1] * x + m[3] * y + m[5];\n\treturn out;\n}\n\nexport function transformMat3(out: number[], a: ACN, m: ACN): number[];\nexport function transformMat3<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformMat3(out: AN, a: ACN, m: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\tout[0] = m[0] * x + m[3] * y + m[6];\n\tout[1] = m[1] * x + m[4] * y + m[7];\n\treturn out;\n}\n\nexport function transformMat4(out: number[], a: ACN, m: ACN): number[];\nexport function transformMat4<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformMat4(out: AN, a: ACN, m: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\tout[0] = m[0] * x + m[4] * y + m[12];\n\tout[1] = m[1] * x + m[5] * y + m[13];\n\treturn out;\n}\n\nexport function forEach(a: number[], opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]): number[];\nexport function forEach<T extends AN>(a: T, opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]): T;\nexport function forEach(a: AN, opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]) {\n\tconst stride = opt.stride || ELEMENT_COUNT;\n\tconst offset = opt.offset || 0;\n\tconst count = opt.count ? Math.min((opt.count * stride) + offset, a.length) : a.length;\n\tconst vec = create();\n\n\tfor (let i = offset; i < count; i += stride) {\n\t\tvec[0] = a[i];\n\t\tvec[1] = a[i + 1];\n\t\tfn(vec, vec, args);\n\t\ta[i] = vec[0];\n\t\ta[i + 1] = vec[1];\n\t}\n\n\treturn a;\n}\n\nexport function str(a: ACN) {\n\treturn `vec2(${a[0]}, ${a[1]})`;\n}\n\nexport function exactEquals(a: ACN, b: ACN) {\n\treturn a[0] === b[0] && a[1] === b[1];\n}\n\nexport function equals(a: ACN, b: ACN) {\n\tconst a0 = a[0], a1 = a[1];\n\tconst b0 = b[0], b1 = b[1];\n\treturn (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n","/**\n * math/vec3 - 3-element vector type\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\n/* Copyright (c) 2015-2017, Brandon Jones, Colin MacKenzie IV, Arthur Langereis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport { ArrayOfConstNumber as ACN, ArrayOfNumber as AN } from \"@stardazed/core\";\nimport { clamp as clampf, clamp01 as clamp01f, EPSILON, mix as mixf, VecArrayIterationFunction, VecArrayIterationOptions } from \"./common\";\n\nexport const ELEMENT_COUNT = 3;\n\nexport function create() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 0;\n\tout[1] = 0;\n\tout[2] = 0;\n\treturn out;\n}\n\nexport const zero = create;\n\nexport function one() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 1;\n\tout[1] = 1;\n\tout[2] = 1;\n\treturn out;\n}\n\nexport function clone(a: ACN) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\treturn out;\n}\n\nexport function fromValues(x: number, y: number, z: number) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = x;\n\tout[1] = y;\n\tout[2] = z;\n\treturn out;\n}\n\nexport function copy(out: number[], a: ACN): number[];\nexport function copy<T extends AN>(out: T, a: ACN): T;\nexport function copy(out: AN, a: ACN) {\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\treturn out;\n}\n\nexport function set(out: number[], x: number, y: number, z: number): number[];\nexport function set<T extends AN>(out: T, x: number, y: number, z: number): T;\nexport function set(out: AN, x: number, y: number, z: number) {\n\tout[0] = x;\n\tout[1] = y;\n\tout[2] = z;\n\treturn out;\n}\n\nexport function add(out: number[], a: ACN, b: ACN): number[];\nexport function add<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function add(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] + b[0];\n\tout[1] = a[1] + b[1];\n\tout[2] = a[2] + b[2];\n\treturn out;\n}\n\nexport function subtract(out: number[], a: ACN, b: ACN): number[];\nexport function subtract<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function subtract(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] - b[0];\n\tout[1] = a[1] - b[1];\n\tout[2] = a[2] - b[2];\n\treturn out;\n}\n\nexport const sub = subtract;\n\nexport function multiply(out: number[], a: ACN, b: ACN): number[];\nexport function multiply<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function multiply(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] * b[0];\n\tout[1] = a[1] * b[1];\n\tout[2] = a[2] * b[2];\n\treturn out;\n}\n\nexport const mul = multiply;\n\nexport function divide(out: number[], a: ACN, b: ACN): number[];\nexport function divide<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function divide(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] / b[0];\n\tout[1] = a[1] / b[1];\n\tout[2] = a[2] / b[2];\n\treturn out;\n}\n\nexport const div = divide;\n\nexport function ceil(out: number[], a: ACN): number[];\nexport function ceil<T extends AN>(out: T, a: ACN): T;\nexport function ceil(out: AN, a: ACN) {\n\tout[0] = Math.ceil(a[0]);\n\tout[1] = Math.ceil(a[1]);\n\tout[2] = Math.ceil(a[2]);\n\treturn out;\n}\n\nexport function floor(out: number[], a: ACN): number[];\nexport function floor<T extends AN>(out: T, a: ACN): T;\nexport function floor(out: AN, a: ACN) {\n\tout[0] = Math.floor(a[0]);\n\tout[1] = Math.floor(a[1]);\n\tout[2] = Math.floor(a[2]);\n\treturn out;\n}\n\nexport function min(out: number[], a: ACN, b: ACN): number[];\nexport function min<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function min(out: AN, a: ACN, b: ACN) {\n\tout[0] = Math.min(a[0], b[0]);\n\tout[1] = Math.min(a[1], b[1]);\n\tout[2] = Math.min(a[2], b[2]);\n\treturn out;\n}\n\nexport function max(out: number[], a: ACN, b: ACN): number[];\nexport function max<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function max(out: AN, a: ACN, b: ACN) {\n\tout[0] = Math.max(a[0], b[0]);\n\tout[1] = Math.max(a[1], b[1]);\n\tout[2] = Math.max(a[2], b[2]);\n\treturn out;\n}\n\nexport function round(out: number[], a: ACN): number[];\nexport function round<T extends AN>(out: T, a: ACN): T;\nexport function round(out: AN, a: ACN) {\n\tout[0] = Math.round(a[0]);\n\tout[1] = Math.round(a[1]);\n\tout[2] = Math.round(a[2]);\n\treturn out;\n}\n\nexport function scale(out: number[], a: ACN, s: number): number[];\nexport function scale<T extends AN>(out: T, a: ACN, s: number): T;\nexport function scale(out: AN, a: ACN, s: number) {\n\tout[0] = a[0] * s;\n\tout[1] = a[1] * s;\n\tout[2] = a[2] * s;\n\treturn out;\n}\n\nexport function scaleAndAdd(out: number[], a: ACN, b: ACN, scale: number): number[];\nexport function scaleAndAdd<T extends AN>(out: T, a: ACN, b: ACN, scale: number): T;\nexport function scaleAndAdd(out: AN, a: ACN, b: ACN, scale: number) {\n\tout[0] = a[0] + (b[0] * scale);\n\tout[1] = a[1] + (b[1] * scale);\n\tout[2] = a[2] + (b[2] * scale);\n\treturn out;\n}\n\nexport function distance(a: ACN, b: ACN) {\n\tconst x = b[0] - a[0];\n\tconst y = b[1] - a[1];\n\tconst z = b[2] - a[2];\n\treturn Math.sqrt(x * x + y * y + z * z);\n}\n\nexport const dist = distance;\n\nexport function squaredDistance(a: ACN, b: ACN) {\n\tconst x = b[0] - a[0];\n\tconst y = b[1] - a[1];\n\tconst z = b[2] - a[2];\n\treturn x * x + y * y + z * z;\n}\n\nexport const sqrDist = squaredDistance;\n\nexport function length(a: ACN) {\n\tconst x = a[0],\n\t\ty = a[1],\n\t\tz = a[2];\n\treturn Math.sqrt(x * x + y * y + z * z);\n}\n\nexport const len = length;\n\nexport function squaredLength(a: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\tconst z = a[2];\n\treturn x * x + y * y + z * z;\n}\n\nexport const sqrLen = squaredLength;\n\nexport function negate(out: number[], a: ACN): number[];\nexport function negate<T extends AN>(out: T, a: ACN): T;\nexport function negate(out: AN, a: ACN) {\n\tout[0] = -a[0];\n\tout[1] = -a[1];\n\tout[2] = -a[2];\n\treturn out;\n}\n\nexport function inverse(out: number[], a: ACN): number[];\nexport function inverse<T extends AN>(out: T, a: ACN): T;\nexport function inverse(out: AN, a: ACN) {\n\tout[0] = 1.0 / a[0];\n\tout[1] = 1.0 / a[1];\n\tout[2] = 1.0 / a[2];\n\treturn out;\n}\n\nexport function normalize(out: number[], a: ACN): number[];\nexport function normalize<T extends AN>(out: T, a: ACN): T;\nexport function normalize(out: AN, a: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\tconst z = a[2];\n\tlet len = x * x + y * y + z * z; // tslint:disable-line:no-shadowed-variable\n\n\tif (len > 0) {\n\t\t// TODO: evaluate use of glm_invsqrt here?\n\t\tlen = 1 / Math.sqrt(len);\n\t\tout[0] = a[0] * len;\n\t\tout[1] = a[1] * len;\n\t\tout[2] = a[2] * len;\n\t}\n\treturn out;\n}\n\nexport function dot(a: ACN, b: ACN) {\n\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cross(out: number[], a: ACN, b: ACN): number[];\nexport function cross<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function cross(out: AN, a: ACN, b: ACN) {\n\tconst ax = a[0], ay = a[1], az = a[2],\n\t\tbx = b[0], by = b[1], bz = b[2];\n\n\tout[0] = ay * bz - az * by;\n\tout[1] = az * bx - ax * bz;\n\tout[2] = ax * by - ay * bx;\n\treturn out;\n}\n\nexport function lerp(out: number[], a: ACN, b: ACN, t: number): number[];\nexport function lerp<T extends AN>(out: T, a: ACN, b: ACN, t: number): T;\nexport function lerp(out: AN, a: ACN, b: ACN, t: number) {\n\tconst ax = a[0],\n\t\tay = a[1],\n\t\taz = a[2];\n\tout[0] = ax + t * (b[0] - ax);\n\tout[1] = ay + t * (b[1] - ay);\n\tout[2] = az + t * (b[2] - az);\n\treturn out;\n}\n\nexport function hermite(out: AN, a: ACN, b: ACN, c: ACN, d: ACN, t: number): AN {\n\tconst factorTimes2 = t * t;\n\tconst factor1 = factorTimes2 * (2 * t - 3) + 1;\n\tconst factor2 = factorTimes2 * (t - 2) + t;\n\tconst factor3 = factorTimes2 * (t - 1);\n\tconst factor4 = factorTimes2 * (3 - 2 * t);\n\n\tout[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\tout[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\tout[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n\treturn out;\n}\n\nexport function bezier(out: AN, a: ACN, b: ACN, c: ACN, d: ACN, t: number): AN {\n\tconst inverseFactor = 1 - t;\n\tconst inverseFactorTimesTwo = inverseFactor * inverseFactor;\n\tconst factorTimes2 = t * t;\n\tconst factor1 = inverseFactorTimesTwo * inverseFactor;\n\tconst factor2 = 3 * t * inverseFactorTimesTwo;\n\tconst factor3 = 3 * factorTimes2 * inverseFactor;\n\tconst factor4 = factorTimes2 * t;\n\n\tout[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\tout[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\tout[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n\treturn out;\n}\n\nexport function random(out: number[], scale: number): number[];\nexport function random<T extends AN>(out: T, scale: number): T;\nexport function random(out: AN, scale = 1.0) {\n\tscale = scale || 1.0;\n\n\tconst r = Math.random() * 2.0 * Math.PI;\n\tconst z = (Math.random() * 2.0) - 1.0;\n\tconst zScale = Math.sqrt(1.0 - z * z) * scale;\n\n\tout[0] = Math.cos(r) * zScale;\n\tout[1] = Math.sin(r) * zScale;\n\tout[2] = z * scale;\n\treturn out;\n}\n\nexport function clamp(out: number[], a: ACN, min: number, max: number): number[];\nexport function clamp<T extends AN>(out: AN, a: ACN, min: number, max: number): T;\nexport function clamp(out: number[], a: ACN, min: ACN, max: ACN): number[];\nexport function clamp<T extends AN>(out: AN, a: ACN, min: ACN, max: ACN): T;\nexport function clamp(out: AN, a: ACN, min: number | ACN, max: number | ACN) {\n\tif (typeof min === \"number\") {\n\t\tout[0] = clampf(a[0], min as number, max as number);\n\t\tout[1] = clampf(a[1], min as number, max as number);\n\t\tout[2] = clampf(a[2], min as number, max as number);\n\t}\n\telse {\n\t\tout[0] = clampf(a[0], min[0], (max as ACN)[0]);\n\t\tout[1] = clampf(a[1], min[1], (max as ACN)[1]);\n\t\tout[2] = clampf(a[2], min[2], (max as ACN)[2]);\n\t}\n\n\treturn out;\n}\n\nexport function clamp01(out: number[], a: ACN): number[];\nexport function clamp01<T extends AN>(out: T, a: ACN): T;\nexport function clamp01(out: AN, a: ACN) {\n\tout[0] = clamp01f(a[0]);\n\tout[1] = clamp01f(a[1]);\n\tout[2] = clamp01f(a[2]);\n\treturn out;\n}\n\nexport function mix(out: number[], a: ACN, b: ACN, ratio: number | ACN): number[];\nexport function mix<T extends AN>(out: T, a: ACN, b: ACN, ratio: number | ACN): T;\nexport function mix(out: AN, a: ACN, b: ACN, ratio: number | ACN) {\n\tif (typeof ratio === \"number\") {\n\t\tout[0] = mixf(a[0], b[0], ratio);\n\t\tout[1] = mixf(a[1], b[1], ratio);\n\t\tout[2] = mixf(a[2], b[2], ratio);\n\t}\n\telse {\n\t\tout[0] = mixf(a[0], b[0], ratio[0]);\n\t\tout[1] = mixf(a[1], b[1], ratio[1]);\n\t\tout[2] = mixf(a[2], b[2], ratio[2]);\n\t}\n\treturn out;\n}\n\nexport function sign(out: number[], a: ACN): number[];\nexport function sign<T extends AN>(out: T, a: ACN): T;\nexport function sign(out: AN, a: ACN) {\n\tout[0] = Math.sign(a[0]);\n\tout[1] = Math.sign(a[1]);\n\tout[2] = Math.sign(a[2]);\n\treturn out;\n}\n\nexport function transformMat3(out: number[], a: ACN, m: ACN): number[];\nexport function transformMat3<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformMat3(out: AN, a: ACN, m: ACN) {\n\tconst x = a[0], y = a[1], z = a[2];\n\tout[0] = x * m[0] + y * m[3] + z * m[6];\n\tout[1] = x * m[1] + y * m[4] + z * m[7];\n\tout[2] = x * m[2] + y * m[5] + z * m[8];\n\treturn out;\n}\n\nexport function transformMat4(out: number[], a: ACN, m: ACN): number[];\nexport function transformMat4<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformMat4(out: AN, a: ACN, m: ACN) {\n\tconst x = a[0];\n\tconst y = a[1];\n\tconst z = a[2];\n\tconst w = (m[3] * x + m[7] * y + m[11] * z + m[15]) || 1.0;\n\n\tout[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n\tout[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n\tout[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n\treturn out;\n}\n\nexport function transformQuat(out: number[], a: ACN, m: ACN): number[];\nexport function transformQuat<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformQuat(out: AN, a: ACN, q: ACN) {\n\t// benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n\tconst x = a[0], y = a[1], z = a[2];\n\tconst qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n\t// calculate quat * vec\n\tconst ix = qw * x + qy * z - qz * y;\n\tconst iy = qw * y + qz * x - qx * z;\n\tconst iz = qw * z + qx * y - qy * x;\n\tconst iw = -qx * x - qy * y - qz * z;\n\n\t// calculate result * inverse quat\n\tout[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\tout[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\tout[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\treturn out;\n}\n\nexport function rotateX(out: number[], a: ACN, b: ACN, c: number): number[];\nexport function rotateX<T extends AN>(out: T, a: ACN, b: ACN, c: number): T;\nexport function rotateX(out: AN, a: ACN, b: ACN, c: number) {\n\tconst p = [];\n\tconst r = [];\n\n\t// translate point to the origin\n\tp[0] = a[0] - b[0];\n\tp[1] = a[1] - b[1];\n\tp[2] = a[2] - b[2];\n\n\t// perform rotation\n\tr[0] = p[0];\n\tr[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n\tr[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\n\n\t// translate to correct position\n\tout[0] = r[0] + b[0];\n\tout[1] = r[1] + b[1];\n\tout[2] = r[2] + b[2];\n\n\treturn out;\n}\n\nexport function rotateY(out: number[], a: ACN, b: ACN, c: number): number[];\nexport function rotateY<T extends AN>(out: T, a: ACN, b: ACN, c: number): T;\nexport function rotateY(out: AN, a: ACN, b: ACN, c: number) {\n\tconst p = [];\n\tconst r = [];\n\n\t// translate point to the origin\n\tp[0] = a[0] - b[0];\n\tp[1] = a[1] - b[1];\n\tp[2] = a[2] - b[2];\n\n\t// perform rotation\n\tr[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n\tr[1] = p[1];\n\tr[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\n\n\t// translate to correct position\n\tout[0] = r[0] + b[0];\n\tout[1] = r[1] + b[1];\n\tout[2] = r[2] + b[2];\n\n\treturn out;\n}\n\nexport function rotateZ(out: number[], a: ACN, b: ACN, c: number): number[];\nexport function rotateZ<T extends AN>(out: T, a: ACN, b: ACN, c: number): T;\nexport function rotateZ(out: AN, a: ACN, b: ACN, c: number) {\n\tconst p = [];\n\tconst r = [];\n\n\t// translate point to the origin\n\tp[0] = a[0] - b[0];\n\tp[1] = a[1] - b[1];\n\tp[2] = a[2] - b[2];\n\n\t// perform rotation\n\tr[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n\tr[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n\tr[2] = p[2];\n\n\t// translate to correct position\n\tout[0] = r[0] + b[0];\n\tout[1] = r[1] + b[1];\n\tout[2] = r[2] + b[2];\n\n\treturn out;\n}\n\nexport function reflect(out: number[], a: ACN, normal: ACN): number[];\nexport function reflect<T extends AN>(out: T, a: ACN, normal: ACN): T;\nexport function reflect(out: AN, a: ACN, normal: ACN) {\n\tscale(out, normal, 2.0 * dot(a, normal));\n\treturn sub(out, a, out);\n}\n\n\nexport function arbitraryOrthogonalVec(a: ACN) {\n\tconst p = create();\n\tconst ax = Math.abs(a[0]);\n\tconst ay = Math.abs(a[1]);\n\tconst az = Math.abs(a[2]);\n\n\tconst dominantAxis = (ax > ay) ? (ax > az ? 0 : 2) : (ay > az ? 1 : 2);\n\n\tswitch (dominantAxis) {\n\t\tcase 0:\n\t\t\tp[0] = -a[1] - a[2];\n\t\t\tp[1] = a[0];\n\t\t\tp[2] = a[0];\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tp[0] = a[1];\n\t\t\tp[1] = -a[0] - a[2];\n\t\t\tp[2] = a[1];\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tp[0] = a[2];\n\t\t\tp[1] = a[2];\n\t\t\tp[2] = -a[0] - a[1];\n\t\t\tbreak;\n\t}\n\n\treturn p;\n}\n\n\nexport function forEach(a: number[], opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]): number[];\nexport function forEach<T extends AN>(a: T, opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]): T;\nexport function forEach(a: AN, opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]) {\n\tconst stride = opt.stride || ELEMENT_COUNT;\n\tconst offset = opt.offset || 0;\n\tconst count = opt.count ? Math.min((opt.count * stride) + offset, a.length) : a.length;\n\tconst vec = create();\n\n\tfor (let i = offset; i < count; i += stride) {\n\t\tvec[0] = a[i];\n\t\tvec[1] = a[i + 1];\n\t\tvec[2] = a[i + 2];\n\t\tfn(vec, vec, args);\n\t\ta[i] = vec[0];\n\t\ta[i + 1] = vec[1];\n\t\ta[i + 2] = vec[2];\n\t}\n\n\treturn a;\n}\n\n\nexport function angle(a: ACN, b: ACN) {\n\tconst tempA = clone(a);\n\tconst tempB = clone(b);\n\n\tnormalize(tempA, tempA);\n\tnormalize(tempB, tempB);\n\n\tconst cosine = dot(tempA, tempB);\n\n\tif (cosine > 1.0) {\n\t\treturn 0;\n\t}\n\telse if (cosine < -1.0) {\n\t\treturn Math.PI;\n\t} else {\n\t\treturn Math.acos(cosine);\n\t}\n}\n\nexport function str(a: ACN) {\n\treturn `vec3(${a[0]}, ${a[1]}, ${a[2]})`;\n}\n\nexport function exactEquals(a: ACN, b: ACN) {\n\treturn a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\nexport function equals(a: ACN, b: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2];\n\tconst b0 = b[0], b1 = b[1], b2 = b[2];\n\treturn (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n","/**\n * math/vec4 - 4-element vector type\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\n/* Copyright (c) 2015-2017, Brandon Jones, Colin MacKenzie IV, Arthur Langereis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport { ArrayOfConstNumber as ACN, ArrayOfNumber as AN } from \"@stardazed/core\";\nimport { clamp as clampf, clamp01 as clamp01f, EPSILON, mix as mixf, VecArrayIterationFunction, VecArrayIterationOptions } from \"./common\";\n\nexport const ELEMENT_COUNT = 4;\n\nexport function create() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 0;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\treturn out;\n}\n\nexport const zero = create;\n\nexport function one() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 1;\n\tout[1] = 1;\n\tout[2] = 1;\n\tout[3] = 1;\n\treturn out;\n}\n\nexport function clone(a: ACN) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\treturn out;\n}\n\nexport function fromValues(x: number, y: number, z: number, w: number) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = x;\n\tout[1] = y;\n\tout[2] = z;\n\tout[3] = w;\n\treturn out;\n}\n\nexport function copy(out: number[], a: ACN): number[];\nexport function copy<T extends AN>(out: T, a: ACN): T;\nexport function copy(out: AN, a: ACN) {\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\treturn out;\n}\n\nexport function set(out: number[], x: number, y: number, z: number, w: number): number[];\nexport function set<T extends AN>(out: T, x: number, y: number, z: number, w: number): T;\nexport function set(out: AN, x: number, y: number, z: number, w: number) {\n\tout[0] = x;\n\tout[1] = y;\n\tout[2] = z;\n\tout[3] = w;\n\treturn out;\n}\n\nexport function add(out: number[], a: ACN, b: ACN): number[];\nexport function add<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function add(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] + b[0];\n\tout[1] = a[1] + b[1];\n\tout[2] = a[2] + b[2];\n\tout[3] = a[3] + b[3];\n\treturn out;\n}\n\nexport function subtract(out: number[], a: ACN, b: ACN): number[];\nexport function subtract<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function subtract(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] - b[0];\n\tout[1] = a[1] - b[1];\n\tout[2] = a[2] - b[2];\n\tout[3] = a[3] - b[3];\n\treturn out;\n}\n\nexport const sub = subtract;\n\nexport function multiply(out: number[], a: ACN, b: ACN): number[];\nexport function multiply<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function multiply(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] * b[0];\n\tout[1] = a[1] * b[1];\n\tout[2] = a[2] * b[2];\n\tout[3] = a[3] * b[3];\n\treturn out;\n}\n\nexport const mul = multiply;\n\nexport function divide(out: number[], a: ACN, b: ACN): number[];\nexport function divide<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function divide(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] / b[0];\n\tout[1] = a[1] / b[1];\n\tout[2] = a[2] / b[2];\n\tout[3] = a[3] / b[3];\n\treturn out;\n}\n\nexport const div = divide;\n\nexport function ceil(out: number[], a: ACN): number[];\nexport function ceil<T extends AN>(out: T, a: ACN): T;\nexport function ceil(out: AN, a: ACN) {\n\tout[0] = Math.ceil(a[0]);\n\tout[1] = Math.ceil(a[1]);\n\tout[2] = Math.ceil(a[2]);\n\tout[3] = Math.ceil(a[3]);\n\treturn out;\n}\n\nexport function floor(out: number[], a: ACN): number[];\nexport function floor<T extends AN>(out: T, a: ACN): T;\nexport function floor(out: AN, a: ACN) {\n\tout[0] = Math.floor(a[0]);\n\tout[1] = Math.floor(a[1]);\n\tout[2] = Math.floor(a[2]);\n\tout[3] = Math.floor(a[3]);\n\treturn out;\n}\n\nexport function min(out: number[], a: ACN, b: ACN): number[];\nexport function min<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function min(out: AN, a: ACN, b: ACN) {\n\tout[0] = Math.min(a[0], b[0]);\n\tout[1] = Math.min(a[1], b[1]);\n\tout[2] = Math.min(a[2], b[2]);\n\tout[3] = Math.min(a[3], b[3]);\n\treturn out;\n}\n\nexport function max(out: number[], a: ACN, b: ACN): number[];\nexport function max<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function max(out: AN, a: ACN, b: ACN) {\n\tout[0] = Math.max(a[0], b[0]);\n\tout[1] = Math.max(a[1], b[1]);\n\tout[2] = Math.max(a[2], b[2]);\n\tout[3] = Math.max(a[3], b[3]);\n\treturn out;\n}\n\nexport function round(out: number[], a: ACN): number[];\nexport function round<T extends AN>(out: T, a: ACN): T;\nexport function round(out: AN, a: ACN) {\n\tout[0] = Math.round(a[0]);\n\tout[1] = Math.round(a[1]);\n\tout[2] = Math.round(a[2]);\n\tout[3] = Math.round(a[3]);\n\treturn out;\n}\n\nexport function scale(out: number[], a: ACN, s: number): number[];\nexport function scale<T extends AN>(out: T, a: ACN, s: number): T;\nexport function scale(out: AN, a: ACN, s: number) {\n\tout[0] = a[0] * s;\n\tout[1] = a[1] * s;\n\tout[2] = a[2] * s;\n\tout[3] = a[3] * s;\n\treturn out;\n}\n\nexport function scaleAndAdd(out: number[], a: ACN, b: ACN, scale: number): number[];\nexport function scaleAndAdd<T extends AN>(out: T, a: ACN, b: ACN, scale: number): T;\nexport function scaleAndAdd(out: AN, a: ACN, b: ACN, scale: number) {\n\tout[0] = a[0] + (b[0] * scale);\n\tout[1] = a[1] + (b[1] * scale);\n\tout[2] = a[2] + (b[2] * scale);\n\tout[3] = a[3] + (b[3] * scale);\n\treturn out;\n}\n\nexport function distance(a: ACN, b: ACN) {\n\tconst x = b[0] - a[0],\n\t\ty = b[1] - a[1],\n\t\tz = b[2] - a[2],\n\t\tw = b[3] - a[3];\n\treturn Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\nexport const dist = distance;\n\nexport function squaredDistance(a: ACN, b: ACN) {\n\tconst x = b[0] - a[0],\n\t\ty = b[1] - a[1],\n\t\tz = b[2] - a[2],\n\t\tw = b[3] - a[3];\n\treturn x * x + y * y + z * z + w * w;\n}\n\nexport const sqrDist = squaredDistance;\n\nexport function length(a: ACN) {\n\tconst x = a[0],\n\t\ty = a[1],\n\t\tz = a[2],\n\t\tw = a[3];\n\treturn Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\nexport const len = length;\n\nexport function squaredLength(a: ACN) {\n\tconst x = a[0],\n\t\ty = a[1],\n\t\tz = a[2],\n\t\tw = a[3];\n\treturn x * x + y * y + z * z + w * w;\n}\n\nexport const sqrLen = squaredLength;\n\nexport function negate(out: number[], a: ACN): number[];\nexport function negate<T extends AN>(out: T, a: ACN): T;\nexport function negate(out: AN, a: ACN) {\n\tout[0] = -a[0];\n\tout[1] = -a[1];\n\tout[2] = -a[2];\n\tout[3] = -a[3];\n\treturn out;\n}\n\nexport function inverse(out: number[], a: ACN): number[];\nexport function inverse<T extends AN>(out: T, a: ACN): T;\nexport function inverse(out: AN, a: ACN) {\n\tout[0] = 1.0 / a[0];\n\tout[1] = 1.0 / a[1];\n\tout[2] = 1.0 / a[2];\n\tout[3] = 1.0 / a[3];\n\treturn out;\n}\n\nexport function normalize(out: number[], a: ACN): number[];\nexport function normalize<T extends AN>(out: T, a: ACN): T;\nexport function normalize(out: AN, a: ACN) {\n\tconst x = a[0],\n\t\ty = a[1],\n\t\tz = a[2],\n\t\tw = a[3];\n\tlet len = x * x + y * y + z * z + w * w; // tslint:disable-line:no-shadowed-variable\n\tif (len > 0) {\n\t\tlen = 1 / Math.sqrt(len);\n\t\tout[0] = x * len;\n\t\tout[1] = y * len;\n\t\tout[2] = z * len;\n\t\tout[3] = w * len;\n\t}\n\treturn out;\n}\n\nexport function dot(a: ACN, b: ACN) {\n\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\nexport function lerp(out: number[], a: ACN, b: ACN, t: number): number[];\nexport function lerp<T extends AN>(out: T, a: ACN, b: ACN, t: number): T;\nexport function lerp(out: AN, a: ACN, b: ACN, t: number) {\n\tconst ax = a[0],\n\t\tay = a[1],\n\t\taz = a[2],\n\t\taw = a[3];\n\tout[0] = ax + t * (b[0] - ax);\n\tout[1] = ay + t * (b[1] - ay);\n\tout[2] = az + t * (b[2] - az);\n\tout[3] = aw + t * (b[3] - aw);\n\treturn out;\n}\n\nexport function random(out: number[], length: number): number[];\nexport function random<T extends AN>(out: T, length: number): T;\nexport function random(out: AN, length = 1.0) {\n\t// TODO: This is a pretty awful way of doing this. Find something better.\n\tout[0] = Math.random();\n\tout[1] = Math.random();\n\tout[2] = Math.random();\n\tout[3] = Math.random();\n\tnormalize(out, out);\n\tscale(out, out, length);\n\treturn out;\n}\n\nexport function clamp(out: number[], a: ACN, min: number, max: number): number[];\nexport function clamp<T extends AN>(out: AN, a: ACN, min: number, max: number): T;\nexport function clamp(out: number[], a: ACN, min: ACN, max: ACN): number[];\nexport function clamp<T extends AN>(out: AN, a: ACN, min: ACN, max: ACN): T;\nexport function clamp(out: AN, a: ACN, min: number | ACN, max: number | ACN) {\n\tif (typeof min === \"number\") {\n\t\tout[0] = clampf(a[0], min, max as number);\n\t\tout[1] = clampf(a[1], min, max as number);\n\t\tout[2] = clampf(a[2], min, max as number);\n\t\tout[3] = clampf(a[3], min, max as number);\n\t}\n\telse {\n\t\tout[0] = clampf(a[0], min[0], (max as ACN)[0]);\n\t\tout[1] = clampf(a[1], min[1], (max as ACN)[1]);\n\t\tout[2] = clampf(a[2], min[2], (max as ACN)[2]);\n\t\tout[3] = clampf(a[3], min[3], (max as ACN)[3]);\n\t}\n\n\treturn out;\n}\n\nexport function clamp01(out: number[], a: ACN): number[];\nexport function clamp01<T extends AN>(out: T, a: ACN): T;\nexport function clamp01(out: AN, a: ACN) {\n\tout[0] = clamp01f(a[0]);\n\tout[1] = clamp01f(a[1]);\n\tout[2] = clamp01f(a[2]);\n\tout[3] = clamp01f(a[3]);\n\treturn out;\n}\n\nexport function mix(out: number[], a: ACN, b: ACN, ratio: number | ACN): number[];\nexport function mix<T extends AN>(out: T, a: ACN, b: ACN, ratio: number | ACN): T;\nexport function mix(out: AN, a: ACN, b: ACN, ratio: number | ACN) {\n\tif (typeof ratio === \"number\") {\n\t\tout[0] = mixf(a[0], b[0], ratio);\n\t\tout[1] = mixf(a[1], b[1], ratio);\n\t\tout[2] = mixf(a[2], b[2], ratio);\n\t\tout[3] = mixf(a[3], b[3], ratio);\n\t}\n\telse {\n\t\tout[0] = mixf(a[0], b[0], ratio[0]);\n\t\tout[1] = mixf(a[1], b[1], ratio[1]);\n\t\tout[2] = mixf(a[2], b[2], ratio[2]);\n\t\tout[3] = mixf(a[3], b[3], ratio[3]);\n\t}\n\treturn out;\n}\n\nexport function sign(out: number[], a: ACN): number[];\nexport function sign<T extends AN>(out: T, a: ACN): T;\nexport function sign(out: AN, a: ACN) {\n\tout[0] = Math.sign(a[0]);\n\tout[1] = Math.sign(a[1]);\n\tout[2] = Math.sign(a[2]);\n\tout[3] = Math.sign(a[3]);\n\treturn out;\n}\n\nexport function transformMat4(out: number[], a: ACN, m: ACN): number[];\nexport function transformMat4<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformMat4(out: AN, a: ACN, m: ACN) {\n\tconst x = a[0], y = a[1], z = a[2], w = a[3];\n\tout[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n\tout[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n\tout[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n\tout[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n\treturn out;\n}\n\nexport function transformQuat(out: number[], a: ACN, m: ACN): number[];\nexport function transformQuat<T extends AN>(out: T, a: ACN, m: ACN): T;\nexport function transformQuat(out: AN, a: ACN, q: ACN) {\n\tconst x = a[0], y = a[1], z = a[2],\n\t\tqx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n\t\t// calculate quat * vec\n\t\tix = qw * x + qy * z - qz * y,\n\t\tiy = qw * y + qz * x - qx * z,\n\t\tiz = qw * z + qx * y - qy * x,\n\t\tiw = -qx * x - qy * y - qz * z;\n\n\t// calculate result * inverse quat\n\tout[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\tout[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\tout[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\tout[3] = a[3];\n\treturn out;\n}\n\nexport function forEach(a: number[], opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]): number[];\nexport function forEach<T extends AN>(a: T, opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]): T;\nexport function forEach(a: AN, opt: VecArrayIterationOptions, fn: VecArrayIterationFunction, ...args: any[]) {\n\tconst stride = opt.stride || ELEMENT_COUNT;\n\tconst offset = opt.offset || 0;\n\tconst count = opt.count ? Math.min((opt.count * stride) + offset, a.length) : a.length;\n\tconst vec = create();\n\n\tfor (let i = offset; i < count; i += stride) {\n\t\tvec[0] = a[i];\n\t\tvec[1] = a[i + 1];\n\t\tvec[2] = a[i + 2];\n\t\tvec[3] = a[i + 3];\n\t\tfn(vec, vec, args);\n\t\ta[i] = vec[0];\n\t\ta[i + 1] = vec[1];\n\t\ta[i + 2] = vec[2];\n\t\ta[i + 3] = vec[3];\n\t}\n\n\treturn a;\n}\n\nexport function str(a: ACN) {\n\treturn `vec4(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]})`;\n}\n\nexport function exactEquals(a: ACN, b: ACN) {\n\treturn a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\nexport function equals(a: ACN, b: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\tconst b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n\treturn (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n","/**\n * math/mat3 - 3x3 matrix type\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\n/* Copyright (c) 2015-2017, Brandon Jones, Colin MacKenzie IV, Arthur Langereis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport { ArrayOfConstNumber as ACN, ArrayOfNumber as AN } from \"@stardazed/core\";\nimport { EPSILON } from \"./common\";\n\nexport const ELEMENT_COUNT = 9;\n\nexport function create() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 1;\n\tout[5] = 0;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 1;\n\treturn out;\n}\n\nexport function clone(a: ACN) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\tout[4] = a[4];\n\tout[5] = a[5];\n\tout[6] = a[6];\n\tout[7] = a[7];\n\tout[8] = a[8];\n\treturn out;\n}\n\nexport function copy(out: number[], a: ACN): number[];\nexport function copy<T extends AN>(out: T, a: ACN): T;\nexport function copy(out: AN, a: ACN) {\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\tout[4] = a[4];\n\tout[5] = a[5];\n\tout[6] = a[6];\n\tout[7] = a[7];\n\tout[8] = a[8];\n\treturn out;\n}\n\nexport function identity(out: number[]): number[];\nexport function identity<T extends AN>(out: T): T;\nexport function identity(out: AN) {\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 1;\n\tout[5] = 0;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 1;\n\treturn out;\n}\n\nexport function fromValues(m00: number, m01: number, m02: number, m10: number, m11: number, m12: number, m20: number, m21: number, m22: number) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = m00;\n\tout[1] = m01;\n\tout[2] = m02;\n\tout[3] = m10;\n\tout[4] = m11;\n\tout[5] = m12;\n\tout[6] = m20;\n\tout[7] = m21;\n\tout[8] = m22;\n\treturn out;\n}\n\nexport function set(out: number[], m00: number, m01: number, m02: number, m10: number, m11: number, m12: number, m20: number, m21: number, m22: number): number[];\nexport function set<T extends AN>(out: T, m00: number, m01: number, m02: number, m10: number, m11: number, m12: number, m20: number, m21: number, m22: number): T;\nexport function set(out: AN, m00: number, m01: number, m02: number, m10: number, m11: number, m12: number, m20: number, m21: number, m22: number) {\n\tout[0] = m00;\n\tout[1] = m01;\n\tout[2] = m02;\n\tout[3] = m10;\n\tout[4] = m11;\n\tout[5] = m12;\n\tout[6] = m20;\n\tout[7] = m21;\n\tout[8] = m22;\n\treturn out;\n}\n\nexport function transpose(out: number[], a: ACN): number[];\nexport function transpose<T extends AN>(out: T, a: ACN): T;\nexport function transpose(out: AN, a: ACN) {\n\t// If we are transposing ourselves we can skip a few steps but have to cache some values\n\tif (out === a) {\n\t\tconst a01 = a[1], a02 = a[2], a12 = a[5];\n\t\tout[1] = a[3];\n\t\tout[2] = a[6];\n\t\tout[3] = a01;\n\t\tout[5] = a[7];\n\t\tout[6] = a02;\n\t\tout[7] = a12;\n\t} else {\n\t\tout[0] = a[0];\n\t\tout[1] = a[3];\n\t\tout[2] = a[6];\n\t\tout[3] = a[1];\n\t\tout[4] = a[4];\n\t\tout[5] = a[7];\n\t\tout[6] = a[2];\n\t\tout[7] = a[5];\n\t\tout[8] = a[8];\n\t}\n\n\treturn out;\n}\n\nexport function invert(out: number[], a: ACN): number[];\nexport function invert<T extends AN>(out: T, a: ACN): T;\nexport function invert(out: AN, a: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\ta20 = a[6], a21 = a[7], a22 = a[8],\n\n\t\tb01 = a22 * a11 - a12 * a21,\n\t\tb11 = -a22 * a10 + a12 * a20,\n\t\tb21 = a21 * a10 - a11 * a20;\n\n\t// Calculate the determinant\n\tlet det = a00 * b01 + a01 * b11 + a02 * b21;\n\n\tif (! det) {\n\t\treturn null;\n\t}\n\tdet = 1.0 / det;\n\n\tout[0] = b01 * det;\n\tout[1] = (-a22 * a01 + a02 * a21) * det;\n\tout[2] = (a12 * a01 - a02 * a11) * det;\n\tout[3] = b11 * det;\n\tout[4] = (a22 * a00 - a02 * a20) * det;\n\tout[5] = (-a12 * a00 + a02 * a10) * det;\n\tout[6] = b21 * det;\n\tout[7] = (-a21 * a00 + a01 * a20) * det;\n\tout[8] = (a11 * a00 - a01 * a10) * det;\n\treturn out;\n}\n\nexport function adjoint(out: number[], a: ACN): number[];\nexport function adjoint<T extends AN>(out: T, a: ACN): T;\nexport function adjoint(out: AN, a: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\ta20 = a[6], a21 = a[7], a22 = a[8];\n\n\tout[0] = (a11 * a22 - a12 * a21);\n\tout[1] = (a02 * a21 - a01 * a22);\n\tout[2] = (a01 * a12 - a02 * a11);\n\tout[3] = (a12 * a20 - a10 * a22);\n\tout[4] = (a00 * a22 - a02 * a20);\n\tout[5] = (a02 * a10 - a00 * a12);\n\tout[6] = (a10 * a21 - a11 * a20);\n\tout[7] = (a01 * a20 - a00 * a21);\n\tout[8] = (a00 * a11 - a01 * a10);\n\treturn out;\n}\n\nexport function determinant(a: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\ta20 = a[6], a21 = a[7], a22 = a[8];\n\n\treturn a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\nexport function multiply(out: number[], a: ACN, b: ACN): number[];\nexport function multiply<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function multiply(out: AN, a: ACN, b: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\ta20 = a[6], a21 = a[7], a22 = a[8],\n\n\t\tb00 = b[0], b01 = b[1], b02 = b[2],\n\t\tb10 = b[3], b11 = b[4], b12 = b[5],\n\t\tb20 = b[6], b21 = b[7], b22 = b[8];\n\n\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\tout[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\tout[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\tout[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\treturn out;\n}\n\nexport const mul = multiply;\n\nexport function rotate(out: number[], a: ACN, rad: number): number[];\nexport function rotate<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotate(out: AN, a: ACN, rad: number) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\ta20 = a[6], a21 = a[7], a22 = a[8];\n\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\n\tout[0] = c * a00 + s * a10;\n\tout[1] = c * a01 + s * a11;\n\tout[2] = c * a02 + s * a12;\n\n\tout[3] = c * a10 - s * a00;\n\tout[4] = c * a11 - s * a01;\n\tout[5] = c * a12 - s * a02;\n\n\tout[6] = a20;\n\tout[7] = a21;\n\tout[8] = a22;\n\treturn out;\n}\n\nexport function scale(out: number[], a: ACN, v2: ACN): number[];\nexport function scale<T extends AN>(out: T, a: ACN, v2: ACN): T;\nexport function scale(out: AN, a: ACN, v2: ACN) {\n\tconst x = v2[0], y = v2[1];\n\n\tout[0] = x * a[0];\n\tout[1] = x * a[1];\n\tout[2] = x * a[2];\n\n\tout[3] = y * a[3];\n\tout[4] = y * a[4];\n\tout[5] = y * a[5];\n\n\tout[6] = a[6];\n\tout[7] = a[7];\n\tout[8] = a[8];\n\treturn out;\n}\n\nexport function translate(out: number[], a: ACN, v2: ACN): number[];\nexport function translate<T extends AN>(out: T, a: ACN, v2: ACN): T;\nexport function translate(out: AN, a: ACN, v2: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\ta20 = a[6], a21 = a[7], a22 = a[8];\n\tconst x = v2[0], y = v2[1];\n\n\tout[0] = a00;\n\tout[1] = a01;\n\tout[2] = a02;\n\n\tout[3] = a10;\n\tout[4] = a11;\n\tout[5] = a12;\n\n\tout[6] = x * a00 + y * a10 + a20;\n\tout[7] = x * a01 + y * a11 + a21;\n\tout[8] = x * a02 + y * a12 + a22;\n\treturn out;\n}\n\nexport function fromRotation(out: number[], rad: number): number[];\nexport function fromRotation<T extends AN>(out: T, rad: number): T;\nexport function fromRotation(out: AN, rad: number) {\n\tconst s = Math.sin(rad), c = Math.cos(rad);\n\n\tout[0] = c;\n\tout[1] = s;\n\tout[2] = 0;\n\n\tout[3] = -s;\n\tout[4] = c;\n\tout[5] = 0;\n\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 1;\n\treturn out;\n}\n\nexport function fromScaling(out: number[], v2: ACN): number[];\nexport function fromScaling<T extends AN>(out: T, v2: ACN): T;\nexport function fromScaling(out: AN, v2: ACN) {\n\tout[0] = v2[0];\n\tout[1] = 0;\n\tout[2] = 0;\n\n\tout[3] = 0;\n\tout[4] = v2[1];\n\tout[5] = 0;\n\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 1;\n\treturn out;\n}\n\nexport function fromTranslation(out: number[], v2: ACN): number[];\nexport function fromTranslation<T extends AN>(out: T, v2: ACN): T;\nexport function fromTranslation(out: AN, v2: ACN) {\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 1;\n\tout[5] = 0;\n\tout[6] = v2[0];\n\tout[7] = v2[1];\n\tout[8] = 1;\n\treturn out;\n}\n\nexport function fromMat2d(out: number[], m2d: ACN): number[];\nexport function fromMat2d<T extends AN>(out: T, m2d: ACN): T;\nexport function fromMat2d(out: AN, m2d: ACN) {\n\tout[0] = m2d[0];\n\tout[1] = m2d[1];\n\tout[2] = 0;\n\n\tout[3] = m2d[2];\n\tout[4] = m2d[3];\n\tout[5] = 0;\n\n\tout[6] = m2d[4];\n\tout[7] = m2d[5];\n\tout[8] = 1;\n\treturn out;\n}\n\nexport function fromMat4(out: number[], m4: ACN): number[];\nexport function fromMat4<T extends AN>(out: T, m4: ACN): T;\nexport function fromMat4(out: AN, m4: ACN) {\n\tout[0] = m4[0];\n\tout[1] = m4[1];\n\tout[2] = m4[2];\n\tout[3] = m4[4];\n\tout[4] = m4[5];\n\tout[5] = m4[6];\n\tout[6] = m4[8];\n\tout[7] = m4[9];\n\tout[8] = m4[10];\n\treturn out;\n}\n\nexport function fromQuat(out: number[], q: ACN): number[];\nexport function fromQuat<T extends AN>(out: T, q: ACN): T;\nexport function fromQuat(out: AN, q: ACN) {\n\tconst x = q[0], y = q[1], z = q[2], w = q[3],\n\t\tx2 = x + x,\n\t\ty2 = y + y,\n\t\tz2 = z + z,\n\n\t\txx = x * x2,\n\t\tyx = y * x2,\n\t\tyy = y * y2,\n\t\tzx = z * x2,\n\t\tzy = z * y2,\n\t\tzz = z * z2,\n\t\twx = w * x2,\n\t\twy = w * y2,\n\t\twz = w * z2;\n\n\tout[0] = 1 - yy - zz;\n\tout[3] = yx - wz;\n\tout[6] = zx + wy;\n\n\tout[1] = yx + wz;\n\tout[4] = 1 - xx - zz;\n\tout[7] = zy - wx;\n\n\tout[2] = zx - wy;\n\tout[5] = zy + wx;\n\tout[8] = 1 - xx - yy;\n\n\treturn out;\n}\n\nexport function normalFromMat4(out: number[], m4: ACN): number[];\nexport function normalFromMat4<T extends AN>(out: T, m4: ACN): T;\nexport function normalFromMat4(out: AN, m4: ACN) {\n\tconst a00 = m4[0], a01 = m4[1], a02 = m4[2], a03 = m4[3],\n\t\ta10 = m4[4], a11 = m4[5], a12 = m4[6], a13 = m4[7],\n\t\ta20 = m4[8], a21 = m4[9], a22 = m4[10], a23 = m4[11],\n\t\ta30 = m4[12], a31 = m4[13], a32 = m4[14], a33 = m4[15],\n\n\t\tb00 = a00 * a11 - a01 * a10,\n\t\tb01 = a00 * a12 - a02 * a10,\n\t\tb02 = a00 * a13 - a03 * a10,\n\t\tb03 = a01 * a12 - a02 * a11,\n\t\tb04 = a01 * a13 - a03 * a11,\n\t\tb05 = a02 * a13 - a03 * a12,\n\t\tb06 = a20 * a31 - a21 * a30,\n\t\tb07 = a20 * a32 - a22 * a30,\n\t\tb08 = a20 * a33 - a23 * a30,\n\t\tb09 = a21 * a32 - a22 * a31,\n\t\tb10 = a21 * a33 - a23 * a31,\n\t\tb11 = a22 * a33 - a23 * a32;\n\n\t// Calculate the determinant\n\tlet det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n\tif (! det) {\n\t\treturn null;\n\t}\n\tdet = 1.0 / det;\n\n\tout[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\tout[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\tout[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n\tout[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\tout[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\tout[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n\tout[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\tout[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\tout[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n\treturn out;\n}\n\nexport function str(a: ACN) {\n\treturn `mat3(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]}, ${a[4]}, ${a[5]}, ${a[6]}, ${a[7]}, ${a[8]})`;\n}\n\nexport function frob(a: ACN) {\n\treturn\tMath.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) +\n\t\t\tMath.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n\nexport function add(out: number[], a: ACN, b: ACN): number[];\nexport function add<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function add(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] + b[0];\n\tout[1] = a[1] + b[1];\n\tout[2] = a[2] + b[2];\n\tout[3] = a[3] + b[3];\n\tout[4] = a[4] + b[4];\n\tout[5] = a[5] + b[5];\n\tout[6] = a[6] + b[6];\n\tout[7] = a[7] + b[7];\n\tout[8] = a[8] + b[8];\n\treturn out;\n}\n\nexport function subtract(out: number[], a: ACN, b: ACN): number[];\nexport function subtract<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function subtract(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] - b[0];\n\tout[1] = a[1] - b[1];\n\tout[2] = a[2] - b[2];\n\tout[3] = a[3] - b[3];\n\tout[4] = a[4] - b[4];\n\tout[5] = a[5] - b[5];\n\tout[6] = a[6] - b[6];\n\tout[7] = a[7] - b[7];\n\tout[8] = a[8] - b[8];\n\treturn out;\n}\n\nexport const sub = subtract;\n\nexport function multiplyScalar(out: number[], a: ACN, scale: number): number[];\nexport function multiplyScalar<T extends AN>(out: T, a: ACN, scale: number): T;\nexport function multiplyScalar(out: AN, a: ACN, scale: number) {\n\tout[0] = a[0] * scale;\n\tout[1] = a[1] * scale;\n\tout[2] = a[2] * scale;\n\tout[3] = a[3] * scale;\n\tout[4] = a[4] * scale;\n\tout[5] = a[5] * scale;\n\tout[6] = a[6] * scale;\n\tout[7] = a[7] * scale;\n\tout[8] = a[8] * scale;\n\treturn out;\n}\n\nexport function multiplyScalarAndAdd(out: number[], a: ACN, b: ACN, scale: number): number[];\nexport function multiplyScalarAndAdd<T extends AN>(out: T, a: ACN, b: ACN, scale: number): T;\nexport function multiplyScalarAndAdd(out: AN, a: ACN, b: ACN, scale: number) {\n\tout[0] = a[0] + (b[0] * scale);\n\tout[1] = a[1] + (b[1] * scale);\n\tout[2] = a[2] + (b[2] * scale);\n\tout[3] = a[3] + (b[3] * scale);\n\tout[4] = a[4] + (b[4] * scale);\n\tout[5] = a[5] + (b[5] * scale);\n\tout[6] = a[6] + (b[6] * scale);\n\tout[7] = a[7] + (b[7] * scale);\n\tout[8] = a[8] + (b[8] * scale);\n\treturn out;\n}\n\nexport function exactEquals(a: ACN, b: ACN) {\n\treturn\ta[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n\t\t\ta[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n\t\t\ta[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\nexport function equals(a: ACN, b: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n\tconst b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n\treturn (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n\t\t\tMath.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n\t\t\tMath.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n\t\t\tMath.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n\t\t\tMath.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n\t\t\tMath.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n","/**\n * math/quat - quaternion type\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\n/* Copyright (c) 2015-2017, Brandon Jones, Colin MacKenzie IV, Arthur Langereis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport { ArrayOfConstNumber as ACN, ArrayOfNumber as AN } from \"@stardazed/core\";\nimport { EPSILON } from \"./common\";\nimport { create as mat3Create } from \"./mat3\";\nimport * as vec3 from \"./vec3\";\nimport * as vec4 from \"./vec4\";\n\nexport const ELEMENT_COUNT = 4;\n\nexport function create() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 0;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 1;\n\treturn out;\n}\n\nconst tmpVec3_ = vec3.create();\nconst xUnitVec3_ = vec3.fromValues(1, 0, 0);\nconst yUnitVec3_ = vec3.fromValues(0, 1, 0);\n\nexport function rotationTo(out: number[], a: ACN, b: ACN): number[];\nexport function rotationTo<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function rotationTo(out: AN, a: ACN, b: ACN) {\n\tconst dot = vec3.dot(a, b);\n\tif (dot < (-1 + EPSILON)) {\n\t\tvec3.cross(tmpVec3_, xUnitVec3_, a);\n\t\tif (vec3.length(tmpVec3_) < EPSILON) {\n\t\t\tvec3.cross(tmpVec3_, yUnitVec3_, a);\n\t\t}\n\t\tvec3.normalize(tmpVec3_, tmpVec3_);\n\t\tsetAxisAngle(out, tmpVec3_, Math.PI);\n\t\treturn out;\n\t} else if (dot > (1 - EPSILON)) {\n\t\tout[0] = 0;\n\t\tout[1] = 0;\n\t\tout[2] = 0;\n\t\tout[3] = 1;\n\t\treturn out;\n\t} else {\n\t\tvec3.cross(tmpVec3_, a, b);\n\t\tout[0] = tmpVec3_[0];\n\t\tout[1] = tmpVec3_[1];\n\t\tout[2] = tmpVec3_[2];\n\t\tout[3] = 1 + dot;\n\t\treturn normalize(out, out);\n\t}\n}\n\nconst mat_ = mat3Create();\n\nexport function setAxes(out: number[], view: ACN, right: ACN, up: ACN): number[];\nexport function setAxes<T extends AN>(out: T, view: ACN, right: ACN, up: ACN): T;\nexport function setAxes(out: AN, view: ACN, right: ACN, up: ACN) {\n\tmat_[0] = right[0];\n\tmat_[3] = right[1];\n\tmat_[6] = right[2];\n\n\tmat_[1] = up[0];\n\tmat_[4] = up[1];\n\tmat_[7] = up[2];\n\n\tmat_[2] = -view[0];\n\tmat_[5] = -view[1];\n\tmat_[8] = -view[2];\n\n\treturn normalize(out, fromMat3(out, mat_));\n}\n\nexport const clone = vec4.clone;\n\nexport const fromValues = vec4.fromValues;\n\nexport const copy = vec4.copy;\n\nexport const set = vec4.set;\n\nexport function identity(out: number[]): number[];\nexport function identity<T extends AN>(out: T): T;\nexport function identity(out: AN) {\n\tout[0] = 0;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 1;\n\treturn out;\n}\n\nexport function setAxisAngle(out: number[], axis: ACN, rad: number): number[];\nexport function setAxisAngle<T extends AN>(out: T, axis: ACN, rad: number): T;\nexport function setAxisAngle(out: AN, axis: ACN, rad: number) {\n\trad = rad * 0.5;\n\tconst s = Math.sin(rad);\n\tout[0] = s * axis[0];\n\tout[1] = s * axis[1];\n\tout[2] = s * axis[2];\n\tout[3] = Math.cos(rad);\n\treturn out;\n}\n\nexport function getAxisAngle(outAxis: AN, q: ACN): number {\n\tconst rad = Math.acos(q[3]) * 2.0;\n\tconst s = Math.sin(rad / 2.0);\n\tif (s !== 0.0) {\n\t\toutAxis[0] = q[0] / s;\n\t\toutAxis[1] = q[1] / s;\n\t\toutAxis[2] = q[2] / s;\n\t}\n\telse {\n\t\t// If s is zero, return any axis (no rotation - axis does not matter)\n\t\toutAxis[0] = 1;\n\t\toutAxis[1] = 0;\n\t\toutAxis[2] = 0;\n\t}\n\treturn rad;\n}\n\nexport const add = vec4.add;\n\nexport function multiply(out: number[], a: ACN, b: ACN): number[];\nexport function multiply<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function multiply(out: AN, a: ACN, b: ACN) {\n\tconst ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t\tbx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n\tout[0] = ax * bw + aw * bx + ay * bz - az * by;\n\tout[1] = ay * bw + aw * by + az * bx - ax * bz;\n\tout[2] = az * bw + aw * bz + ax * by - ay * bx;\n\tout[3] = aw * bw - ax * bx - ay * by - az * bz;\n\treturn out;\n}\n\nexport const mul = multiply;\n\nexport const scale = vec4.scale;\n\nexport function rotateX(out: number[], a: ACN, rad: number): number[];\nexport function rotateX<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotateX(out: AN, a: ACN, rad: number) {\n\trad *= 0.5;\n\n\tconst ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t\tbx = Math.sin(rad), bw = Math.cos(rad);\n\n\tout[0] = ax * bw + aw * bx;\n\tout[1] = ay * bw + az * bx;\n\tout[2] = az * bw - ay * bx;\n\tout[3] = aw * bw - ax * bx;\n\treturn out;\n}\n\nexport function rotateY(out: number[], a: ACN, rad: number): number[];\nexport function rotateY<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotateY(out: AN, a: ACN, rad: number) {\n\trad *= 0.5;\n\n\tconst ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t\tby = Math.sin(rad), bw = Math.cos(rad);\n\n\tout[0] = ax * bw - az * by;\n\tout[1] = ay * bw + aw * by;\n\tout[2] = az * bw + ax * by;\n\tout[3] = aw * bw - ay * by;\n\treturn out;\n}\n\nexport function rotateZ(out: number[], a: ACN, rad: number): number[];\nexport function rotateZ<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotateZ(out: AN, a: ACN, rad: number) {\n\trad *= 0.5;\n\n\tconst ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t\tbz = Math.sin(rad), bw = Math.cos(rad);\n\n\tout[0] = ax * bw + ay * bz;\n\tout[1] = ay * bw - ax * bz;\n\tout[2] = az * bw + aw * bz;\n\tout[3] = aw * bw - az * bz;\n\treturn out;\n}\n\nexport function calculateW(out: number[], a: ACN): number[];\nexport function calculateW<T extends AN>(out: T, a: ACN): T;\nexport function calculateW(out: AN, a: ACN) {\n\tconst x = a[0], y = a[1], z = a[2];\n\n\tout[0] = x;\n\tout[1] = y;\n\tout[2] = z;\n\tout[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n\treturn out;\n}\n\nexport const dot = vec4.dot;\n\nexport const lerp = vec4.lerp;\n\nexport function slerp(out: number[], a: ACN, b: ACN, t: number): number[];\nexport function slerp<T extends AN>(out: T, a: ACN, b: ACN, t: number): T;\nexport function slerp(out: AN, a: ACN, b: ACN, t: number) {\n\t// benchmarks:\n\t//    http://jsperf.com/quaternion-slerp-implementations\n\n\tconst ax = a[0], ay = a[1], az = a[2], aw = a[3];\n\tlet bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n\tlet omega, cosom, sinom, scale0, scale1;\n\n\t// calc cosine\n\tcosom = ax * bx + ay * by + az * bz + aw * bw;\n\t// adjust signs (if necessary)\n\tif (cosom < 0.0) {\n\t\tcosom = -cosom;\n\t\tbx = - bx;\n\t\tby = - by;\n\t\tbz = - bz;\n\t\tbw = - bw;\n\t}\n\t// calculate coefficients\n\tif ((1.0 - cosom) > EPSILON) {\n\t\t// standard case (slerp)\n\t\tomega  = Math.acos(cosom);\n\t\tsinom  = Math.sin(omega);\n\t\tscale0 = Math.sin((1.0 - t) * omega) / sinom;\n\t\tscale1 = Math.sin(t * omega) / sinom;\n\t}\n\telse {\n\t\t// \"from\" and \"to\" quaternions are very close \n\t\t//  ... so we can do a linear interpolation\n\t\tscale0 = 1.0 - t;\n\t\tscale1 = t;\n\t}\n\t// calculate final values\n\tout[0] = scale0 * ax + scale1 * bx;\n\tout[1] = scale0 * ay + scale1 * by;\n\tout[2] = scale0 * az + scale1 * bz;\n\tout[3] = scale0 * aw + scale1 * bw;\n\n\treturn out;\n}\n\nconst tempQ1_ = create();\nconst tempQ2_ = create();\n\nexport function sqlerp(out: number[], a: ACN, b: ACN, c: ACN, d: ACN, t: number): number[];\nexport function sqlerp<T extends AN>(out: AN, a: ACN, b: ACN, c: ACN, d: ACN, t: number): T;\nexport function sqlerp(out: AN, a: ACN, b: ACN, c: ACN, d: ACN, t: number) {\n\tslerp(tempQ1_, a, d, t);\n\tslerp(tempQ2_, b, c, t);\n\tslerp(out, tempQ1_, tempQ2_, 2 * t * (1 - t));\n\n\treturn out;\n}\n\nexport function invert(out: number[], a: ACN): number[];\nexport function invert<T extends AN>(out: T, a: ACN): T;\nexport function invert(out: AN, a: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t\tdot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3, // tslint:disable-line:no-shadowed-variable\n\t\tinvDot = dot ? 1.0 / dot : 0;\n\n\t// TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\tout[0] = -a0 * invDot;\n\tout[1] = -a1 * invDot;\n\tout[2] = -a2 * invDot;\n\tout[3] =  a3 * invDot;\n\treturn out;\n}\n\nexport function conjugate(out: number[], a: ACN): number[];\nexport function conjugate<T extends AN>(out: T, a: ACN): T;\nexport function conjugate(out: AN, a: ACN) {\n\tout[0] = -a[0];\n\tout[1] = -a[1];\n\tout[2] = -a[2];\n\tout[3] = a[3];\n\treturn out;\n}\n\nexport const length = vec4.length;\n\nexport const len = length;\n\nexport const squaredLength = vec4.squaredLength;\n\nexport const sqrLen = squaredLength;\n\nexport const normalize = vec4.normalize;\n\nexport function fromMat3(out: number[], m: ACN): number[];\nexport function fromMat3<T extends AN>(out: T, m: ACN): T;\nexport function fromMat3(out: AN, m: ACN) {\n\t// Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n\t// article \"Quaternion Calculus and Fast Animation\".\n\tconst fTrace = m[0] + m[4] + m[8];\n\tlet fRoot;\n\n\tif (fTrace > 0.0) {\n\t\t// |w| > 1/2, may as well choose w > 1/2\n\t\tfRoot = Math.sqrt(fTrace + 1.0);  // 2w\n\t\tout[3] = 0.5 * fRoot;\n\t\tfRoot = 0.5 / fRoot;  // 1/(4w)\n\t\tout[0] = (m[5] - m[7]) * fRoot;\n\t\tout[1] = (m[6] - m[2]) * fRoot;\n\t\tout[2] = (m[1] - m[3]) * fRoot;\n\t}\n\telse {\n\t\t// |w| <= 1/2\n\t\tlet i = 0;\n\t\tif (m[4] > m[0]) {\n\t\t\ti = 1;\n\t\t}\n\t\tif (m[8] > m[i * 3 + i]) {\n\t\t\ti = 2;\n\t\t}\n\t\tconst j = (i + 1) % 3;\n\t\tconst k = (i + 2) % 3;\n\n\t\tfRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n\t\tout[i] = 0.5 * fRoot;\n\t\tfRoot = 0.5 / fRoot;\n\t\tout[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n\t\tout[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n\t\tout[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n\t}\n\n\treturn out;\n}\n\nexport function fromEuler(yaw: number, pitch: number, roll: number) {\n\tconst y = yaw * 0.5;\n\tconst p = pitch * 0.5;\n\tconst r = roll * 0.5;\n\n\tconst siny = Math.sin(y), cosy = Math.cos(y);\n\tconst sinp = Math.sin(p), cosp = Math.cos(p);\n\tconst sinr = Math.sin(r), cosr = Math.cos(r);\n\n\t// evaluated form of 3 Quat multiplications (of yaw, pitch and roll)\n\treturn normalize(new Float32Array(ELEMENT_COUNT), [\n\t\tsinr * cosp * cosy - cosr * sinp * siny,\n\t\tcosr * sinp * cosy + sinr * cosp * siny,\n\t\tcosr * cosp * siny - sinr * sinp * cosy,\n\t\tcosr * cosp * cosy + sinr * sinp * siny\n\t]);\n}\n\n\nexport function str(a: ACN) {\n\treturn `quat(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]})`;\n}\n\nexport const exactEquals = vec4.exactEquals;\n\nexport const equals = vec4.equals;\n","/**\n * math/mat2 - 2x2 matrix type\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\n/* Copyright (c) 2015-2017, Brandon Jones, Colin MacKenzie IV, Arthur Langereis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport { ArrayOfConstNumber as ACN, ArrayOfNumber as AN } from \"@stardazed/core\";\nimport { EPSILON } from \"./common\";\n\nexport const ELEMENT_COUNT = 4;\n\nexport function create() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 1;\n\treturn out;\n}\n\nexport function clone(a: ACN) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\treturn out;\n}\n\nexport function copy(out: number[], a: ACN): number[];\nexport function copy<T extends AN>(out: T, a: ACN): T;\nexport function copy(out: AN, a: ACN) {\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\treturn out;\n}\n\nexport function identity(out: number[]): number[];\nexport function identity<T extends AN>(out: T): T;\nexport function identity(out: AN) {\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 1;\n\treturn out;\n}\n\nexport function fromValues(m00: number, m01: number, m10: number, m11: number) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = m00;\n\tout[1] = m01;\n\tout[2] = m10;\n\tout[3] = m11;\n\treturn out;\n}\n\nexport function set(out: number[], m00: number, m01: number, m10: number, m11: number): number[];\nexport function set<T extends AN>(out: T, m00: number, m01: number, m10: number, m11: number): T;\nexport function set(out: AN, m00: number, m01: number, m10: number, m11: number) {\n\tout[0] = m00;\n\tout[1] = m01;\n\tout[2] = m10;\n\tout[3] = m11;\n\treturn out;\n}\n\n\nexport function transpose(out: number[], a: ACN): number[];\nexport function transpose<T extends AN>(out: T, a: ACN): T;\nexport function transpose(out: AN, a: ACN) {\n\t// If we are transposing ourselves we can skip a few steps but have to cache some values\n\tif (out === a) {\n\t\tconst a1 = a[1];\n\t\tout[1] = a[2];\n\t\tout[2] = a1;\n\t} else {\n\t\tout[0] = a[0];\n\t\tout[1] = a[2];\n\t\tout[2] = a[1];\n\t\tout[3] = a[3];\n\t}\n\treturn out;\n}\n\nexport function invert(out: number[], a: ACN): number[];\nexport function invert<T extends AN>(out: T, a: ACN): T;\nexport function invert(out: AN, a: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\t// Calculate the determinant\n\tlet det = a0 * a3 - a2 * a1;\n\n\tif (! det) {\n\t\treturn null;\n\t}\n\tdet = 1.0 / det;\n\n\tout[0] =  a3 * det;\n\tout[1] = -a1 * det;\n\tout[2] = -a2 * det;\n\tout[3] =  a0 * det;\n\treturn out;\n}\n\nexport function adjoint(out: number[], a: ACN): number[];\nexport function adjoint<T extends AN>(out: T, a: ACN): T;\nexport function adjoint(out: AN, a: ACN) {\n\t// Caching this value is necessary if out == a\n\tconst a0 = a[0];\n\tout[0] =  a[3];\n\tout[1] = -a[1];\n\tout[2] = -a[2];\n\tout[3] =  a0;\n\treturn out;\n}\n\nexport function determinant(a: ACN) {\n\treturn a[0] * a[3] - a[2] * a[1];\n}\n\nexport function multiply(out: number[], a: ACN, b: ACN): number[];\nexport function multiply<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function multiply(out: AN, a: ACN, b: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\tconst b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n\tout[0] = a0 * b0 + a2 * b1;\n\tout[1] = a1 * b0 + a3 * b1;\n\tout[2] = a0 * b2 + a2 * b3;\n\tout[3] = a1 * b2 + a3 * b3;\n\treturn out;\n}\n\nexport const mul = multiply;\n\nexport function rotate(out: number[], a: ACN, rad: number): number[];\nexport function rotate<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotate(out: AN, a: ACN, rad: number) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\tout[0] = a0 *  c + a2 * s;\n\tout[1] = a1 *  c + a3 * s;\n\tout[2] = a0 * -s + a2 * c;\n\tout[3] = a1 * -s + a3 * c;\n\treturn out;\n}\n\nexport function scale(out: number[], a: ACN, v2: ACN): number[];\nexport function scale<T extends AN>(out: T, a: ACN, v2: ACN): T;\nexport function scale(out: AN, a: ACN, v2: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\tconst v0 = v2[0], v1 = v2[1];\n\tout[0] = a0 * v0;\n\tout[1] = a1 * v0;\n\tout[2] = a2 * v1;\n\tout[3] = a3 * v1;\n\treturn out;\n}\n\nexport function fromRotation(out: number[], rad: number): number[];\nexport function fromRotation<T extends AN>(out: T, rad: number): T;\nexport function fromRotation(out: AN, rad: number) {\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\tout[0] = c;\n\tout[1] = s;\n\tout[2] = -s;\n\tout[3] = c;\n\treturn out;\n}\n\nexport function fromScaling(out: number[], v2: ACN): number[];\nexport function fromScaling<T extends AN>(out: T, v2: ACN): T;\nexport function fromScaling(out: AN, v2: ACN) {\n\tout[0] = v2[0];\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = v2[1];\n\treturn out;\n}\n\nexport function str(a: ACN) {\n\treturn `mat2(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]})`;\n}\n\nexport function frob(a: ACN) {\n\treturn Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n}\n\nexport function LDU(L: AN, D: ACN, U: AN, a: ACN): ACN[] {\n\tL[2] = a[2] / a[0];\n\tU[0] = a[0];\n\tU[1] = a[1];\n\tU[3] = a[3] - L[2] * U[1];\n\treturn [L, D, U];\n}\n\nexport function add(out: number[], a: ACN, b: ACN): number[];\nexport function add<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function add(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] + b[0];\n\tout[1] = a[1] + b[1];\n\tout[2] = a[2] + b[2];\n\tout[3] = a[3] + b[3];\n\treturn out;\n}\n\nexport function subtract(out: number[], a: ACN, b: ACN): number[];\nexport function subtract<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function subtract(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] - b[0];\n\tout[1] = a[1] - b[1];\n\tout[2] = a[2] - b[2];\n\tout[3] = a[3] - b[3];\n\treturn out;\n}\n\nexport const sub = subtract;\n\nexport function multiplyScalar(out: number[], a: ACN, scale: number): number[];\nexport function multiplyScalar<T extends AN>(out: T, a: ACN, scale: number): T;\nexport function multiplyScalar(out: AN, a: ACN, scale: number) {\n\tout[0] = a[0] * scale;\n\tout[1] = a[1] * scale;\n\tout[2] = a[2] * scale;\n\tout[3] = a[3] * scale;\n\treturn out;\n}\n\nexport function multiplyScalarAndAdd(out: number[], a: ACN, b: ACN, scale: number): number[];\nexport function multiplyScalarAndAdd<T extends AN>(out: T, a: ACN, b: ACN, scale: number): T;\nexport function multiplyScalarAndAdd(out: AN, a: ACN, b: ACN, scale: number) {\n\tout[0] = a[0] + (b[0] * scale);\n\tout[1] = a[1] + (b[1] * scale);\n\tout[2] = a[2] + (b[2] * scale);\n\tout[3] = a[3] + (b[3] * scale);\n\treturn out;\n}\n\nexport function exactEquals(a: ACN, b: ACN) {\n\treturn a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\nexport function equals(a: ACN, b: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\tconst b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n\treturn (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n","/**\n * math/mat2d - 3x2 matrix type \n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n * \n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/* Copyright (c) 2015-2017, Brandon Jones, Colin MacKenzie IV, Arthur Langereis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport { ArrayOfConstNumber as ACN, ArrayOfNumber as AN } from \"@stardazed/core\";\nimport { EPSILON } from \"./common\";\n\nexport const ELEMENT_COUNT = 6;\n\nexport function create() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 1;\n\tout[4] = 0;\n\tout[5] = 0;\n\treturn out;\n}\n\nexport function clone(a: ACN) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\tout[4] = a[4];\n\tout[5] = a[5];\n\treturn out;\n}\n\nexport function copy(out: number[], a: ACN): number[];\nexport function copy<T extends AN>(out: T, a: ACN): T;\nexport function copy(out: AN, a: ACN) {\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\tout[4] = a[4];\n\tout[5] = a[5];\n\treturn out;\n}\n\nexport function identity(out: number[]): number[];\nexport function identity<T extends AN>(out: T): T;\nexport function identity(out: AN) {\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 1;\n\tout[4] = 0;\n\tout[5] = 0;\n\treturn out;\n}\n\nexport function fromValues(a: number, b: number, c: number, d: number, tx: number, ty: number) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = a;\n\tout[1] = b;\n\tout[2] = c;\n\tout[3] = d;\n\tout[4] = tx;\n\tout[5] = ty;\n\treturn out;\n}\n\nexport function set(out: number[], a: number, b: number, c: number, d: number, tx: number, ty: number): number[];\nexport function set<T extends AN>(out: T, a: number, b: number, c: number, d: number, tx: number, ty: number): T;\nexport function set(out: AN, a: number, b: number, c: number, d: number, tx: number, ty: number) {\n\tout[0] = a;\n\tout[1] = b;\n\tout[2] = c;\n\tout[3] = d;\n\tout[4] = tx;\n\tout[5] = ty;\n\treturn out;\n}\n\nexport function invert(out: number[], a: ACN): number[];\nexport function invert<T extends AN>(out: T, a: ACN): T;\nexport function invert(out: AN, a: ACN) {\n\tconst aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n\tconst atx = a[4], aty = a[5];\n\n\tlet det = aa * ad - ab * ac;\n\tif (! det) {\n\t\treturn null;\n\t}\n\tdet = 1.0 / det;\n\n\tout[0] = ad * det;\n\tout[1] = -ab * det;\n\tout[2] = -ac * det;\n\tout[3] = aa * det;\n\tout[4] = (ac * aty - ad * atx) * det;\n\tout[5] = (ab * atx - aa * aty) * det;\n\treturn out;\n}\n\nexport function determinant(a: ACN) {\n\treturn a[0] * a[3] - a[1] * a[2];\n}\n\nexport function multiply(out: number[], a: ACN, b: ACN): number[];\nexport function multiply<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function multiply(out: AN, a: ACN, b: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n\tconst b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n\tout[0] = a0 * b0 + a2 * b1;\n\tout[1] = a1 * b0 + a3 * b1;\n\tout[2] = a0 * b2 + a2 * b3;\n\tout[3] = a1 * b2 + a3 * b3;\n\tout[4] = a0 * b4 + a2 * b5 + a4;\n\tout[5] = a1 * b4 + a3 * b5 + a5;\n\treturn out;\n}\n\nexport const mul = multiply;\n\nexport function rotate(out: number[], a: ACN, rad: number): number[];\nexport function rotate<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotate(out: AN, a: ACN, rad: number) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\tout[0] = a0 *  c + a2 * s;\n\tout[1] = a1 *  c + a3 * s;\n\tout[2] = a0 * -s + a2 * c;\n\tout[3] = a1 * -s + a3 * c;\n\tout[4] = a4;\n\tout[5] = a5;\n\treturn out;\n}\n\nexport function scale(out: number[], a: ACN, v2: ACN): number[];\nexport function scale<T extends AN>(out: T, a: ACN, v2: ACN): T;\nexport function scale(out: AN, a: ACN, v2: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n\tconst v0 = v2[0], v1 = v2[1];\n\tout[0] = a0 * v0;\n\tout[1] = a1 * v0;\n\tout[2] = a2 * v1;\n\tout[3] = a3 * v1;\n\tout[4] = a4;\n\tout[5] = a5;\n\treturn out;\n}\n\nexport function translate(out: number[], a: ACN, v2: ACN): number[];\nexport function translate<T extends AN>(out: T, a: ACN, v2: ACN): T;\nexport function translate(out: AN, a: ACN, v2: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n\tconst v0 = v2[0], v1 = v2[1];\n\tout[0] = a0;\n\tout[1] = a1;\n\tout[2] = a2;\n\tout[3] = a3;\n\tout[4] = a0 * v0 + a2 * v1 + a4;\n\tout[5] = a1 * v0 + a3 * v1 + a5;\n\treturn out;\n}\n\nexport function fromRotation(out: number[], rad: number): number[];\nexport function fromRotation<T extends AN>(out: T, rad: number): T;\nexport function fromRotation(out: AN, rad: number) {\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\tout[0] = c;\n\tout[1] = s;\n\tout[2] = -s;\n\tout[3] = c;\n\tout[4] = 0;\n\tout[5] = 0;\n\treturn out;\n}\n\nexport function fromScaling(out: number[], v2: ACN): number[];\nexport function fromScaling<T extends AN>(out: T, v2: ACN): T;\nexport function fromScaling(out: AN, v2: ACN) {\n\tout[0] = v2[0];\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = v2[1];\n\tout[4] = 0;\n\tout[5] = 0;\n\treturn out;\n}\n\nexport function fromTranslation(out: number[], v2: ACN): number[];\nexport function fromTranslation<T extends AN>(out: T, v2: ACN): T;\nexport function fromTranslation(out: AN, v2: ACN) {\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 1;\n\tout[4] = v2[0];\n\tout[5] = v2[1];\n\treturn out;\n}\n\nexport function str(a: ACN) {\n\treturn `mat2d(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]}, ${a[4]}, ${a[5]})`;\n}\n\nexport function frob(a: ACN) {\n\treturn\tMath.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) +\n\t\t\tMath.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n}\n\nexport function add(out: number[], a: ACN, b: ACN): number[];\nexport function add<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function add(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] + b[0];\n\tout[1] = a[1] + b[1];\n\tout[2] = a[2] + b[2];\n\tout[3] = a[3] + b[3];\n\tout[4] = a[4] + b[4];\n\tout[5] = a[5] + b[5];\n\treturn out;\n}\n\nexport function subtract(out: number[], a: ACN, b: ACN): number[];\nexport function subtract<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function subtract(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] - b[0];\n\tout[1] = a[1] - b[1];\n\tout[2] = a[2] - b[2];\n\tout[3] = a[3] - b[3];\n\tout[4] = a[4] - b[4];\n\tout[5] = a[5] - b[5];\n\treturn out;\n}\n\nexport const sub = subtract;\n\nexport function multiplyScalar(out: number[], a: ACN, scale: number): number[];\nexport function multiplyScalar<T extends AN>(out: T, a: ACN, scale: number): T;\nexport function multiplyScalar(out: AN, a: ACN, scale: number) {\n\tout[0] = a[0] * scale;\n\tout[1] = a[1] * scale;\n\tout[2] = a[2] * scale;\n\tout[3] = a[3] * scale;\n\tout[4] = a[4] * scale;\n\tout[5] = a[5] * scale;\n\treturn out;\n}\n\nexport function multiplyScalarAndAdd(out: number[], a: ACN, b: ACN, scale: number): number[];\nexport function multiplyScalarAndAdd<T extends AN>(out: T, a: ACN, b: ACN, scale: number): T;\nexport function multiplyScalarAndAdd(out: AN, a: ACN, b: ACN, scale: number) {\n\tout[0] = a[0] + (b[0] * scale);\n\tout[1] = a[1] + (b[1] * scale);\n\tout[2] = a[2] + (b[2] * scale);\n\tout[3] = a[3] + (b[3] * scale);\n\tout[4] = a[4] + (b[4] * scale);\n\tout[5] = a[5] + (b[5] * scale);\n\treturn out;\n}\n\nexport function exactEquals(a: ACN, b: ACN) {\n\treturn a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\nexport function equals(a: ACN, b: ACN) {\n\tconst a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n\tconst b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n\treturn (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n\t\t\tMath.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n\t\t\tMath.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n","/**\n * math/mat4 - 4x4 matrix type\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\n/* Copyright (c) 2015-2017, Brandon Jones, Colin MacKenzie IV, Arthur Langereis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport { ArrayOfConstNumber as ACN, ArrayOfNumber as AN } from \"@stardazed/core\";\nimport { EPSILON } from \"./common\";\n\nexport const ELEMENT_COUNT = 16;\n\nexport function create() {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 0;\n\tout[5] = 1;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 0;\n\tout[9] = 0;\n\tout[10] = 1;\n\tout[11] = 0;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = 0;\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function clone(a: ACN) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\tout[4] = a[4];\n\tout[5] = a[5];\n\tout[6] = a[6];\n\tout[7] = a[7];\n\tout[8] = a[8];\n\tout[9] = a[9];\n\tout[10] = a[10];\n\tout[11] = a[11];\n\tout[12] = a[12];\n\tout[13] = a[13];\n\tout[14] = a[14];\n\tout[15] = a[15];\n\treturn out;\n}\n\nexport function copy(out: number[], a: ACN): number[];\nexport function copy<T extends AN>(out: T, a: ACN): T;\nexport function copy(out: AN, a: ACN) {\n\tout[0] = a[0];\n\tout[1] = a[1];\n\tout[2] = a[2];\n\tout[3] = a[3];\n\tout[4] = a[4];\n\tout[5] = a[5];\n\tout[6] = a[6];\n\tout[7] = a[7];\n\tout[8] = a[8];\n\tout[9] = a[9];\n\tout[10] = a[10];\n\tout[11] = a[11];\n\tout[12] = a[12];\n\tout[13] = a[13];\n\tout[14] = a[14];\n\tout[15] = a[15];\n\treturn out;\n}\n\nexport function identity(out: number[]): number[];\nexport function identity<T extends AN>(out: T): T;\nexport function identity(out: AN) {\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 0;\n\tout[5] = 1;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 0;\n\tout[9] = 0;\n\tout[10] = 1;\n\tout[11] = 0;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = 0;\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function fromValues(\n\tm00: number, m01: number, m02: number, m03: number, m10: number, m11: number, m12: number, m13: number,\n\tm20: number, m21: number, m22: number, m23: number, m30: number, m31: number, m32: number, m33: number\n) {\n\tconst out = new Float32Array(ELEMENT_COUNT);\n\tout[0] = m00;\n\tout[1] = m01;\n\tout[2] = m02;\n\tout[3] = m03;\n\tout[4] = m10;\n\tout[5] = m11;\n\tout[6] = m12;\n\tout[7] = m13;\n\tout[8] = m20;\n\tout[9] = m21;\n\tout[10] = m22;\n\tout[11] = m23;\n\tout[12] = m30;\n\tout[13] = m31;\n\tout[14] = m32;\n\tout[15] = m33;\n\treturn out;\n}\n\nexport function set(\n\tout: number[],\n\tm00: number, m01: number, m02: number, m03: number, m10: number, m11: number, m12: number, m13: number,\n\tm20: number, m21: number, m22: number, m23: number, m30: number, m31: number, m32: number, m33: number\n): number[];\nexport function set<T extends AN>(\n\tout: T,\n\tm00: number, m01: number, m02: number, m03: number, m10: number, m11: number, m12: number, m13: number,\n\tm20: number, m21: number, m22: number, m23: number, m30: number, m31: number, m32: number, m33: number\n): T;\nexport function set(\n\tout: AN,\n\tm00: number, m01: number, m02: number, m03: number, m10: number, m11: number, m12: number, m13: number,\n\tm20: number, m21: number, m22: number, m23: number, m30: number, m31: number, m32: number, m33: number\n) {\n\tout[0] = m00;\n\tout[1] = m01;\n\tout[2] = m02;\n\tout[3] = m03;\n\tout[4] = m10;\n\tout[5] = m11;\n\tout[6] = m12;\n\tout[7] = m13;\n\tout[8] = m20;\n\tout[9] = m21;\n\tout[10] = m22;\n\tout[11] = m23;\n\tout[12] = m30;\n\tout[13] = m31;\n\tout[14] = m32;\n\tout[15] = m33;\n\treturn out;\n}\n\nexport function transpose(out: number[], a: ACN): number[];\nexport function transpose<T extends AN>(out: T, a: ACN): T;\nexport function transpose(out: AN, a: ACN) {\n\t// If we are transposing ourselves we can skip a few steps but have to cache some values\n\tif (out === a) {\n\t\tconst a01 = a[1], a02 = a[2], a03 = a[3],\n\t\t\ta12 = a[6], a13 = a[7],\n\t\t\ta23 = a[11];\n\n\t\tout[1] = a[4];\n\t\tout[2] = a[8];\n\t\tout[3] = a[12];\n\t\tout[4] = a01;\n\t\tout[6] = a[9];\n\t\tout[7] = a[13];\n\t\tout[8] = a02;\n\t\tout[9] = a12;\n\t\tout[11] = a[14];\n\t\tout[12] = a03;\n\t\tout[13] = a13;\n\t\tout[14] = a23;\n\t}\n\telse {\n\t\tout[0] = a[0];\n\t\tout[1] = a[4];\n\t\tout[2] = a[8];\n\t\tout[3] = a[12];\n\t\tout[4] = a[1];\n\t\tout[5] = a[5];\n\t\tout[6] = a[9];\n\t\tout[7] = a[13];\n\t\tout[8] = a[2];\n\t\tout[9] = a[6];\n\t\tout[10] = a[10];\n\t\tout[11] = a[14];\n\t\tout[12] = a[3];\n\t\tout[13] = a[7];\n\t\tout[14] = a[11];\n\t\tout[15] = a[15];\n\t}\n\n\treturn out;\n}\n\nexport function invert(out: number[], a: ACN): number[];\nexport function invert<T extends AN>(out: T, a: ACN): T;\nexport function invert(out: AN, a: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t\ta10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t\ta20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t\ta30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n\t\tb00 = a00 * a11 - a01 * a10,\n\t\tb01 = a00 * a12 - a02 * a10,\n\t\tb02 = a00 * a13 - a03 * a10,\n\t\tb03 = a01 * a12 - a02 * a11,\n\t\tb04 = a01 * a13 - a03 * a11,\n\t\tb05 = a02 * a13 - a03 * a12,\n\t\tb06 = a20 * a31 - a21 * a30,\n\t\tb07 = a20 * a32 - a22 * a30,\n\t\tb08 = a20 * a33 - a23 * a30,\n\t\tb09 = a21 * a32 - a22 * a31,\n\t\tb10 = a21 * a33 - a23 * a31,\n\t\tb11 = a22 * a33 - a23 * a32;\n\n\t// Calculate the determinant\n\tlet det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n\tif (! det) {\n\t\treturn null;\n\t}\n\tdet = 1.0 / det;\n\n\tout[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\tout[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\tout[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\tout[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n\tout[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\tout[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\tout[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\tout[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n\tout[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\tout[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\tout[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\tout[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n\tout[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n\tout[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n\tout[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n\tout[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n\treturn out;\n}\n\nexport function adjoint(out: number[], a: ACN): number[];\nexport function adjoint<T extends AN>(out: T, a: ACN): T;\nexport function adjoint(out: AN, a: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t\ta10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t\ta20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t\ta30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n\tout[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n\tout[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n\tout[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n\tout[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n\tout[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n\tout[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n\tout[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n\tout[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n\tout[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n\tout[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n\tout[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n\tout[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n\tout[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n\tout[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n\tout[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n\tout[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n\treturn out;\n}\n\nexport function determinant(a: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t\ta10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t\ta20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t\ta30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n\t\tb00 = a00 * a11 - a01 * a10,\n\t\tb01 = a00 * a12 - a02 * a10,\n\t\tb02 = a00 * a13 - a03 * a10,\n\t\tb03 = a01 * a12 - a02 * a11,\n\t\tb04 = a01 * a13 - a03 * a11,\n\t\tb05 = a02 * a13 - a03 * a12,\n\t\tb06 = a20 * a31 - a21 * a30,\n\t\tb07 = a20 * a32 - a22 * a30,\n\t\tb08 = a20 * a33 - a23 * a30,\n\t\tb09 = a21 * a32 - a22 * a31,\n\t\tb10 = a21 * a33 - a23 * a31,\n\t\tb11 = a22 * a33 - a23 * a32;\n\n\t// Calculate the determinant\n\treturn b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\nexport function multiply(out: number[], a: ACN, b: ACN): number[];\nexport function multiply<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function multiply(out: AN, a: ACN, b: ACN) {\n\tconst a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t\ta10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t\ta20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t\ta30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n\t// Cache only the current line of the second matrix\n\tlet b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n\tout[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\tout[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\tout[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\tout[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\tb0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n\tout[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\tout[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\tout[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\tout[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\tb0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n\tout[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\tout[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\tout[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\tout[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\tb0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n\tout[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\tout[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\tout[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\tout[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\treturn out;\n}\n\nexport const mul = multiply;\n\nexport function rotate(out: number[], a: ACN, rad: number, axis: ACN): number[];\nexport function rotate<T extends AN>(out: T, a: ACN, rad: number, axis: ACN): T;\nexport function rotate(out: AN, a: ACN, rad: number, axis: ACN) {\n\tlet x = axis[0], y = axis[1], z = axis[2];\n\n\tlet len = Math.sqrt(x * x + y * y + z * z);\n\tif (Math.abs(len) < EPSILON) {\n\t\treturn null;\n\t}\n\n\tlen = 1 / len;\n\tx *= len;\n\ty *= len;\n\tz *= len;\n\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\tconst t = 1 - c;\n\n\tconst a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n\tconst a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n\tconst a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n\n\t// Construct the elements of the rotation matrix\n\tconst b00 = x * x * t + c, b01 = y * x * t + z * s, b02 = z * x * t - y * s;\n\tconst b10 = x * y * t - z * s, b11 = y * y * t + c, b12 = z * y * t + x * s;\n\tconst b20 = x * z * t + y * s, b21 = y * z * t - x * s, b22 = z * z * t + c;\n\n\t// Perform rotation-specific matrix multiplication\n\tout[0] = a00 * b00 + a10 * b01 + a20 * b02;\n\tout[1] = a01 * b00 + a11 * b01 + a21 * b02;\n\tout[2] = a02 * b00 + a12 * b01 + a22 * b02;\n\tout[3] = a03 * b00 + a13 * b01 + a23 * b02;\n\tout[4] = a00 * b10 + a10 * b11 + a20 * b12;\n\tout[5] = a01 * b10 + a11 * b11 + a21 * b12;\n\tout[6] = a02 * b10 + a12 * b11 + a22 * b12;\n\tout[7] = a03 * b10 + a13 * b11 + a23 * b12;\n\tout[8] = a00 * b20 + a10 * b21 + a20 * b22;\n\tout[9] = a01 * b20 + a11 * b21 + a21 * b22;\n\tout[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\tout[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n\tif (a !== out) { // If the source and destination differ, copy the unchanged last row\n\t\tout[12] = a[12];\n\t\tout[13] = a[13];\n\t\tout[14] = a[14];\n\t\tout[15] = a[15];\n\t}\n\treturn out;\n}\n\nexport function rotateX(out: number[], a: ACN, rad: number): number[];\nexport function rotateX<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotateX(out: AN, a: ACN, rad: number) {\n\tconst s = Math.sin(rad),\n\t\tc = Math.cos(rad),\n\t\ta10 = a[4],\n\t\ta11 = a[5],\n\t\ta12 = a[6],\n\t\ta13 = a[7],\n\t\ta20 = a[8],\n\t\ta21 = a[9],\n\t\ta22 = a[10],\n\t\ta23 = a[11];\n\n\tif (a !== out) { // If the source and destination differ, copy the unchanged rows\n\t\tout[0]  = a[0];\n\t\tout[1]  = a[1];\n\t\tout[2]  = a[2];\n\t\tout[3]  = a[3];\n\t\tout[12] = a[12];\n\t\tout[13] = a[13];\n\t\tout[14] = a[14];\n\t\tout[15] = a[15];\n\t}\n\n\t// Perform axis-specific matrix multiplication\n\tout[4] = a10 * c + a20 * s;\n\tout[5] = a11 * c + a21 * s;\n\tout[6] = a12 * c + a22 * s;\n\tout[7] = a13 * c + a23 * s;\n\tout[8] = a20 * c - a10 * s;\n\tout[9] = a21 * c - a11 * s;\n\tout[10] = a22 * c - a12 * s;\n\tout[11] = a23 * c - a13 * s;\n\treturn out;\n}\n\nexport function rotateY(out: number[], a: ACN, rad: number): number[];\nexport function rotateY<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotateY(out: AN, a: ACN, rad: number) {\n\tconst s = Math.sin(rad),\n\t\tc = Math.cos(rad),\n\t\ta00 = a[0],\n\t\ta01 = a[1],\n\t\ta02 = a[2],\n\t\ta03 = a[3],\n\t\ta20 = a[8],\n\t\ta21 = a[9],\n\t\ta22 = a[10],\n\t\ta23 = a[11];\n\n\tif (a !== out) { // If the source and destination differ, copy the unchanged rows\n\t\tout[4]  = a[4];\n\t\tout[5]  = a[5];\n\t\tout[6]  = a[6];\n\t\tout[7]  = a[7];\n\t\tout[12] = a[12];\n\t\tout[13] = a[13];\n\t\tout[14] = a[14];\n\t\tout[15] = a[15];\n\t}\n\n\t// Perform axis-specific matrix multiplication\n\tout[0] = a00 * c - a20 * s;\n\tout[1] = a01 * c - a21 * s;\n\tout[2] = a02 * c - a22 * s;\n\tout[3] = a03 * c - a23 * s;\n\tout[8] = a00 * s + a20 * c;\n\tout[9] = a01 * s + a21 * c;\n\tout[10] = a02 * s + a22 * c;\n\tout[11] = a03 * s + a23 * c;\n\treturn out;\n}\n\nexport function rotateZ(out: number[], a: ACN, rad: number): number[];\nexport function rotateZ<T extends AN>(out: T, a: ACN, rad: number): T;\nexport function rotateZ(out: AN, a: ACN, rad: number) {\n\tconst s = Math.sin(rad),\n\t\tc = Math.cos(rad),\n\t\ta00 = a[0],\n\t\ta01 = a[1],\n\t\ta02 = a[2],\n\t\ta03 = a[3],\n\t\ta10 = a[4],\n\t\ta11 = a[5],\n\t\ta12 = a[6],\n\t\ta13 = a[7];\n\n\tif (a !== out) { // If the source and destination differ, copy the unchanged last row\n\t\tout[8]  = a[8];\n\t\tout[9]  = a[9];\n\t\tout[10] = a[10];\n\t\tout[11] = a[11];\n\t\tout[12] = a[12];\n\t\tout[13] = a[13];\n\t\tout[14] = a[14];\n\t\tout[15] = a[15];\n\t}\n\n\t// Perform axis-specific matrix multiplication\n\tout[0] = a00 * c + a10 * s;\n\tout[1] = a01 * c + a11 * s;\n\tout[2] = a02 * c + a12 * s;\n\tout[3] = a03 * c + a13 * s;\n\tout[4] = a10 * c - a00 * s;\n\tout[5] = a11 * c - a01 * s;\n\tout[6] = a12 * c - a02 * s;\n\tout[7] = a13 * c - a03 * s;\n\treturn out;\n}\n\nexport function scale(out: number[], a: ACN, v3: ACN): number[];\nexport function scale<T extends AN>(out: T, a: ACN, v3: ACN): T;\nexport function scale(out: AN, a: ACN, v3: ACN) {\n\tconst x = v3[0], y = v3[1], z = v3[2];\n\n\tout[0] = a[0] * x;\n\tout[1] = a[1] * x;\n\tout[2] = a[2] * x;\n\tout[3] = a[3] * x;\n\tout[4] = a[4] * y;\n\tout[5] = a[5] * y;\n\tout[6] = a[6] * y;\n\tout[7] = a[7] * y;\n\tout[8] = a[8] * z;\n\tout[9] = a[9] * z;\n\tout[10] = a[10] * z;\n\tout[11] = a[11] * z;\n\tout[12] = a[12];\n\tout[13] = a[13];\n\tout[14] = a[14];\n\tout[15] = a[15];\n\treturn out;\n}\n\nexport function translate(out: number[], a: ACN, v3: ACN): number[];\nexport function translate<T extends AN>(out: T, a: ACN, v3: ACN): T;\nexport function translate(out: AN, a: ACN, v3: ACN) {\n\tconst x = v3[0], y = v3[1], z = v3[2];\n\n\tif (a === out) {\n\t\tout[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n\t\tout[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n\t\tout[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n\t\tout[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n\t} else {\n\t\tconst a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n\t\tconst a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n\t\tconst a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n\n\t\tout[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n\t\tout[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n\t\tout[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n\t\tout[12] = a00 * x + a10 * y + a20 * z + a[12];\n\t\tout[13] = a01 * x + a11 * y + a21 * z + a[13];\n\t\tout[14] = a02 * x + a12 * y + a22 * z + a[14];\n\t\tout[15] = a03 * x + a13 * y + a23 * z + a[15];\n\t}\n\n\treturn out;\n}\n\nexport function fromRotation(out: number[], rad: number, axis: ACN): number[];\nexport function fromRotation<T extends AN>(out: T, rad: number, axis: ACN): T;\nexport function fromRotation(out: AN, rad: number, axis: ACN) {\n\tlet x = axis[0], y = axis[1], z = axis[2];\n\n\tlet len = Math.sqrt(x * x + y * y + z * z);\n\tif (Math.abs(len) < EPSILON) {\n\t\treturn null;\n\t}\n\n\tlen = 1 / len;\n\tx *= len;\n\ty *= len;\n\tz *= len;\n\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\tconst t = 1 - c;\n\n\t// Perform rotation-specific matrix multiplication\n\tout[0] = x * x * t + c;\n\tout[1] = y * x * t + z * s;\n\tout[2] = z * x * t - y * s;\n\tout[3] = 0;\n\tout[4] = x * y * t - z * s;\n\tout[5] = y * y * t + c;\n\tout[6] = z * y * t + x * s;\n\tout[7] = 0;\n\tout[8] = x * z * t + y * s;\n\tout[9] = y * z * t - x * s;\n\tout[10] = z * z * t + c;\n\tout[11] = 0;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = 0;\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function fromScaling(out: number[], v3: ACN): number[];\nexport function fromScaling<T extends AN>(out: T, v3: ACN): T;\nexport function fromScaling(out: AN, v3: ACN) {\n\tout[0] = v3[0];\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 0;\n\tout[5] = v3[1];\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 0;\n\tout[9] = 0;\n\tout[10] = v3[2];\n\tout[11] = 0;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = 0;\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function fromTranslation(out: number[], v3: ACN): number[];\nexport function fromTranslation<T extends AN>(out: T, v3: ACN): T;\nexport function fromTranslation(out: AN, v3: ACN) {\n\tout[0] = 1;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 0;\n\tout[5] = 1;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 0;\n\tout[9] = 0;\n\tout[10] = 1;\n\tout[11] = 0;\n\tout[12] = v3[0];\n\tout[13] = v3[1];\n\tout[14] = v3[2];\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function fromXRotation(out: number[], rad: number): number[];\nexport function fromXRotation<T extends AN>(out: T, rad: number): T;\nexport function fromXRotation(out: AN, rad: number) {\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\n\t// Perform axis-specific matrix multiplication\n\tout[0]  = 1;\n\tout[1]  = 0;\n\tout[2]  = 0;\n\tout[3]  = 0;\n\tout[4] = 0;\n\tout[5] = c;\n\tout[6] = s;\n\tout[7] = 0;\n\tout[8] = 0;\n\tout[9] = -s;\n\tout[10] = c;\n\tout[11] = 0;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = 0;\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function fromYRotation(out: number[], rad: number): number[];\nexport function fromYRotation<T extends AN>(out: T, rad: number): T;\nexport function fromYRotation(out: AN, rad: number) {\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\n\t// Perform axis-specific matrix multiplication\n\tout[0]  = c;\n\tout[1]  = 0;\n\tout[2]  = -s;\n\tout[3]  = 0;\n\tout[4] = 0;\n\tout[5] = 1;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = s;\n\tout[9] = 0;\n\tout[10] = c;\n\tout[11] = 0;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = 0;\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function fromZRotation(out: number[], rad: number): number[];\nexport function fromZRotation<T extends AN>(out: T, rad: number): T;\nexport function fromZRotation(out: AN, rad: number) {\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\n\t// Perform axis-specific matrix multiplication\n\tout[0]  = c;\n\tout[1]  = s;\n\tout[2]  = 0;\n\tout[3]  = 0;\n\tout[4] = -s;\n\tout[5] = c;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 0;\n\tout[9] = 0;\n\tout[10] = 1;\n\tout[11] = 0;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = 0;\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function fromRotationTranslation(out: number[], q: ACN, v3: ACN): number[];\nexport function fromRotationTranslation<T extends AN>(out: T, q: ACN, v3: ACN): T;\nexport function fromRotationTranslation(out: AN, q: ACN, v3: ACN) {\n\t// Quaternion math\n\tconst x = q[0], y = q[1], z = q[2], w = q[3],\n\t\tx2 = x + x,\n\t\ty2 = y + y,\n\t\tz2 = z + z,\n\n\t\txx = x * x2,\n\t\txy = x * y2,\n\t\txz = x * z2,\n\t\tyy = y * y2,\n\t\tyz = y * z2,\n\t\tzz = z * z2,\n\t\twx = w * x2,\n\t\twy = w * y2,\n\t\twz = w * z2;\n\n\tout[0] = 1 - (yy + zz);\n\tout[1] = xy + wz;\n\tout[2] = xz - wy;\n\tout[3] = 0;\n\tout[4] = xy - wz;\n\tout[5] = 1 - (xx + zz);\n\tout[6] = yz + wx;\n\tout[7] = 0;\n\tout[8] = xz + wy;\n\tout[9] = yz - wx;\n\tout[10] = 1 - (xx + yy);\n\tout[11] = 0;\n\tout[12] = v3[0];\n\tout[13] = v3[1];\n\tout[14] = v3[2];\n\tout[15] = 1;\n\n\treturn out;\n}\n\nexport function fromRotationTranslationScale(out: number[], q: ACN, v: ACN, s: ACN): number[];\nexport function fromRotationTranslationScale<T extends AN>(out: T, q: ACN, v: ACN, s: ACN): T;\nexport function fromRotationTranslationScale(out: AN, q: ACN, v: ACN, s: ACN) {\n\t// Quaternion math\n\tconst x = q[0], y = q[1], z = q[2], w = q[3],\n\t\tx2 = x + x,\n\t\ty2 = y + y,\n\t\tz2 = z + z,\n\n\t\txx = x * x2,\n\t\txy = x * y2,\n\t\txz = x * z2,\n\t\tyy = y * y2,\n\t\tyz = y * z2,\n\t\tzz = z * z2,\n\t\twx = w * x2,\n\t\twy = w * y2,\n\t\twz = w * z2,\n\t\tsx = s[0],\n\t\tsy = s[1],\n\t\tsz = s[2];\n\n\tout[0] = (1 - (yy + zz)) * sx;\n\tout[1] = (xy + wz) * sx;\n\tout[2] = (xz - wy) * sx;\n\tout[3] = 0;\n\tout[4] = (xy - wz) * sy;\n\tout[5] = (1 - (xx + zz)) * sy;\n\tout[6] = (yz + wx) * sy;\n\tout[7] = 0;\n\tout[8] = (xz + wy) * sz;\n\tout[9] = (yz - wx) * sz;\n\tout[10] = (1 - (xx + yy)) * sz;\n\tout[11] = 0;\n\tout[12] = v[0];\n\tout[13] = v[1];\n\tout[14] = v[2];\n\tout[15] = 1;\n\n\treturn out;\n}\n\nexport function fromRotationTranslationScaleOrigin(out: number[], q: ACN, v: ACN, s: ACN, o: ACN): number[];\nexport function fromRotationTranslationScaleOrigin<T extends AN>(out: T, q: ACN, v: ACN, s: ACN, o: ACN): T;\nexport function fromRotationTranslationScaleOrigin(out: AN, q: ACN, v: ACN, s: ACN, o: ACN) {\n\t// Quaternion math\n\tconst x = q[0], y = q[1], z = q[2], w = q[3],\n\t\tx2 = x + x,\n\t\ty2 = y + y,\n\t\tz2 = z + z,\n\n\t\txx = x * x2,\n\t\txy = x * y2,\n\t\txz = x * z2,\n\t\tyy = y * y2,\n\t\tyz = y * z2,\n\t\tzz = z * z2,\n\t\twx = w * x2,\n\t\twy = w * y2,\n\t\twz = w * z2,\n\n\t\tsx = s[0],\n\t\tsy = s[1],\n\t\tsz = s[2],\n\n\t\tox = o[0],\n\t\toy = o[1],\n\t\toz = o[2];\n\n\tout[0] = (1 - (yy + zz)) * sx;\n\tout[1] = (xy + wz) * sx;\n\tout[2] = (xz - wy) * sx;\n\tout[3] = 0;\n\tout[4] = (xy - wz) * sy;\n\tout[5] = (1 - (xx + zz)) * sy;\n\tout[6] = (yz + wx) * sy;\n\tout[7] = 0;\n\tout[8] = (xz + wy) * sz;\n\tout[9] = (yz - wx) * sz;\n\tout[10] = (1 - (xx + yy)) * sz;\n\tout[11] = 0;\n\tout[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n\tout[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n\tout[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n\tout[15] = 1;\n\n\treturn out;\n}\n\nexport function fromQuat(out: number[], q: ACN): number[];\nexport function fromQuat<T extends AN>(out: T, q: ACN): T;\nexport function fromQuat(out: AN, q: ACN) {\n\tconst x = q[0], y = q[1], z = q[2], w = q[3],\n\t\tx2 = x + x,\n\t\ty2 = y + y,\n\t\tz2 = z + z,\n\n\t\txx = x * x2,\n\t\tyx = y * x2,\n\t\tyy = y * y2,\n\t\tzx = z * x2,\n\t\tzy = z * y2,\n\t\tzz = z * z2,\n\t\twx = w * x2,\n\t\twy = w * y2,\n\t\twz = w * z2;\n\n\tout[0] = 1 - yy - zz;\n\tout[1] = yx + wz;\n\tout[2] = zx - wy;\n\tout[3] = 0;\n\n\tout[4] = yx - wz;\n\tout[5] = 1 - xx - zz;\n\tout[6] = zy + wx;\n\tout[7] = 0;\n\n\tout[8] = zx + wy;\n\tout[9] = zy - wx;\n\tout[10] = 1 - xx - yy;\n\tout[11] = 0;\n\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = 0;\n\tout[15] = 1;\n\n\treturn out;\n}\n\nexport function getTranslation(out: number[], a: ACN): number[];\nexport function getTranslation<T extends AN>(out: T, a: ACN): T;\nexport function getTranslation(out: AN, a: ACN) {\n\tout[0] = a[12];\n\tout[1] = a[13];\n\tout[2] = a[14];\n\treturn out;\n}\n\nexport function getScaling(out: number[], a: ACN): number[];\nexport function getScaling<T extends AN>(out: T, a: ACN): T;\nexport function getScaling(out: AN, a: ACN) {\n\tconst m11 = a[0],\n\t\tm12 = a[1],\n\t\tm13 = a[2],\n\t\tm21 = a[4],\n\t\tm22 = a[5],\n\t\tm23 = a[6],\n\t\tm31 = a[8],\n\t\tm32 = a[9],\n\t\tm33 = a[10];\n\n\tout[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n\tout[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n\tout[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\treturn out;\n}\n\nexport function getRotation(out: number[], a: ACN): number[];\nexport function getRotation<T extends AN>(out: T, a: ACN): T;\nexport function getRotation(out: AN, a: ACN) {\n\t// Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\tconst trace = a[0] + a[5] + a[10];\n\tlet S;\n\n\tif (trace > 0) {\n\t\tS = Math.sqrt(trace + 1.0) * 2;\n\t\tout[3] = 0.25 * S;\n\t\tout[0] = (a[6] - a[9]) / S;\n\t\tout[1] = (a[8] - a[2]) / S;\n\t\tout[2] = (a[1] - a[4]) / S;\n\t}\n\telse if ((a[0] > a[5]) && (a[0] > a[10])) {\n\t\tS = Math.sqrt(1.0 + a[0] - a[5] - a[10]) * 2;\n\t\tout[3] = (a[6] - a[9]) / S;\n\t\tout[0] = 0.25 * S;\n\t\tout[1] = (a[1] + a[4]) / S;\n\t\tout[2] = (a[8] + a[2]) / S;\n\t}\n\telse if (a[5] > a[10]) {\n\t\tS = Math.sqrt(1.0 + a[5] - a[0] - a[10]) * 2;\n\t\tout[3] = (a[8] - a[2]) / S;\n\t\tout[0] = (a[1] + a[4]) / S;\n\t\tout[1] = 0.25 * S;\n\t\tout[2] = (a[6] + a[9]) / S;\n\t}\n\telse {\n\t\tS = Math.sqrt(1.0 + a[10] - a[0] - a[5]) * 2;\n\t\tout[3] = (a[1] - a[4]) / S;\n\t\tout[0] = (a[8] + a[2]) / S;\n\t\tout[1] = (a[6] + a[9]) / S;\n\t\tout[2] = 0.25 * S;\n\t}\n\treturn out;\n}\n\nexport function frustum(out: number[], left: number, right: number, bottom: number, top: number, near: number, far: number): number[];\nexport function frustum<T extends AN>(out: T, left: number, right: number, bottom: number, top: number, near: number, far: number): T;\nexport function frustum(out: AN, left: number, right: number, bottom: number, top: number, near: number, far: number) {\n\tconst rl = 1 / (right - left),\n\t\ttb = 1 / (top - bottom),\n\t\tnf = 1 / (near - far);\n\tout[0] = (near * 2) * rl;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 0;\n\tout[5] = (near * 2) * tb;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = (right + left) * rl;\n\tout[9] = (top + bottom) * tb;\n\tout[10] = (far + near) * nf;\n\tout[11] = -1;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = (far * near * 2) * nf;\n\tout[15] = 0;\n\treturn out;\n}\n\nexport function perspective(out: number[], fovy: number, aspect: number, near: number, far: number): number[];\nexport function perspective<T extends AN>(out: T, fovy: number, aspect: number, near: number, far: number): T;\nexport function perspective(out: AN, fovy: number, aspect: number, near: number, far: number) {\n\tconst f = 1.0 / Math.tan(fovy / 2),\n\t\tnf = 1 / (near - far);\n\tout[0] = f / aspect;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 0;\n\tout[5] = f;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 0;\n\tout[9] = 0;\n\tout[10] = (far + near) * nf;\n\tout[11] = -1;\n\tout[12] = 0;\n\tout[13] = 0;\n\tout[14] = (2 * far * near) * nf;\n\tout[15] = 0;\n\treturn out;\n}\n\nexport interface FieldOfViewDegrees {\n\tupDegrees: number;\n\tdownDegrees: number;\n\tleftDegrees: number;\n\trightDegrees: number;\n}\n\nexport function perspectiveFromFieldOfView(out: number[], fov: FieldOfViewDegrees, near: number, far: number): number[];\nexport function perspectiveFromFieldOfView<T extends AN>(out: T, fov: FieldOfViewDegrees, near: number, far: number): T;\nexport function perspectiveFromFieldOfView(out: AN, fov: FieldOfViewDegrees, near: number, far: number) {\n\tconst upTan = Math.tan(fov.upDegrees * Math.PI / 180.0),\n\t\tdownTan = Math.tan(fov.downDegrees * Math.PI / 180.0),\n\t\tleftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0),\n\t\trightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0),\n\t\txScale = 2.0 / (leftTan + rightTan),\n\t\tyScale = 2.0 / (upTan + downTan);\n\n\tout[0] = xScale;\n\tout[1] = 0.0;\n\tout[2] = 0.0;\n\tout[3] = 0.0;\n\tout[4] = 0.0;\n\tout[5] = yScale;\n\tout[6] = 0.0;\n\tout[7] = 0.0;\n\tout[8] = -((leftTan - rightTan) * xScale * 0.5);\n\tout[9] = ((upTan - downTan) * yScale * 0.5);\n\tout[10] = far / (near - far);\n\tout[11] = -1.0;\n\tout[12] = 0.0;\n\tout[13] = 0.0;\n\tout[14] = (far * near) / (near - far);\n\tout[15] = 0.0;\n\treturn out;\n}\n\nexport function ortho(out: number[], left: number, right: number, bottom: number, top: number, near: number, far: number): number[];\nexport function ortho<T extends AN>(out: T, left: number, right: number, bottom: number, top: number, near: number, far: number): T;\nexport function ortho(out: AN, left: number, right: number, bottom: number, top: number, near: number, far: number) {\n\tconst lr = 1 / (left - right),\n\t\tbt = 1 / (bottom - top),\n\t\tnf = 1 / (near - far);\n\tout[0] = -2 * lr;\n\tout[1] = 0;\n\tout[2] = 0;\n\tout[3] = 0;\n\tout[4] = 0;\n\tout[5] = -2 * bt;\n\tout[6] = 0;\n\tout[7] = 0;\n\tout[8] = 0;\n\tout[9] = 0;\n\tout[10] = 2 * nf;\n\tout[11] = 0;\n\tout[12] = (left + right) * lr;\n\tout[13] = (top + bottom) * bt;\n\tout[14] = (far + near) * nf;\n\tout[15] = 1;\n\treturn out;\n}\n\nexport function lookAt(out: number[], eye: ACN, center: ACN, up: ACN): number[];\nexport function lookAt<T extends AN>(out: T, eye: ACN, center: ACN, up: ACN): T;\nexport function lookAt(out: AN, eye: ACN, center: ACN, up: ACN) {\n\tconst eyex = eye[0],\n\t\teyey = eye[1],\n\t\teyez = eye[2],\n\t\tupx = up[0],\n\t\tupy = up[1],\n\t\tupz = up[2],\n\t\tcenterx = center[0],\n\t\tcentery = center[1],\n\t\tcenterz = center[2];\n\n\tlet x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n\n\tif (Math.abs(eyex - centerx) < EPSILON &&\n\t\tMath.abs(eyey - centery) < EPSILON &&\n\t\tMath.abs(eyez - centerz) < EPSILON) {\n\t\treturn identity(out);\n\t}\n\n\tz0 = eyex - centerx;\n\tz1 = eyey - centery;\n\tz2 = eyez - centerz;\n\n\tlen = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n\tz0 *= len;\n\tz1 *= len;\n\tz2 *= len;\n\n\tx0 = upy * z2 - upz * z1;\n\tx1 = upz * z0 - upx * z2;\n\tx2 = upx * z1 - upy * z0;\n\tlen = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\tif (!len) {\n\t\tx0 = 0;\n\t\tx1 = 0;\n\t\tx2 = 0;\n\t} else {\n\t\tlen = 1 / len;\n\t\tx0 *= len;\n\t\tx1 *= len;\n\t\tx2 *= len;\n\t}\n\n\ty0 = z1 * x2 - z2 * x1;\n\ty1 = z2 * x0 - z0 * x2;\n\ty2 = z0 * x1 - z1 * x0;\n\n\tlen = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\tif (!len) {\n\t\ty0 = 0;\n\t\ty1 = 0;\n\t\ty2 = 0;\n\t} else {\n\t\tlen = 1 / len;\n\t\ty0 *= len;\n\t\ty1 *= len;\n\t\ty2 *= len;\n\t}\n\n\tout[0] = x0;\n\tout[1] = y0;\n\tout[2] = z0;\n\tout[3] = 0;\n\tout[4] = x1;\n\tout[5] = y1;\n\tout[6] = z1;\n\tout[7] = 0;\n\tout[8] = x2;\n\tout[9] = y2;\n\tout[10] = z2;\n\tout[11] = 0;\n\tout[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n\tout[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n\tout[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n\tout[15] = 1;\n\n\treturn out;\n}\n\nexport function str(a: ACN) {\n\treturn `mat4(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]}, ${a[4]}, ${a[5]}, ${a[6]}, ${a[7]}, ${a[8]}, ${a[9]}, ${a[10]}, ${a[11]}, ${a[12]}, ${a[13]}, ${a[14]}, ${a[15]})`;\n}\n\nexport function frob(a: ACN) {\n\treturn Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) +\n\t\tMath.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) +\n\t\tMath.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) +\n\t\tMath.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n\nexport function add(out: number[], a: ACN, b: ACN): number[];\nexport function add<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function add(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] + b[0];\n\tout[1] = a[1] + b[1];\n\tout[2] = a[2] + b[2];\n\tout[3] = a[3] + b[3];\n\tout[4] = a[4] + b[4];\n\tout[5] = a[5] + b[5];\n\tout[6] = a[6] + b[6];\n\tout[7] = a[7] + b[7];\n\tout[8] = a[8] + b[8];\n\tout[9] = a[9] + b[9];\n\tout[10] = a[10] + b[10];\n\tout[11] = a[11] + b[11];\n\tout[12] = a[12] + b[12];\n\tout[13] = a[13] + b[13];\n\tout[14] = a[14] + b[14];\n\tout[15] = a[15] + b[15];\n\treturn out;\n}\n\nexport function subtract(out: number[], a: ACN, b: ACN): number[];\nexport function subtract<T extends AN>(out: T, a: ACN, b: ACN): T;\nexport function subtract(out: AN, a: ACN, b: ACN) {\n\tout[0] = a[0] - b[0];\n\tout[1] = a[1] - b[1];\n\tout[2] = a[2] - b[2];\n\tout[3] = a[3] - b[3];\n\tout[4] = a[4] - b[4];\n\tout[5] = a[5] - b[5];\n\tout[6] = a[6] - b[6];\n\tout[7] = a[7] - b[7];\n\tout[8] = a[8] - b[8];\n\tout[9] = a[9] - b[9];\n\tout[10] = a[10] - b[10];\n\tout[11] = a[11] - b[11];\n\tout[12] = a[12] - b[12];\n\tout[13] = a[13] - b[13];\n\tout[14] = a[14] - b[14];\n\tout[15] = a[15] - b[15];\n\treturn out;\n}\n\nexport const sub = subtract;\n\nexport function multiplyScalar(out: number[], a: ACN, scale: number): number[];\nexport function multiplyScalar<T extends AN>(out: T, a: ACN, scale: number): T;\nexport function multiplyScalar(out: AN, a: ACN, scale: number) {\n\tout[0] = a[0] * scale;\n\tout[1] = a[1] * scale;\n\tout[2] = a[2] * scale;\n\tout[3] = a[3] * scale;\n\tout[4] = a[4] * scale;\n\tout[5] = a[5] * scale;\n\tout[6] = a[6] * scale;\n\tout[7] = a[7] * scale;\n\tout[8] = a[8] * scale;\n\tout[9] = a[9] * scale;\n\tout[10] = a[10] * scale;\n\tout[11] = a[11] * scale;\n\tout[12] = a[12] * scale;\n\tout[13] = a[13] * scale;\n\tout[14] = a[14] * scale;\n\tout[15] = a[15] * scale;\n\treturn out;\n}\n\nexport function multiplyScalarAndAdd(out: number[], a: ACN, b: ACN, scale: number): number[];\nexport function multiplyScalarAndAdd<T extends AN>(out: T, a: ACN, b: ACN, scale: number): T;\nexport function multiplyScalarAndAdd(out: AN, a: ACN, b: ACN, scale: number) {\n\tout[0] = a[0] + (b[0] * scale);\n\tout[1] = a[1] + (b[1] * scale);\n\tout[2] = a[2] + (b[2] * scale);\n\tout[3] = a[3] + (b[3] * scale);\n\tout[4] = a[4] + (b[4] * scale);\n\tout[5] = a[5] + (b[5] * scale);\n\tout[6] = a[6] + (b[6] * scale);\n\tout[7] = a[7] + (b[7] * scale);\n\tout[8] = a[8] + (b[8] * scale);\n\tout[9] = a[9] + (b[9] * scale);\n\tout[10] = a[10] + (b[10] * scale);\n\tout[11] = a[11] + (b[11] * scale);\n\tout[12] = a[12] + (b[12] * scale);\n\tout[13] = a[13] + (b[13] * scale);\n\tout[14] = a[14] + (b[14] * scale);\n\tout[15] = a[15] + (b[15] * scale);\n\treturn out;\n}\n\nexport function exactEquals(a: ACN, b: ACN) {\n\treturn\ta[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n\t\t\ta[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n\t\t\ta[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n\t\t\ta[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\nexport function equals(a: ACN, b: ACN) {\n\tconst a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],\n\t\ta4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7],\n\t\ta8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11],\n\t\ta12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n\tconst b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],\n\t\tb4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7],\n\t\tb8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11],\n\t\tb12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n\treturn (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n\t\t\tMath.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n\t\t\tMath.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n\t\t\tMath.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n\t\t\tMath.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n\t\t\tMath.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n\t\t\tMath.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n\t\t\tMath.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n\t\t\tMath.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n\t\t\tMath.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n\t\t\tMath.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n\t\t\tMath.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n\t\t\tMath.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n","/**\n * core/numeric - numeric types, traits and array helpers\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { TypedArrayConstructor } from \"./array\";\n\n/**\n * Interface describing a binary representation of a number including its\n * limits, storage requirements and associated TypedArray constructor.\n */\nexport interface NumericType {\n\treadonly min: number;\n\treadonly max: number;\n\treadonly signed: boolean;\n\n\treadonly byteSize: number;\n\treadonly arrayType: TypedArrayConstructor;\n}\n\n/**\n * Traits of unsigned 8-bit integer numbers.\n */\nexport const UInt8: NumericType = {\n\tmin: 0,\n\tmax: 255,\n\tsigned: false,\n\tbyteSize: 1,\n\tarrayType: Uint8Array\n};\n\n/**\n * Traits of unsigned 8-bit clamped integer numbers.\n */\nexport const UInt8Clamped: NumericType = {\n\tmin: 0,\n\tmax: 255,\n\tsigned: false,\n\tbyteSize: 1,\n\tarrayType: Uint8ClampedArray\n};\n\n/**\n * Traits of signed 8-bit integer numbers.\n */\nexport const SInt8: NumericType = {\n\tmin: -128,\n\tmax: 127,\n\tsigned: true,\n\tbyteSize: 1,\n\tarrayType: Int8Array\n};\n\n/**\n * Traits of unsigned 16-bit integer numbers.\n */\nexport const UInt16: NumericType = {\n\tmin: 0,\n\tmax: 65535,\n\tsigned: false,\n\tbyteSize: 2,\n\tarrayType: Uint16Array\n};\n\n/**\n * Traits of signed 16-bit integer numbers.\n */\nexport const SInt16: NumericType = {\n\tmin: -32768,\n\tmax: 32767,\n\tsigned: true,\n\tbyteSize: 2,\n\tarrayType: Int16Array\n};\n\n/**\n * Traits of unsigned 32-bit integer numbers.\n */\nexport const UInt32: NumericType = {\n\tmin: 0,\n\tmax: 4294967295,\n\tsigned: false,\n\tbyteSize: 4,\n\tarrayType: Uint32Array\n};\n\n/**\n * Traits of signed 32-bit integer numbers.\n */\nexport const SInt32: NumericType = {\n\tmin: -2147483648,\n\tmax: 2147483647,\n\tsigned: true,\n\tbyteSize: 4,\n\tarrayType: Int32Array\n};\n\n/**\n * Traits of 32-bit floating point numbers.\n */\nexport const Float: NumericType = {\n\tmin: -340282346638528859811704183484516925440.0,\n\tmax: 340282346638528859811704183484516925440.0,\n\tsigned: true,\n\tbyteSize: 4,\n\tarrayType: Float32Array\n};\n\n/**\n * Traits of 64-bit floating point numbers.\n */\nexport const Double: NumericType = {\n\tmin: -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0,\n\tmax: 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0,\n\tsigned: true,\n\tbyteSize: 8,\n\tarrayType: Float64Array\n};\n","/**\n * math/aabb - Axis-Aligned Bounding Box\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { ConstFloat3, ConstFloat3x3, ConstFloat4x4, Float, Float3 } from \"@stardazed/core\";\nimport { clamp } from \"./common\";\nimport * as vec3 from \"./vec3\";\n\nexport function setCenterAndSize(min: ConstFloat3, max: ConstFloat3, center: ConstFloat3, size: ConstFloat3): void {\n\tvec3.scaleAndAdd(min, center, size, -0.5);\n\tvec3.scaleAndAdd(max, center, size, 0.5);\n}\n\n\nexport function calculateCenterAndSize(center: ConstFloat3, size: ConstFloat3, min: ConstFloat3, max: ConstFloat3): void {\n\tvec3.subtract(size, max, min);\n\tvec3.scaleAndAdd(center, min, size, 0.5);\n}\n\n\nexport function encapsulatePoint(min: Float3, max: Float3, pt: ConstFloat3): void {\n\tif (pt[0] < min[0]) { min[0] = pt[0]; }\n\tif (pt[0] > max[0]) { max[0] = pt[0]; }\n\n\tif (pt[1] < min[1]) { min[1] = pt[1]; }\n\tif (pt[1] > max[1]) { max[1] = pt[1]; }\n\n\tif (pt[2] < min[2]) { min[2] = pt[2]; }\n\tif (pt[2] > max[2]) { max[2] = pt[2]; }\n}\n\n\nexport function encapsulateAABB(min: Float3, max: Float3, otherMin: ConstFloat3, otherMax: ConstFloat3): void {\n\tif (otherMin[0] < min[0]) { min[0] = otherMin[0]; }\n\tif (otherMax[0] > max[0]) { max[0] = otherMax[0]; }\n\n\tif (otherMin[1] < min[1]) { min[1] = otherMin[1]; }\n\tif (otherMax[1] > max[1]) { max[1] = otherMax[1]; }\n\n\tif (otherMin[2] < min[2]) { min[2] = otherMin[2]; }\n\tif (otherMax[2] > max[2]) { max[2] = otherMax[2]; }\n}\n\n\nexport function containsPoint(min: ConstFloat3, max: ConstFloat3, pt: ConstFloat3): boolean {\n\treturn\tpt[0] >= min[0] && pt[1] >= min[1] && pt[2] >= min[2] &&\n\t\t\tpt[0] <= max[0] && pt[1] <= max[1] && pt[2] <= max[2];\n}\n\n\nexport function containsAABB(min: ConstFloat3, max: ConstFloat3, otherMin: ConstFloat3, otherMax: ConstFloat3): boolean {\n\treturn\totherMin[0] >= min[0] && otherMin[1] >= min[1] && otherMin[2] >= min[2] &&\n\t\t\totherMax[0] <= max[0] && otherMax[1] <= max[1] && otherMax[2] <= max[2];\n}\n\n\nexport function intersectsAABB(min: ConstFloat3, max: ConstFloat3, otherMin: ConstFloat3, otherMax: ConstFloat3): boolean {\n\treturn\totherMin[0] <= max[0] && otherMax[0] >= min[0] &&\n\t\t\totherMin[1] <= max[1] && otherMax[1] >= min[1] &&\n\t\t\totherMin[2] <= max[2] && otherMax[2] >= min[2];\n}\n\n\nexport function closestPoint(min: ConstFloat3, max: ConstFloat3, pt: ConstFloat3) {\n\treturn [\n\t\tclamp(pt[0], min[0], max[0]),\n\t\tclamp(pt[1], min[1], max[1]),\n\t\tclamp(pt[2], min[2], max[2])\n\t];\n}\n\n\nexport function size(min: ConstFloat3, max: ConstFloat3) {\n\treturn vec3.subtract([0, 0, 0], max, min);\n}\n\n\nexport function extents(min: ConstFloat3, max: ConstFloat3) {\n\treturn vec3.scale([], size(min, max), 0.5);\n}\n\n\nexport function center(min: ConstFloat3, max: ConstFloat3) {\n\treturn vec3.add([], min, extents(min, max));\n}\n\n\nexport function transformMat3(destMin: Float3, destMax: Float3, sourceMin: ConstFloat3, sourceMax: ConstFloat3, mat: ConstFloat3x3) {\n\tconst destA = vec3.transformMat3([], sourceMin, mat);\n\tconst destB = vec3.transformMat3([], sourceMax, mat);\n\tvec3.min(destMin, destA, destB);\n\tvec3.max(destMax, destA, destB);\n}\n\n\nexport function transformMat4(destMin: Float3, destMax: ConstFloat3, sourceMin: ConstFloat3, sourceMax: ConstFloat3, mat: ConstFloat4x4) {\n\tconst destA = vec3.transformMat4([], sourceMin, mat);\n\tconst destB = vec3.transformMat4([], sourceMax, mat);\n\tvec3.min(destMin, destA, destB);\n\tvec3.max(destMax, destA, destB);\n}\n\n\nexport class AABB {\n\tpublic min: Float32Array;\n\tpublic max: Float32Array;\n\n\tconstructor();\n\tconstructor(min: Float3, max: Float3);\n\tconstructor(min?: Float3, max?: Float3) {\n\t\tconst data = new Float32Array(6);\n\t\tthis.min = data.subarray(0, 3);\n\t\tthis.max = data.subarray(3, 6);\n\n\t\tif (min && max) {\n\t\t\tthis.min[0] = min[0]; this.min[1] = min[1]; this.min[2] = min[2];\n\t\t\tthis.max[0] = max[0]; this.max[1] = max[1]; this.max[2] = max[2];\n\t\t}\n\t\telse {\n\t\t\tthis.min[0] = Float.max; this.min[1] = Float.max; this.min[2] = Float.max;\n\t\t\tthis.max[0] = Float.min; this.max[1] = Float.min; this.max[2] = Float.min;\n\t\t}\n\t}\n\n\tstatic fromCenterAndSize(center: ConstFloat3, size: ConstFloat3): AABB {\n\t\tconst min: number[] = [];\n\t\tconst max: number[] = [];\n\t\tsetCenterAndSize(min, max, center, size);\n\t\treturn new AABB(min, max);\n\t}\n\n\tsetCenterAndSize(center: ConstFloat3, size: ConstFloat3) {\n\t\tsetCenterAndSize(this.min, this.max, center, size);\n\t}\n\n\tsetMinAndMax(min: ConstFloat3, max: ConstFloat3) {\n\t\tthis.min[0] = min[0]; this.min[1] = min[1]; this.min[2] = min[2];\n\t\tthis.max[0] = max[0]; this.max[1] = max[1]; this.max[2] = max[2];\n\t}\n\n\tencapsulatePoint(pt: ConstFloat3) {\n\t\tencapsulatePoint(this.min, this.max, pt);\n\t}\n\n\tencapsulateAABB(bounds: AABB) {\n\t\tencapsulateAABB(this.min, this.max, bounds.min, bounds.max);\n\t}\n\n\t// --\n\n\tget size() { return size(this.min, this.max); }\n\tget extents() { return extents(this.min, this.max); }\n\tget center() { return center(this.min, this.max); }\n\n\t// --\n\n\tcontainsPoint(pt: ConstFloat3) {\n\t\treturn containsPoint(this.min, this.max, pt);\n\t}\n\n\tcontainsAABB(bounds: AABB) {\n\t\treturn containsAABB(this.min, this.max, bounds.min, bounds.max);\n\t}\n\n\tintersectsAABB(bounds: AABB) {\n\t\treturn intersectsAABB(this.min, this.max, bounds.min, bounds.max);\n\t}\n\n\tclosestPoint(pt: ConstFloat3) {\n\t\treturn closestPoint(this.min, this.max, pt);\n\t}\n}\n","/**\n * container/deque - generic double-ended queue container class\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { assert } from \"@stardazed/core\";\n\nexport class Deque<T> {\n\tprivate blocks_: T[][];\n\tprivate headBlock_: number;\n\tprivate headIndex_: number;\n\tprivate tailBlock_: number;\n\tprivate tailIndex_: number;\n\tprivate count_: number;\n\n\t// -- block access\n\tprivate blockCapacity = 512;\n\n\tprivate newBlock(): T[] {\n\t\treturn [];\n\t}\n\n\tprivate get headBlock() { return this.blocks_[this.headBlock_]; }\n\tprivate get tailBlock() { return this.blocks_[this.tailBlock_]; }\n\n\n\tconstructor() {\n\t\tthis.blocks_ = [];\n\t\tthis.blocks_.push(this.newBlock());\n\n\t\tthis.headBlock_ = this.tailBlock_ = 0;\n\t\tthis.headIndex_ = this.tailIndex_ = 0;\n\t\tthis.count_ = 0;\n\t}\n\n\n\t// -- adding elements\n\tappend(t: T) {\n\t\tif (this.tailIndex_ === this.blockCapacity) {\n\t\t\tif (this.tailBlock_ === this.blocks_.length - 1) {\n\t\t\t\tthis.blocks_.push(this.newBlock());\n\t\t\t}\n\n\t\t\tthis.tailBlock_++;\n\t\t\tthis.tailIndex_ = 0;\n\t\t}\n\n\t\tthis.tailBlock[this.tailIndex_] = t;\n\t\t++this.tailIndex_;\n\t\t++this.count_;\n\t}\n\n\tprepend(t: T) {\n\t\tif (this.headIndex_ === 0) {\n\t\t\tif (this.headBlock_ === 0) {\n\t\t\t\tthis.blocks_.unshift(this.newBlock());\n\t\t\t\t++this.tailBlock_;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t--this.headBlock_;\n\t\t\t}\n\n\t\t\tthis.headIndex_ = this.blockCapacity;\n\t\t}\n\n\t\t--this.headIndex_;\n\t\tthis.headBlock[this.headIndex_] = t;\n\t\t++this.count_;\n\t}\n\n\n\t// -- removing elements\n\tpopFront() {\n\t\tassert(this.count_ > 0);\n\n\t\tdelete this.headBlock[this.headIndex_];\n\n\t\t++this.headIndex_;\n\n\t\tif (this.headIndex_ === this.blockCapacity) {\n\t\t\t// Strategy: keep max. 1 block before head if it was previously created.\n\t\t\t// Once we get to 2 empty blocks before head, then remove the front block.\n\n\t\t\tif (this.headBlock_ === 0) {\n\t\t\t\t++this.headBlock_;\n\t\t\t}\n\t\t\telse if (this.headBlock_ === 1) {\n\t\t\t\tthis.blocks_.shift();\n\t\t\t\tthis.tailBlock_--;\n\t\t\t}\n\n\t\t\tthis.headIndex_ = 0;\n\t\t}\n\n\t\t--this.count_;\n\t}\n\n\n\tpopBack() {\n\t\tassert(this.count_ > 0);\n\n\t\tif (this.tailIndex_ === 0) {\n\t\t\t// Strategy: keep max. 1 block after tail if it was previously created.\n\t\t\t// Once we get to 2 empty blocks after tail, then remove the back block.\n\t\t\tconst lastBlockIndex = this.blocks_.length - 1;\n\n\t\t\tif (this.tailBlock_ === lastBlockIndex - 1) {\n\t\t\t\tthis.blocks_.pop();\n\t\t\t}\n\n\t\t\t--this.tailBlock_;\n\t\t\tthis.tailIndex_ = this.blockCapacity;\n\t\t}\n\n\t\t--this.tailIndex_;\n\n\t\tdelete this.tailBlock[this.tailIndex_];\n\n\t\t--this.count_;\n\t}\n\n\n\tclear() {\n\t\tthis.blocks_ = [];\n\n\t\tthis.headBlock_ = this.tailBlock_ = 0;\n\t\tthis.headIndex_ = this.tailIndex_ = 0;\n\t\tthis.count_ = 0;\n\t}\n\n\n\t// -- observers\n\tget count() { return this.count_; }\n\tget empty() { return this.count_ === 0; }\n\n\tget front(): T {\n\t\tassert(this.count_ > 0);\n\t\treturn this.headBlock[this.headIndex_];\n\t}\n\n\tget back(): T {\n\t\tassert(this.count_ > 0);\n\t\treturn (this.tailIndex_ > 0) ? this.tailBlock[this.tailIndex_ - 1] : this.blocks_[this.tailBlock_ - 1][this.blockCapacity - 1];\n\t}\n}\n","/**\n * container/sortedarray - always-sorted array type\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { appendArrayInPlace } from \"./array\";\n\nexport function lowerBound<T>(array: ArrayLike<T>, value: T) {\n\tlet count = array.length;\n\tlet it: number;\n\tlet first = 0;\n\n\twhile (count > 0) {\n\t\tconst step = count >> 1;\n\t\tit = first + step;\n\t\tif (array[it] < value) {\n\t\t\tfirst = ++it;\n\t\t\tcount -= step + 1;\n\t\t}\n\t\telse {\n\t\t\tcount = step;\n\t\t}\n\t}\n\treturn first;\n}\n\n\nexport function upperBound<T>(array: ArrayLike<T>, value: T) {\n\tlet count = array.length;\n\tlet it: number;\n\tlet first = 0;\n\n\twhile (count > 0) {\n\t\tconst step = count >> 1;\n\t\tit = first + step;\n\t\tif (array[it] <= value) {\n\t\t\tfirst = ++it;\n\t\t\tcount -= step + 1;\n\t\t}\n\t\telse {\n\t\t\tcount = step;\n\t\t}\n\t}\n\treturn first;\n}\n\n\nexport class SortedArray<T> {\n\tprivate data_: T[];\n\n\tconstructor(source?: T[], private compareFn_?: (a: T, b: T) => number) {\n\t\tthis.data_ = source ? source.slice(0) : [];\n\t\tif (source) {\n\t\t\tthis.sort();\n\t\t}\n\t}\n\n\tprivate sort() {\n\t\tif (this.data_.length < 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst t0 = this.data_[0];\n\t\tlet cmp = this.compareFn_;\n\t\tif (cmp === undefined && typeof t0 !== \"string\") {\n\t\t\tcmp = (a: T, b: T) => (a < b) ? -1 : ((a > b) ? 1 : 0);\n\t\t}\n\t\tthis.data_.sort(cmp);\n\t}\n\n\tinsert(value: T) {\n\t\tconst successor = lowerBound(this.data_, value);\n\t\tthis.data_.splice(successor, 0, value);\n\t}\n\n\tinsertMultiple(values: T[]) {\n\t\tconst sourceLength = values.length;\n\t\tif (sourceLength > Math.min(20, this.data_.length / 2)) {\n\t\t\tappendArrayInPlace(this.data_, values);\n\t\t\tthis.sort();\n\t\t}\n\t\telse {\n\t\t\tfor (let ix = 0; ix < sourceLength; ++ix) {\n\t\t\t\tthis.insert(values[ix]);\n\t\t\t}\n\t\t}\n\t}\n\n\tget array(): ReadonlyArray<T> {\n\t\treturn this.data_;\n\t}\n\n\tget length() {\n\t\treturn this.data_.length;\n\t}\n\n\t// indexOf(value: T) {\n\t// \tconst successor = lowerBound(this.data_, value);\n\t// \tif (successor < 0) {\n\t// \t\treturn -1;\n\t// \t}\n\t// }\n}\n","\n/**\n * entity/array-range - instance range as a sorted array\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { SortedArray } from \"@stardazed/container\";\nimport { Instance, InstanceIterator, InstanceRange } from \"./instance\";\n\nclass InstanceArrayIterator<C> implements InstanceIterator<C> {\n\tprivate index_ = -1;\n\n\tconstructor(private readonly array_: ReadonlyArray<Instance<C>>) { }\n\n\tget current() {\n\t\treturn this.array_[this.index_];\n\t}\n\n\tnext() {\n\t\tthis.index_ += 1;\n\t\treturn this.index_ < this.array_.length;\n\t}\n}\n\n\nexport class InstanceArrayRange<C> implements InstanceRange<C> {\n\tprivate readonly data_: SortedArray<Instance<C>>;\n\n\tconstructor(array: Instance<C>[]) {\n\t\tthis.data_ = new SortedArray<Instance<C>>(array);\n\t}\n\n\tget empty() {\n\t\treturn this.data_.length === 0;\n\t}\n\n\tget front() { return this.data_.array[0]; }\n\tget back() { return this.data_.array[this.data_.length - 1]; }\n\n\thas(inst: Instance<C>) {\n\t\treturn this.data_.array.indexOf(inst) > -1;\n\t}\n\n\tmakeIterator(): InstanceIterator<C> {\n\t\treturn new InstanceArrayIterator(this.data_.array);\n\t}\n\n\tforEach(fn: (inst: Instance<C>) => void, thisObj?: any): void {\n\t\tlet index = 0;\n\t\tconst end = this.data_.length;\n\n\t\twhile (index < end) {\n\t\t\tfn.call(thisObj, this.data_.array[index]);\n\t\t\t++index;\n\t\t}\n\t}\n}\n","/**\n * entity/set-range - instance range as a set, most flexible but also slowest\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { Instance, InstanceIterator, InstanceRange } from \"./instance\";\n\nclass InstanceSetIterator<C> implements InstanceIterator<C> {\n\tcurrent: Instance<C> = 0;\n\n\tconstructor(private es6Iter: Iterator<Instance<C>>) { }\n\n\tnext() {\n\t\tconst res = this.es6Iter.next();\n\t\tthis.current = res.value || 0;\n\t\treturn !res.done;\n\t}\n}\n\nexport class InstanceSet<C> implements InstanceRange<C> {\n\tprivate data_ = new Set<Instance<C>>();\n\n\tget count() { return this.data_.size; }\n\tget empty() { return this.data_.size === 0; }\n\n\tadd(inst: Instance<C>) {\n\t\tthis.data_.add(inst);\n\t}\n\n\taddRange(inst: Instance<C>, count: number) {\n\t\tlet index = inst as number;\n\t\tconst upto = index + count;\n\t\twhile (index < upto) {\n\t\t\tthis.data_.add(index);\n\t\t\t++index;\n\t\t}\n\t}\n\n\taddArray(arr: ArrayLike<Instance<C>>) {\n\t\tfor (let ix = 0, end = arr.length; ix < end; ++ix) {\n\t\t\tthis.data_.add(arr[ix]);\n\t\t}\n\t}\n\n\tremove(inst: Instance<C>) {\n\t\tthis.data_.delete(inst);\n\t}\n\n\tremoveRange(inst: Instance<C>, count: number) {\n\t\tlet index = inst as number;\n\t\tconst upto = index + count;\n\t\twhile (index < upto) {\n\t\t\tthis.data_.delete(index);\n\t\t\t++index;\n\t\t}\n\t}\n\n\tremoveArray(arr: ArrayLike<Instance<C>>) {\n\t\tfor (let ix = 0, end = arr.length; ix < end; ++ix) {\n\t\t\tthis.data_.delete(arr[ix]);\n\t\t}\n\t}\n\n\tclear() {\n\t\tthis.data_.clear();\n\t}\n\n\thas(inst: Instance<C>): boolean {\n\t\treturn this.data_.has(inst);\n\t}\n\n\tmakeIterator(): InstanceIterator<C> {\n\t\treturn new InstanceSetIterator<C>(this.data_.values());\n\t}\n\n\tforEach(fn: (inst: Instance<C>) => void, thisObj?: any) {\n\t\tthis.data_.forEach(fn, thisObj || this);\n\t}\n}\n","/**\n * core/array - types and helpers for array-likes\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { assert } from \"./debug\";\n\n// TODO: move this out\nexport function arrayTransfer(oldBuffer: ArrayBuffer, newByteLength?: number) {\n\t// This placeholder implementation cannot detach `oldBuffer`'s storage\n\t// but `oldBuffer` is to be treated as a moved-from value in C++ terms\n\t// after calling transfer.\n\n\tconst oldByteLength = oldBuffer.byteLength;\n\tnewByteLength = newByteLength! | 0;\n\tassert(newByteLength > 0);\n\n\tif (newByteLength < oldByteLength) {\n\t\treturn oldBuffer.slice(0, newByteLength);\n\t}\n\n\tconst oldBufferView = new Uint8Array(oldBuffer);\n\tconst newBufferView = new Uint8Array(newByteLength); // also creates new ArrayBuffer\n\tnewBufferView.set(oldBufferView);\n\n\treturn newBufferView.buffer as ArrayBuffer;\n}\n\nexport type TypedArrayConstructor =\n\tUint8ArrayConstructor | Uint8ClampedArrayConstructor | Uint16ArrayConstructor | Uint32ArrayConstructor |\n\tInt8ArrayConstructor | Int16ArrayConstructor | Int32ArrayConstructor |\n\tFloat32ArrayConstructor | Float64ArrayConstructor;\n\nexport type TypedArray = Uint8Array | Uint8ClampedArray | Uint16Array | Uint32Array | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n// helper types for enums stored in int arrays\nexport interface ConstEnumArray8View<T extends number> extends Uint8Array {\n\t[index: number]: T;\n}\n\nexport interface ConstEnumArray32View<T extends number> extends Int32Array {\n\t[index: number]: T;\n}\n\n// special purpose or generic array interfaces used very frequently\nexport interface MutableArrayLike<T> {\n\treadonly length: number;\n\t[n: number]: T;\n}\n\nexport type ArrayOfConstNumber = ArrayLike<number>;\nexport type ArrayOfNumber = MutableArrayLike<number>;\n\n\n// types to use in function signatures to not have ArrayOfNumber everywhere\nexport type Float2 = ArrayOfNumber;\nexport type Float3 = ArrayOfNumber;\nexport type Float4 = ArrayOfNumber;\n\nexport type Float2x2 = ArrayOfNumber;\nexport type Float3x3 = ArrayOfNumber;\nexport type Float4x4 = ArrayOfNumber;\n\nexport type ConstFloat2 = ArrayOfConstNumber;\nexport type ConstFloat3 = ArrayOfConstNumber;\nexport type ConstFloat4 = ArrayOfConstNumber;\n\nexport type ConstFloat2x2 = ArrayOfConstNumber;\nexport type ConstFloat3x3 = ArrayOfConstNumber;\nexport type ConstFloat4x4 = ArrayOfConstNumber;\n","/**\n * entity/entity - entities and shared interfaces\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { arrayTransfer } from \"@stardazed/core\";\nimport { Deque } from \"@stardazed/container\";\nimport { Instance, InstanceArrayView } from \"./instance\";\n\nexport type Entity = Instance<EntityManager>;\nexport type EntityArrayView = InstanceArrayView<EntityManager>;\n\n\n// -- Entity bit-field build up\nconst entityIndexBits = 23; // numbers are signed int32 types internally in browsers when not used as int\nconst entityGenerationBits = 8;\nconst entityIndexMask = (1 << entityIndexBits) - 1;\nconst entityGenerationMask = (1 << entityGenerationBits) - 1;\n\nexport function entityGeneration(ent: Entity) {\n\treturn ((ent as number) >> entityIndexBits) & entityGenerationMask;\n}\n\nexport function entityIndex(ent: Entity) {\n\treturn (ent as number) & entityIndexMask;\n}\n\nfunction makeEntity(index: number, generation: number): Entity {\n\treturn ((generation & entityGenerationMask) << entityIndexBits) | (index & entityIndexMask);\n}\n\n\nexport class EntityManager {\n\tprivate generation_: Uint8Array;\n\tprivate genCount_: number;\n\tprivate freedIndices_: Deque<number>;\n\n\tprivate minFreedBuildup = 1024;\n\n\tconstructor() {\n\t\tthis.generation_ = new Uint8Array(8192);\n\t\tthis.freedIndices_ = new Deque<number>();\n\t\tthis.genCount_ = -1;\n\n\t\t// reserve entity id 0\n\t\tthis.appendGeneration();\n\t}\n\n\tprivate appendGeneration() {\n\t\tif (this.genCount_ === this.generation_.length) {\n\t\t\t// grow generation array\n\t\t\tconst newBuffer = arrayTransfer(this.generation_.buffer as ArrayBuffer, this.generation_.length * 2);\n\t\t\tthis.generation_ = new Uint8Array(newBuffer);\n\t\t}\n\n\t\t++this.genCount_;\n\t\tthis.generation_[this.genCount_] = 0;\n\t\treturn this.genCount_;\n\t}\n\n\tcreate(): Entity {\n\t\tlet index: number;\n\n\t\tif (this.freedIndices_.count >= this.minFreedBuildup) {\n\t\t\tindex = this.freedIndices_.front;\n\t\t\tthis.freedIndices_.popFront();\n\t\t}\n\t\telse {\n\t\t\tindex = this.appendGeneration();\n\t\t}\n\n\t\treturn makeEntity(index, this.generation_[index]);\n\t}\n\n\talive(ent: Entity) {\n\t\t// explicitly \"inlined\" calls to entityIndex/Generation as this method will be called a lot\n\t\tconst index = (ent as number) & entityIndexMask;\n\t\tconst generation = ((ent as number) >> entityIndexBits) & entityGenerationMask;\n\t\treturn index <= this.genCount_ && (generation === this.generation_[index]);\n\t}\n\n\tdestroy(ent: Entity) {\n\t\tconst index = entityIndex(ent);\n\t\tthis.generation_[index]++;\n\t\tthis.freedIndices_.append(index);\n\t}\n}\n","/**\n * @stardazed/entity - entities, instances and components\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nexport * from \"./instance\";\nexport * from \"./linear-range\";\nexport * from \"./array-range\";\nexport * from \"./set-range\";\n\nexport * from \"./entity\";\nexport * from \"./component\";\n"],"names":["clampf","clamp01f","mixf","ELEMENT_COUNT","zero","create","sub","subtract","mul","multiply","div","divide","dist","distance","sqrDist","squaredDistance","len","length","sqrLen","squaredLength","scale","dot","clone","normalize","vec3.create","vec3.fromValues","vec3.dot","vec3.cross","vec3.length","vec3.normalize","mat3Create","vec4.clone","fromValues","vec4.fromValues","copy","vec4.copy","set","vec4.set","add","vec4.add","vec4.scale","vec4.dot","lerp","vec4.lerp","vec4.length","vec4.squaredLength","vec4.normalize","exactEquals","vec4.exactEquals","equals","vec4.equals","identity","Float","vec3.scaleAndAdd","vec3.subtract","vec3.scale","vec3.add","vec3.transformMat3","vec3.min","vec3.max","vec3.transformMat4","assert"],"mappings":"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CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAElC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEpC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAE3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAE3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAA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C,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxG,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,G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;IACD,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAEhB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAEpD,OAAO,GAAG,CAAC;CACX;AAID,mBAAwB,GAAO,EAAE,CAAM;IACtC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACnD,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAC9C,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAChD,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAEpD,GAAG,CAAC,CAAC,CAAC,IAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,GAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,IAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,GAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,GAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,IAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,GAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,IAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,IAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,CAAC,CAAC,GAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,EAAE,CAAC,IAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3G,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC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,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IAEnD,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IAEnD,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG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C,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;IAG5E,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3C,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC5C,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,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,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACxB,OAAO,GAAG,CAAC;CACX;AAED,MAAa7C,KAAG,GAAGC,UAAQ,CAAC;AAI5B,0BAA+B,GAAO,EAAE,CAAM,EAAE,KAAa;IAC5D,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;IACxB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;IACxB,OAAO,GAAG,CAAC;CACX;AAID,gCAAqC,GAAO,EAAE,CAAM,EAAE,CAAM,EAAE,KAAa;IAC1E,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,C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,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5E,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5E,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5E,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5E,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,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"}