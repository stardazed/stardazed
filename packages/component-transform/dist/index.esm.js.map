{"version":3,"file":"index.esm.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * @stardazed/transform-component - Transform component\n * Part of Stardazed\n * (c) 2015-Present by Arthur Langereis - @zenmumbler\n * https://github.com/stardazed/stardazed\n */\n\nimport { assert, Float, Float3, Float4, SInt32, Float4x4, NumArray } from \"@stardazed/core\";\nimport { MABField, MultiArrayBuffer, InvalidatePointers, copyIndexedMat4, refIndexedMat4, copyIndexedVec3, copyIndexedVec4 } from \"@stardazed/container\";\nimport { Component, Entity, EntityArrayView, Instance, InstanceSet, InstanceArrayView, InstanceIterator, InstanceRange, InstanceLinearRange, entityIndex } from \"@stardazed/entity\";\nimport { quat, vec3, mat4 } from \"@stardazed/math\";\n\nexport interface Transform {\n\tposition: Float3;\n\trotation?: Float4; // quat\n\tscale?: Float3;\n}\n\nexport type TransformInstance = Instance<TransformComponent>;\nexport type TransformRange = InstanceRange<TransformComponent>;\nexport type TransformSet = InstanceSet<TransformComponent>;\nexport type TransformIterator = InstanceIterator<TransformComponent>;\nexport type TransformArrayView = InstanceArrayView<TransformComponent>;\n\nexport class TransformComponent implements Component<TransformComponent> {\n\tprivate instanceData_: MultiArrayBuffer;\n\n\tprivate entityBase_!: EntityArrayView;\n\n\tprivate parentBase_!: TransformArrayView;\n\tprivate firstChildBase_!: TransformArrayView;\n\tprivate prevSiblingBase_!: TransformArrayView;\n\tprivate nextSiblingBase_!: TransformArrayView;\n\n\tprivate positionBase_!: Float32Array;\n\tprivate rotationBase_!: Float32Array;\n\tprivate scaleBase_!: Float32Array;\n\tprivate localMatrixBase_!: Float32Array;\n\tprivate worldMatrixBase_!: Float32Array;\n\n\tprivate readonly defaultPos_: Float3 = vec3.zero();\n\tprivate readonly defaultRot_: Float4 = quat.create();\n\tprivate readonly defaultScale_: Float3 = vec3.one();\n\n\tconstructor() {\n\t\tconst instanceFields: MABField[] = [\n\t\t\t{ type: SInt32, count: 1 }, // entity\n\n\t\t\t{ type: SInt32, count: 1 }, // parentInstance\n\t\t\t{ type: SInt32, count: 1 }, // firstChild\n\t\t\t{ type: SInt32, count: 1 }, // prevSibling\n\t\t\t{ type: SInt32, count: 1 }, // nextSibling\n\n\t\t\t{ type: Float, count: 3 },  // position\n\t\t\t{ type: Float, count: 4 },  // rotation\n\t\t\t{ type: Float, count: 3 },  // scale\n\n\t\t\t{ type: Float, count: 16 }, // localMatrix\n\t\t\t{ type: Float, count: 16 }  // worldMatrix\n\t\t];\n\t\tthis.instanceData_ = new MultiArrayBuffer(2048, instanceFields); // 376 KiB\n\n\t\tthis.rebase();\n\t}\n\n\trebase() {\n\t\tthis.entityBase_ = this.instanceData_.indexedFieldView(0);\n\n\t\tthis.parentBase_ = this.instanceData_.indexedFieldView(1);\n\t\tthis.firstChildBase_ = this.instanceData_.indexedFieldView(2);\n\t\tthis.prevSiblingBase_ = this.instanceData_.indexedFieldView(3);\n\t\tthis.nextSiblingBase_ = this.instanceData_.indexedFieldView(4);\n\n\t\tthis.positionBase_ = this.instanceData_.indexedFieldView(5) as Float32Array;\n\t\tthis.rotationBase_ = this.instanceData_.indexedFieldView(6) as Float32Array;\n\t\tthis.scaleBase_ = this.instanceData_.indexedFieldView(7) as Float32Array;\n\n\t\tthis.localMatrixBase_ = this.instanceData_.indexedFieldView(8) as Float32Array;\n\t\tthis.worldMatrixBase_ = this.instanceData_.indexedFieldView(9) as Float32Array;\n\t}\n\n\n\tcreate(linkedEntity: Entity, parent?: TransformInstance): TransformInstance;\n\tcreate(linkedEntity: Entity, desc?: Transform, parent?: TransformInstance): TransformInstance;\n\tcreate(linkedEntity: Entity, descOrParent?: Transform | TransformInstance, parent?: TransformInstance): TransformInstance {\n\t\tconst entIndex = entityIndex(linkedEntity);\n\n\t\tif (this.instanceData_.count < entIndex) {\n\t\t\tif (this.instanceData_.resize(entIndex) === InvalidatePointers.Yes) {\n\t\t\t\tthis.rebase();\n\t\t\t}\n\t\t}\n\n\t\tconst thisInstance = entIndex;\n\t\tlet parentInstance = 0;\n\t\tlet descriptor: Transform | null = null;\n\n\t\tthis.entityBase_[thisInstance] = linkedEntity;\n\n\t\tif (descOrParent) {\n\t\t\tif (typeof descOrParent === \"number\") {\n\t\t\t\tparentInstance = descOrParent as number;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdescriptor = descOrParent as Transform;\n\t\t\t\tparentInstance = parent as number; // can be 0\n\t\t\t}\n\t\t}\n\t\telse if (typeof parent === \"number\") {\n\t\t\tparentInstance = parent as number;\n\t\t}\n\n\t\tif (parentInstance) {\n\t\t\tthis.parentBase_[thisInstance] = parentInstance;\n\t\t\tlet myPrevSibling = this.firstChildBase_[parentInstance] as number;\n\n\t\t\tif (myPrevSibling) {\n\t\t\t\tassert(this.prevSiblingBase_[myPrevSibling] === 0, \"firstChild cannot have prev siblings\");\n\n\t\t\t\t// find end of child chain\n\t\t\t\twhile (this.nextSiblingBase_[myPrevSibling] !== 0) {\n\t\t\t\t\tmyPrevSibling = this.nextSiblingBase_[myPrevSibling] as number;\n\t\t\t\t}\n\n\t\t\t\t// append self to parent's child list\n\t\t\t\tthis.nextSiblingBase_[myPrevSibling] = thisInstance;\n\t\t\t\tthis.prevSiblingBase_[thisInstance] = myPrevSibling;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.firstChildBase_[parentInstance] = thisInstance;\n\t\t\t\tthis.prevSiblingBase_[thisInstance] = 0;\n\t\t\t\tthis.nextSiblingBase_[thisInstance] = 0;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.parentBase_[thisInstance] = 0;\n\t\t\tthis.prevSiblingBase_[thisInstance] = 0;\n\t\t\tthis.nextSiblingBase_[thisInstance] = 0;\n\t\t}\n\n\n\t\tif (descriptor) {\n\t\t\t// optional descriptor fields\n\t\t\tconst rotation = descriptor.rotation || this.defaultRot_;\n\t\t\tconst scale = descriptor.scale || this.defaultScale_;\n\n\t\t\tthis.positionBase_.set(descriptor.position, thisInstance * vec3.ELEMENT_COUNT);\n\t\t\tthis.rotationBase_.set(rotation, thisInstance * quat.ELEMENT_COUNT);\n\t\t\tthis.scaleBase_.set(scale, thisInstance * vec3.ELEMENT_COUNT);\n\n\t\t\tthis.setLocalMatrix(thisInstance, rotation, descriptor.position, scale);\n\t\t}\n\t\telse {\n\t\t\tthis.positionBase_.set(this.defaultPos_, thisInstance * quat.ELEMENT_COUNT);\n\t\t\tthis.rotationBase_.set(this.defaultRot_, thisInstance * quat.ELEMENT_COUNT);\n\t\t\tthis.scaleBase_.set(this.defaultScale_, thisInstance * vec3.ELEMENT_COUNT);\n\n\t\t\tthis.setLocalMatrix(thisInstance, this.defaultRot_, this.defaultPos_, this.defaultScale_);\n\t\t}\n\n\t\treturn thisInstance;\n\t}\n\n\n\tdestroy(_inst: TransformInstance) {\n\t\t// TBI\n\t}\n\n\n\tdestroyRange(range: TransformRange) {\n\t\tconst iter = range.makeIterator();\n\t\twhile (iter.next()) {\n\t\t\tthis.destroy(iter.current);\n\t\t}\n\t}\n\n\n\tget count() { return this.instanceData_.count; }\n\n\tvalid(inst: TransformInstance) {\n\t\treturn (inst as number) <= this.count;\n\t}\n\n\tall(): TransformRange {\n\t\treturn new InstanceLinearRange<TransformComponent>(1, this.count);\n\t}\n\n\n\t// Entity -> TransformInstance mapping\n\tforEntity(ent: Entity): TransformInstance {\n\t\tconst index = entityIndex(ent);\n\t\tif (index > 0 && index <= this.instanceData_.count) {\n\t\t\treturn ent as Instance<any> as TransformInstance;\n\t\t}\n\n\t\tassert(false, `No transform for entity ${index}`);\n\t\treturn 0;\n\t}\n\n\n\t// -- single instance getters\n\tentity(inst: TransformInstance): Entity { return this.entityBase_[inst as number]; }\n\n\tparent(inst: TransformInstance): TransformInstance { return this.parentBase_[inst as number]; }\n\tfirstChild(inst: TransformInstance): TransformInstance { return this.firstChildBase_[inst as number]; }\n\tprevSibling(inst: TransformInstance): TransformInstance { return this.prevSiblingBase_[inst as number]; }\n\tnextSibling(inst: TransformInstance): TransformInstance { return this.nextSiblingBase_[inst as number]; }\n\n\tlocalPosition(inst: TransformInstance) { return copyIndexedVec3(this.positionBase_, inst as number); }\n\tlocalRotation(inst: TransformInstance) { return copyIndexedVec4(this.rotationBase_, inst as number); }\n\tlocalScale(inst: TransformInstance) { return copyIndexedVec3(this.scaleBase_, inst as number); }\n\n\tworldPosition(inst: TransformInstance): number[] {\n\t\tconst matOffset = inst as number * 16;\n\t\treturn [this.worldMatrixBase_[matOffset + 12], this.worldMatrixBase_[matOffset + 13], this.worldMatrixBase_[matOffset + 14]];\n\t}\n\n\tlocalMatrix(inst: TransformInstance) { return refIndexedMat4(this.localMatrixBase_, inst as number); }\n\tworldMatrix(inst: TransformInstance) { return refIndexedMat4(this.worldMatrixBase_, inst as number); }\n\n\tcopyLocalMatrix(inst: TransformInstance) { return copyIndexedMat4(this.localMatrixBase_, inst as number); }\n\tcopyWorldMatrix(inst: TransformInstance) { return copyIndexedMat4(this.worldMatrixBase_, inst as number); }\n\n\n\t// update the world matrices of inst and all of its children\n\tprivate applyParentTransform(parentMatrix: Float4x4, inst: TransformInstance) {\n\t\tconst localMat = this.localMatrix(inst);\n\t\tconst worldMat = this.worldMatrix(inst);\n\t\tmat4.multiply(worldMat, parentMatrix, localMat);\n\n\t\tlet child = this.firstChildBase_[inst as number] as number;\n\t\twhile (child !== 0) {\n\t\t\tthis.applyParentTransform(worldMat, child);\n\t\t\tchild = this.nextSiblingBase_[child] as number;\n\t\t}\n\t}\n\n\n\t// two overloads: one with new matrix, one with transform components\n\tsetLocalMatrix(inst: TransformInstance, newLocalMatrix: Float4x4): void;\n\tsetLocalMatrix(inst: TransformInstance, newRotation: Float4, newPosition: Float3, newScale: Float3): void;\n\tsetLocalMatrix(inst: TransformInstance, localMatOrRot: NumArray, newPosition?: Float3, newScale?: Float3) {\n\t\tconst localMat = refIndexedMat4(this.localMatrixBase_, inst as number);\n\t\tif (arguments.length === 4) {\n\t\t\tmat4.fromRotationTranslationScale(localMat, localMatOrRot, newPosition!, newScale!);\n\t\t}\n\t\telse {\n\t\t\tlocalMat.set(localMatOrRot); // 4x4 mat\n\t\t}\n\n\t\tconst parent = this.parentBase_[inst as number];\n\t\tconst firstChild = this.firstChildBase_[inst as number];\n\n\t\t// -- optimization for root-level, childless entities (of which I have seen there are many, but this may/will change)\n\t\tif (parent || firstChild) {\n\t\t\tconst parentWorldMat = (parent === 0) ? mat4.create() : this.worldMatrix(parent);\n\t\t\tthis.applyParentTransform(parentWorldMat, inst);\n\t\t}\n\t\telse {\n\t\t\tmat4.copy(this.worldMatrix(inst), localMat);\n\t\t}\n\t}\n\n\n\tprivate removeFromParent(inst: TransformInstance) {\n\t\tconst index = inst as number;\n\t\tconst parentIndex = this.parentBase_[index] as number;\n\n\t\tif (! parentIndex) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstChild = this.firstChildBase_[parentIndex];\n\t\tconst prevSibling = this.prevSiblingBase_[index] as number;\n\t\tconst nextSibling = this.nextSiblingBase_[index] as number;\n\n\t\tif (firstChild === index) {\n\t\t\tthis.firstChildBase_[parentIndex] = nextSibling;\n\t\t}\n\t\tif (prevSibling) {\n\t\t\tthis.nextSiblingBase_[prevSibling] = nextSibling;\n\t\t\tthis.prevSiblingBase_[index] = 0;\n\t\t}\n\t\tif (nextSibling) {\n\t\t\tthis.prevSiblingBase_[nextSibling] = prevSibling;\n\t\t\tthis.nextSiblingBase_[index] = 0;\n\t\t}\n\n\t\tthis.parentBase_[index] = 0;\n\t}\n\n\n\tsetParent(inst: TransformInstance, newParent: TransformInstance) {\n\t\tconst thisIndex = inst as number;\n\t\tconst parentIndex = newParent as number;\n\n\t\tthis.removeFromParent(inst);\n\n\t\tif (parentIndex) {\n\t\t\tthis.parentBase_[thisIndex] = parentIndex as number;\n\t\t\tlet myPrevSibling = this.firstChildBase_[parentIndex] as number;\n\n\t\t\tif (myPrevSibling) {\n\t\t\t\t// find end of child chain\n\t\t\t\twhile (this.nextSiblingBase_[myPrevSibling] !== 0) {\n\t\t\t\t\tmyPrevSibling = this.nextSiblingBase_[myPrevSibling] as number;\n\t\t\t\t}\n\n\t\t\t\t// append self to parent's child list\n\t\t\t\tthis.nextSiblingBase_[myPrevSibling] = thisIndex;\n\t\t\t\tthis.prevSiblingBase_[thisIndex] = myPrevSibling;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// create new chain with self at front\n\t\t\t\tthis.firstChildBase_[parentIndex] = thisIndex;\n\t\t\t\tthis.prevSiblingBase_[thisIndex] = 0;\n\t\t\t\tthis.nextSiblingBase_[thisIndex] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tsetPosition(inst: TransformInstance, newPosition: Float3) {\n\t\tthis.positionBase_.set(newPosition, inst as number * vec3.ELEMENT_COUNT);\n\t\tthis.setLocalMatrix(inst, this.localRotation(inst), newPosition, this.localScale(inst));\n\t}\n\n\tsetRotation(inst: TransformInstance, newRotation: Float4) {\n\t\tthis.rotationBase_.set(newRotation, inst as number * quat.ELEMENT_COUNT);\n\t\tthis.setLocalMatrix(inst, newRotation, this.localPosition(inst), this.localScale(inst));\n\t}\n\n\tsetPositionAndRotation(inst: TransformInstance, newPosition: Float3, newRotation: Float4) {\n\t\tthis.positionBase_.set(newPosition, inst as number * vec3.ELEMENT_COUNT);\n\t\tthis.rotationBase_.set(newRotation, inst as number * quat.ELEMENT_COUNT);\n\t\tthis.setLocalMatrix(inst, newRotation, newPosition, this.localScale(inst));\n\t}\n\n\tsetScale(inst: TransformInstance, newScale: Float3) {\n\t\tthis.scaleBase_.set(newScale, inst as number * vec3.ELEMENT_COUNT);\n\t\tthis.setLocalMatrix(inst, this.localRotation(inst), this.localPosition(inst), newScale);\n\t}\n\n\tsetPositionAndRotationAndScale(inst: TransformInstance, newPosition: Float3, newRotation: Float4, newScale: Float3) {\n\t\tthis.positionBase_.set(newPosition, inst as number * vec3.ELEMENT_COUNT);\n\t\tthis.rotationBase_.set(newRotation, inst as number * quat.ELEMENT_COUNT);\n\t\tthis.scaleBase_.set(newScale, inst as number * vec3.ELEMENT_COUNT);\n\t\tthis.setLocalMatrix(inst, newRotation, newPosition, newScale);\n\t}\n\n\n\t// -- relative transform helpers\n\n\ttranslate(inst: TransformInstance, localDelta3: Float3) {\n\t\tconst pos = this.localPosition(inst);\n\t\tthis.setPosition(inst, [pos[0] + localDelta3[0], pos[1] + localDelta3[1], pos[2] + localDelta3[2]]);\n\t}\n\n\trotate(inst: TransformInstance, localRot: Float4) {\n\t\tthis.setRotation(inst, quat.multiply([], this.localRotation(inst), localRot));\n\t}\n\n\trotateRelWorld(inst: TransformInstance, worldRot: Float4) {\n\t\tthis.setRotation(inst, quat.multiply([], worldRot, this.localRotation(inst)));\n\t}\n\n\trotateByAngles(inst: TransformInstance, localAng: Float3) {\n\t\tconst rot = this.localRotation(inst);\n\t\tconst q = quat.fromEuler(localAng[2], localAng[1], localAng[0]);\n\t\tthis.setRotation(inst, quat.multiply([], rot, q));\n\t}\n}\n"],"names":[],"mappings":"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"}